<?xml version="1.0" encoding="UTF-8"?><APPLICATION NAME="RGA - 6.1">
  <PACKAGE NAME="MS_RGA_ALERT_OBJECT_RELATION_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_ALERT_OBJECT_RELATION_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="36" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_ALERT_OBJECT_RELATION_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="122" LINES="99" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="207" LINES="81" START_COLUMN="15" START_LINE="127"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="761" LINES="540" START_COLUMN="15" START_LINE="222"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="36" END_LINE="762" LINES="762" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_ALERT_OBJECT_RE_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_ALERT_OBJECT_RE_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_ALERT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_ALERT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_ALERT_OBJECT_RE_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_ALERT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_ALERT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_ATTACHMENT_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_ATTACHMENT_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_ATTACHMENT_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_ATTACHMENT_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_ATTACHMENT_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="9" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="56" LINES="56" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_ATTACHMENT_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="21" LINES="9" START_COLUMN="15" START_LINE="13"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="103" LINES="82" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="187" LINES="79" START_COLUMN="15" START_LINE="109"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="455" LINES="262" START_COLUMN="15" START_LINE="194"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="457" LINES="457" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_CHANNEL_DTLS_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_CHANNEL_DTLS_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_CHANNEL_DTLS_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_CHANNEL_DTLS_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_CHANNEL_DTLS_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_CHANNEL_DTLS_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="128" LINES="105" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="213" LINES="81" START_COLUMN="15" START_LINE="133"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="893" LINES="670" START_COLUMN="15" START_LINE="224"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="894" LINES="894" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_CONTENT_BROWSER_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_CONTENT_BROWSER_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_CONTENT_BROWSER_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_CONTENT_BROWSER_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_CONTENT_BROWSER_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_CONTENT_BROWSER_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="107" LINES="84" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="192" LINES="81" START_COLUMN="15" START_LINE="112"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="589" LINES="385" START_COLUMN="15" START_LINE="205"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="591" LINES="591" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_EMAIL_CONTENT_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_EMAIL_CONTENT_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_EMAIL_CONTENT_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_EMAIL_CONTENT_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_EMAIL_CONTENT_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_EMAIL_CONTENT_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="21" LINES="9" START_COLUMN="15" START_LINE="13"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="103" LINES="82" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="187" LINES="79" START_COLUMN="15" START_LINE="109"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="497" LINES="304" START_COLUMN="15" START_LINE="194"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="499" LINES="499" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_HELPER" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[ ----------------------------------------------------------------------------------------------
CHANGE HISTORY
---------------------------------------------------------------------------------------------
 Created By :
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ----------------------------------------------------------------------------------------------
CHANGE HISTORY
---------------------------------------------------------------------------------------------
 Created By :
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="UPDATE_OUT_DATA">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="61" END_LINE="22" LINES="9" START_COLUMN="13" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA1">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="62" END_LINE="32" LINES="9" START_COLUMN="13" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_NOTIFY_USERS">
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="68" END_LINE="38" LINES="5" START_COLUMN="13" START_LINE="34"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA_ISM">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="65" END_LINE="48" LINES="9" START_COLUMN="13" START_LINE="40"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA_MYSUBS">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="77" END_LINE="57" LINES="8" START_COLUMN="13" START_LINE="50"/>
    </PROCEDURE>
    <FUNCTION NAME="CHECK_EXP">
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="61" LINES="3" START_COLUMN="12" START_LINE="59"/>
    </FUNCTION>
    <PROCEDURE NAME="POSTHOOK_PROC">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="51" END_LINE="71" LINES="9" START_COLUMN="13" START_LINE="63"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="18" END_LINE="73" LINES="73" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_HELPER" SCHEMA="Schema_objects">
    <VARIABLE NAME="LN_VERSION_NUMBER">
      <COMMENT_FIRST_LINE><![CDATA[ ----------------------------------------------------------------------------------------------
CHANGE HISTORY 11-Sept-2012
---------------------------------------------------------------------------------------------
 Created By :----
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ----------------------------------------------------------------------------------------------
CHANGE HISTORY 11-Sept-2012
---------------------------------------------------------------------------------------------
 Created By :----
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="L_MS_TABLE_COUNT">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="LV_DD_OBJECT_TYPE">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="0" NAME="LV_NUMBER">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE DEFAULT="''" NAME="LV_STRING">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_CODE" NAME="G_SUCCESS_CODE">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_MESG" NAME="G_SUCCESS_MESG">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'RGA'" NAME="G_MODULE_NAME">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'Ms_Rga_Helper'" NAME="G_PACKAGE_NAME">
      <RETURN TYPE="VARCHAR2(50)"/>
    </CONSTANT>
    <VARIABLE DEFAULT="'LOGISSUE'" NAME="G_ACTION">
      <RETURN TYPE="VARCHAR2(12)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="NULL" NAME="G_REC_KEY">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="G_LOG_RGA_MSGS">
      <RETURN TYPE="BOOLEAN"/>
    </VARIABLE>
    <VARIABLE NAME="G_RUNNING_LOG_NMBR">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="G_LOG_KEY">
      <RETURN TYPE="VARCHAR2(15)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'RGAUTIL'" NAME="G_CTX_ACTION">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'RGA'" NAME="G_CTX_MODULE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="G_CTX_USER">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="G_PLAN_NAME">
      <RETURN TYPE="MS_RGA_LOG_ISSUES.OBJECT_ID%TYPE"/>
    </VARIABLE>
    <PROCEDURE NAME="DEBUG">
      <ARGUMENT MODE="IN" NAME="I_MSG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="G_MODULE_NAME" MODE="IN" NAME="I_MSG_TYPE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="13" END_LINE="116" LINES="85" START_COLUMN="13" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="382" LINES="265" START_COLUMN="11" START_LINE="118"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_VALUE_TO_NON_MULTIROW">
      <COMMENT_FIRST_LINE><![CDATA[=======================================================
PROCEDURE NAME:  Insert_Value_To_Non_Multirow
=======================================================
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[=======================================================
PROCEDURE NAME:  Insert_Value_To_Non_Multirow
=======================================================
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_FIELD_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_FIELD_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PT_OUT_DATA_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="431" LINES="45" START_COLUMN="11" START_LINE="387"/>
    </PROCEDURE>
    <PROCEDURE NAME="MULTI_ROW_ID_SETTING_GRCI_CHN">
      <COMMENT_FIRST_LINE><![CDATA[---------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[---------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PT_OUT_DATA_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="558" LINES="125" START_COLUMN="11" START_LINE="434"/>
    </PROCEDURE>
    <PROCEDURE NAME="MULTI_ROW_ID_SETTING">
      <COMMENT_FIRST_LINE><![CDATA[---------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[---------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PT_OUT_DATA_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="763" LINES="199" START_COLUMN="11" START_LINE="565"/>
    </PROCEDURE>
    <PROCEDURE NAME="MULTI_ROW_DEFAULT_SETTING">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="'BOTH'" MODE="IN" NAME="PV_SETMODE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="'NONPUBLISH'" MODE="IN" NAME="PV_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PT_OUT_DATA_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="1065" LINES="299" START_COLUMN="11" START_LINE="767"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_COMMON_FLOW">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1162" LINES="95" START_COLUMN="11" START_LINE="1068"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_ISM_INTEGRATION">
      <ARGUMENT MODE="IN" NAME="PT_OUT_DATA" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PV_DD_CURRENT_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="1417" LINES="253" START_COLUMN="11" START_LINE="1165"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_ALERT">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1666" LINES="248" START_COLUMN="12" START_LINE="1419"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_NOTIFY_USER">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="1891" LINES="224" START_COLUMN="11" START_LINE="1668"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_MY_SUBSCRIPTION">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="2033" LINES="139" START_COLUMN="11" START_LINE="1895"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_INFOLET_INV">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="2331" LINES="297" START_COLUMN="11" START_LINE="2035"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_CHANNEL_DETAILS">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="2607" LINES="275" START_COLUMN="11" START_LINE="2333"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_RULESET">
      <COMMENT_FIRST_LINE><![CDATA[   PROCEDURE Pr_Manage_Channel_Details(Pc_Process_Code    In Varchar2,
Pv_Transition_From In Varchar2,
Pv_Transition_To   In Varchar2,
pn_Error_Handle_Id In Number,
pt_Out_Data        In Out Nocopy Clob,
pt_In_Data         In Out Nocopy Clob,
Pn_Error_Sequence  In Out Nocopy Number,
pn_error_code      Out Number,
pv_error_message   Out Varchar2)
IS
lv_Custom_Field_6         ms_rga_channel_dtls_src.custom_field6%type;
lv_Object_Id                  VARCHAR2(100):='';
lv_Issue_Id                   VARCHAR2(100):='';
lv_Object_Name                VARCHAR2(200);
lv_Progress_status            VARCHAR2(1000);
Lt_Out_Data_Xml               Xmltype;
Lt_In_Data_Xml                Xmltype;
Lv_Proc                       Varchar2(4000) := 'Ms_Rga_Helper.Pr_Manage_Channel_Details =&gt; ';
Ln_Iop_Log_No                 Number := 0;
Ln_Process_Instance_Id        Number;
Lv_Object_Action              Varchar2(100);
Lv_L1_Approver                Varchar2(100);
Lv_Dd_Current_User_Name       Varchar2(100);
Lv_Dd_Event_User_Name         Varchar2(100);
Lv_Is_Owner                   Varchar2(100);
Ln_Instance_Id                Number;
Lv_Metric_Id                  Varchar2(100);
Ln_Orig_Pid                   Number;
Ln_Error_Code                 Number;
Lv_Error_Message              Varchar2(4000);
Ex_Id_Generation              Exception;
Ex_Etl_Call                   Exception;
Begin
Debug(Lv_Proc || 'Inside Pr_Manage_Channel_Details_New');
Lt_Out_Data_Xml := Xmltype(pt_Out_Data); --Taking the whole XML into Lt_Out_Data_Xml

SELECT        Object_Id,
Process_Instance_Id,
Dd_Current_User_Name,
Dd_Event_User_Name,
dd_object_type,
Custom_Field6
Into    lv_Object_Id,
Ln_Process_Instance_Id,
Lv_Dd_Current_User_Name,
Lv_Dd_Event_User_Name,
Lv_dd_object_type,
lv_Custom_Field_6
FROM XMLTABLE(XMLNAMESPACES('http://www.metricstream.com/appstudio/msa' AS "msa"),
'for $i in /msa:datapacket/msa:data/msa:nonmultirow
return $i'
PASSING Lt_Out_Data_Xml
COLUMNS
Object_id                    VARCHAR2(200)        PATH            'msa:object_id',
Process_Instance_Id          NUMBER               PATH            'msa:process_instance_id',
Dd_Current_User_Name         VARCHAR2(4000)       PATH            'msa:dd_current_user_name',
Dd_Event_User_Name           VARCHAR2(4000)       PATH            'msa:dd_event_user_name',
dd_object_type                VARCHAR2(4000)       PATH            'msa:dd_object_type',
CUSTOM_FIELD6                 VARCHAR2(4000)       PATH            'msa:custom_field6'
);
insert into test_girish (col1,col2,col3) values (lv_Object_Id,lv_Custom_Field_6,sysdate);
commit;
IF(lv_Custom_Field_6 = 'N')  THEN
Setting the multiRow primary  key value
Multi_Row_Id_Setting(pn_Error_Handle_Id,
Pc_Process_Code,
Ln_Process_Instance_Id,
pn_Error_Sequence,
Lt_Out_Data_Xml,
pn_error_code ,
pv_error_message  );

Multi_Row_Default_Setting( Pc_Process_Code,
Ln_Process_Instance_Id,
'BOTH',
'NONPUBLISH',
pn_Error_Handle_Id,
pn_Error_Sequence,
Lt_Out_Data_Xml,
pn_error_code,
pv_error_message);
If (Lv_Object_id Is Null  Or Pv_Transition_To &lt;&gt; 'CREATE_EDIT')  THEN
Debug(Lv_Proc || ' Calling ms_apps_utilities.get_next_id');
ms_apps_utilities.get_next_id ('RGA',
'chn_obj_id',--'log_issue_id',
'MS_RGA_CHANNEL_DTLS',
Ln_Process_Instance_Id,
Lv_Object_id,
ln_error_code,
lv_error_message
);
Debug(Lv_Proc || 'Lv_Object_id - '||Lv_Object_id);
Setting  the Object_id first time
Insert_Value_To_Non_Multirow('object_id',
Lv_Object_id,
pn_Error_Handle_Id,
pn_Error_Sequence,
Lt_Out_Data_Xml,
pn_error_code,
pv_error_message);

End If;


Request Clarification from Owner to Initiator &gt; Defaulting Action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[   PROCEDURE Pr_Manage_Channel_Details(Pc_Process_Code    In Varchar2,
Pv_Transition_From In Varchar2,
Pv_Transition_To   In Varchar2,
pn_Error_Handle_Id In Number,
pt_Out_Data        In Out Nocopy Clob,
pt_In_Data         In Out Nocopy Clob,
Pn_Error_Sequence  In Out Nocopy Number,
pn_error_code      Out Number,
pv_error_message   Out Varchar2)
IS
lv_Custom_Field_6         ms_rga_channel_dtls_src.custom_field6%type;
lv_Object_Id                  VARCHAR2(100):='';
lv_Issue_Id                   VARCHAR2(100):='';
lv_Object_Name                VARCHAR2(200);
lv_Progress_status            VARCHAR2(1000);
Lt_Out_Data_Xml               Xmltype;
Lt_In_Data_Xml                Xmltype;
Lv_Proc                       Varchar2(4000) := 'Ms_Rga_Helper.Pr_Manage_Channel_Details =&gt; ';
Ln_Iop_Log_No                 Number := 0;
Ln_Process_Instance_Id        Number;
Lv_Object_Action              Varchar2(100);
Lv_L1_Approver                Varchar2(100);
Lv_Dd_Current_User_Name       Varchar2(100);
Lv_Dd_Event_User_Name         Varchar2(100);
Lv_Is_Owner                   Varchar2(100);
Ln_Instance_Id                Number;
Lv_Metric_Id                  Varchar2(100);
Ln_Orig_Pid                   Number;
Ln_Error_Code                 Number;
Lv_Error_Message              Varchar2(4000);
Ex_Id_Generation              Exception;
Ex_Etl_Call                   Exception;
Begin
Debug(Lv_Proc || 'Inside Pr_Manage_Channel_Details_New');
Lt_Out_Data_Xml := Xmltype(pt_Out_Data); --Taking the whole XML into Lt_Out_Data_Xml

SELECT        Object_Id,
Process_Instance_Id,
Dd_Current_User_Name,
Dd_Event_User_Name,
dd_object_type,
Custom_Field6
Into    lv_Object_Id,
Ln_Process_Instance_Id,
Lv_Dd_Current_User_Name,
Lv_Dd_Event_User_Name,
Lv_dd_object_type,
lv_Custom_Field_6
FROM XMLTABLE(XMLNAMESPACES('http://www.metricstream.com/appstudio/msa' AS "msa"),
'for $i in /msa:datapacket/msa:data/msa:nonmultirow
return $i'
PASSING Lt_Out_Data_Xml
COLUMNS
Object_id                    VARCHAR2(200)        PATH            'msa:object_id',
Process_Instance_Id          NUMBER               PATH            'msa:process_instance_id',
Dd_Current_User_Name         VARCHAR2(4000)       PATH            'msa:dd_current_user_name',
Dd_Event_User_Name           VARCHAR2(4000)       PATH            'msa:dd_event_user_name',
dd_object_type                VARCHAR2(4000)       PATH            'msa:dd_object_type',
CUSTOM_FIELD6                 VARCHAR2(4000)       PATH            'msa:custom_field6'
);
insert into test_girish (col1,col2,col3) values (lv_Object_Id,lv_Custom_Field_6,sysdate);
commit;
IF(lv_Custom_Field_6 = 'N')  THEN
Setting the multiRow primary  key value
Multi_Row_Id_Setting(pn_Error_Handle_Id,
Pc_Process_Code,
Ln_Process_Instance_Id,
pn_Error_Sequence,
Lt_Out_Data_Xml,
pn_error_code ,
pv_error_message  );

Multi_Row_Default_Setting( Pc_Process_Code,
Ln_Process_Instance_Id,
'BOTH',
'NONPUBLISH',
pn_Error_Handle_Id,
pn_Error_Sequence,
Lt_Out_Data_Xml,
pn_error_code,
pv_error_message);
If (Lv_Object_id Is Null  Or Pv_Transition_To &lt;&gt; 'CREATE_EDIT')  THEN
Debug(Lv_Proc || ' Calling ms_apps_utilities.get_next_id');
ms_apps_utilities.get_next_id ('RGA',
'chn_obj_id',--'log_issue_id',
'MS_RGA_CHANNEL_DTLS',
Ln_Process_Instance_Id,
Lv_Object_id,
ln_error_code,
lv_error_message
);
Debug(Lv_Proc || 'Lv_Object_id - '||Lv_Object_id);
Setting  the Object_id first time
Insert_Value_To_Non_Multirow('object_id',
Lv_Object_id,
pn_Error_Handle_Id,
pn_Error_Sequence,
Lt_Out_Data_Xml,
pn_error_code,
pv_error_message);

End If;


Request Clarification from Owner to Initiator &gt; Defaulting Action.
DEBUG (Lv_Proc||'Transaction From '||pv_transition_from|| ' to ' ||pv_transition_to );
pt_Out_Data := Lt_Out_Data_Xml.Getclobval();
dbms_output.put_line('iam in first if condition');
Calling Manage Common Flow
Pr_Manage_Common_flow(Pc_Process_Code,
Pv_Transition_From,
Pv_Transition_To,
lv_Object_Action,
Lv_dd_object_type,
pn_Error_Handle_Id,
pt_Out_Data,
pn_Error_Sequence,
ln_error_code,
Lv_Error_Message);
Ln_Error_Code := Null;
Lt_Out_Data_Xml := Xmltype(pt_Out_Data);
Debug(Lv_Proc || 'pt_Out_Data := Lt_Out_Data_Xml.Getclobval()');
pt_Out_Data := Lt_Out_Data_Xml.Getclobval();
Lt_In_Data_Xml := Lt_Out_Data_Xml;
Inserting the Records to SI Table (Insted of Created_edit Transaction  In Publish)
Lv_Error_Message := Ms_Apps_Mdf_Infoletoutput_Pkg.Insert_Xml('MS_RGA_CHANNEL_DTLS_V',
Lv_Metric_Id,
Ln_Process_Instance_Id,
Ln_Instance_Id,
Lt_In_Data_Xml.Getclobval());
Update  MS_RGA_CHANNEL_DTLS
Set    Dd_Instance_Id         = Ln_Instance_Id,
Dd_Process_Instance_Id = Ln_Process_Instance_Id
Where  object_id = Lv_object_Id;
dbms_output.put_line('entering the multi row default setting');
Multi_Row_Default_Setting(Pc_Process_Code,
Ln_Process_Instance_Id,
'MANDATORY',
'PUBLISH',
pn_Error_Handle_Id,
pn_Error_Sequence,
Lt_In_Data_Xml,
pn_error_code,
pv_error_message);
If Ln_Error_Code &lt;&gt; 0
Then
Raise Ex_Etl_Call;
End If;
pt_In_Data := Lt_In_Data_Xml.Getclobval();
Debug(Lv_Proc || 'Assigned pt_In_Data' );
End If;
Debug(Lv_Proc ||'Ln_Orig_Pid '||Ln_Orig_Pid);
Debug(Lv_Proc || 'Here --- assigning pt_Out_Data and pt_In_Data');
pt_Out_Data := Lt_Out_Data_Xml.Getclobval();
Debug(Lv_Proc || 'Assigned pt_Out_Data ');
END IF;
Exception
When Ex_Id_Generation Then
Debug(Lv_Proc || 'In Ex_Id_Generation exception - ' ||
Dbms_Utility.Format_Error_Backtrace || '~' || Sqlerrm);
pn_error_code:= -1;
pv_error_message := lv_Proc||'Encountered exception '||Substr(Sqlerrm,1,250);
Raise;
When Ex_Etl_Call Then
Debug(Lv_Proc || 'In Ex_Etl_Call exception - ' ||
Dbms_Utility.Format_Error_Backtrace || '~' || Sqlerrm);
pn_error_code:= -1;
pv_error_message := lv_Proc||'Encountered exception '||Substr(Sqlerrm,1,250);
Raise;
When Others Then
Debug(Lv_Proc || 'In Others exception - ' ||
Dbms_Utility.Format_Error_Backtrace || '~' || Sqlerrm);
pn_error_code:= -1;
pv_error_message := lv_Proc||'Encountered exception '||Substr(Sqlerrm,1,250);
Raise;

End Pr_Manage_Channel_Details;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="3197" LINES="297" START_COLUMN="11" START_LINE="2901"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_ALRTS">
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TRANSITION_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="9" END_LINE="3311" LINES="112" START_COLUMN="11" START_LINE="3200"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MANAGE_PROCESS_CHANNEL_XML">
      <COMMENT_FIRST_LINE><![CDATA[Function get_alert_status(Pv_Transition_From In Varchar2,Pv_Transition_To In Varchar2)
return  Varchar2 is
o_status varchar2(100);
begin
If (Pv_Transition_From = 'CREATE_EDIT' and Pv_Transition_To = 'L1_APPROVE')
Then
o_status := 'NEEDS L1'  ;
End If;
If (Pv_Transition_From = 'L1_APPROVE' AND Pv_Transition_To = 'L2_APPROVE')
Then
o_status := 'NEEDS L2' ;
End If;
If (Pv_Transition_From = 'L1_APPROVE' AND Pv_Transition_To = 'CREATE_EDIT')
Then
o_status := 'CLR REQD' ;
End If;
If (Pv_Transition_From = 'L2_APPROVE' AND Pv_Transition_To = 'CREATE_EDIT')
Then
o_status := 'CLR REQD' ;
End If;
return o_status;
exception
when others then
Debug(Lv_Proc || 'In Others exception - ' ||
Dbms_Utility.Format_Error_Backtrace || '~' || Sqlerrm);
end;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Function get_alert_status(Pv_Transition_From In Varchar2,Pv_Transition_To In Varchar2)
return  Varchar2 is
o_status varchar2(100);
begin
If (Pv_Transition_From = 'CREATE_EDIT' and Pv_Transition_To = 'L1_APPROVE')
Then
o_status := 'NEEDS L1'  ;
End If;
If (Pv_Transition_From = 'L1_APPROVE' AND Pv_Transition_To = 'L2_APPROVE')
Then
o_status := 'NEEDS L2' ;
End If;
If (Pv_Transition_From = 'L1_APPROVE' AND Pv_Transition_To = 'CREATE_EDIT')
Then
o_status := 'CLR REQD' ;
End If;
If (Pv_Transition_From = 'L2_APPROVE' AND Pv_Transition_To = 'CREATE_EDIT')
Then
o_status := 'CLR REQD' ;
End If;
return o_status;
exception
when others then
Debug(Lv_Proc || 'In Others exception - ' ||
Dbms_Utility.Format_Error_Backtrace || '~' || Sqlerrm);
end;
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="PN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="PV_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="3437" LINES="92" START_COLUMN="11" START_LINE="3346"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="3525" LINES="86" START_COLUMN="11" START_LINE="3440"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA1">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="3603" LINES="77" START_COLUMN="11" START_LINE="3527"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA_ISM">
      <COMMENT_FIRST_LINE><![CDATA[This code helps in the integration with ISM on a subsequent form submissions of log issue from Alery summary report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This code helps in the integration with ISM on a subsequent form submissions of log issue from Alery summary report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="3682" LINES="74" START_COLUMN="11" START_LINE="3609"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_OUT_DATA_MYSUBS">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="3732" LINES="49" START_COLUMN="11" START_LINE="3684"/>
    </PROCEDURE>
    <FUNCTION NAME="CHECK_EXP">
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="16" END_LINE="3747" LINES="14" START_COLUMN="12" START_LINE="3734"/>
    </FUNCTION>
    <PROCEDURE NAME="POSTHOOK_PROC">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="19" END_LINE="3826" LINES="78" START_COLUMN="14" START_LINE="3749"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="18" END_LINE="3828" LINES="3828" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_LOG_ISSUES_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_LOG_ISSUES_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_LOG_ISSUES_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_LOG_ISSUES_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_LOG_ISSUES_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_LOG_ISSUES_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="122" LINES="99" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="207" LINES="81" START_COLUMN="15" START_LINE="127"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="908" LINES="689" START_COLUMN="15" START_LINE="220"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="910" LINES="910" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_MANAGE_ALERTS_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_MANAGE_ALERTS_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_MANAGE_ALERTS_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="_GRCIDEV" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MS_RGA_MESSAGE_LOG_CLEAN_UP">
      <ARGUMENT MODE="OUT" NAME="ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="18" LINES="18" START_COLUMN="41" START_LINE="1"/>
    </PROCEDURE>
  </PACKAGE>
  <PACKAGE NAME="MS_RGA_MY_ALERTS_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_MY_ALERTS_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_MY_ALERTS_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="122" LINES="99" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="207" LINES="81" START_COLUMN="15" START_LINE="127"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="790" LINES="569" START_COLUMN="15" START_LINE="222"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="791" LINES="791" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_MY_SUBSCRIPTION_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_MY_SUBSCRIPTION_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_MY_SUBSCRIPTION_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="122" LINES="99" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="207" LINES="81" START_COLUMN="15" START_LINE="127"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="705" LINES="486" START_COLUMN="15" START_LINE="220"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="707" LINES="707" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_NOTIFY_USERS_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_NOTIFY_USERS_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_NOTIFY_USERS_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_NOTIFY_USERS_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_NOTIFY_USERS_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_NOTIFY_USERS_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="107" LINES="84" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="192" LINES="81" START_COLUMN="15" START_LINE="112"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="590" LINES="386" START_COLUMN="15" START_LINE="205"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="592" LINES="592" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_PROCESS_CHANNEL_RESP" SCHEMA="Schema_objects">
    <TYPE NAME="TY_MS_RGA_CHNL_RESP_HDR_TBL">
      <COMMENT_FIRST_LINE><![CDATA[***********************************************************************************
| Package     : Ms_Rga_Populate_Feeds
| Module      : RGALERTS
| Purpose     : Contain procedures to support Insertion of feeds into corresponding
|               Channel tables viz.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[***********************************************************************************
| Package     : Ms_Rga_Populate_Feeds
| Module      : RGALERTS
| Purpose     : Contain procedures to support Insertion of feeds into corresponding
|               Channel tables viz. Ms_Rga_Channel_Response_Hdr and
|               Ms_Rga_Channel_Response_Dtls.
| Process     : For each response considered in Ms_Rga_Feed_Aggregator_V, all
|               Sources matching the Server Address will be identified and for each
|               Source a record will be inserted into Ms_Rga_Channel_Response_Dtls.
| Author      : SUMITL
| Start Date  : 06/14/2010
| ------------------------------------------------------------------------------------
| Change History
| ------------------------------------------------------------------------------------
| Date               Change_Tag(s)      Client    Bug_Description
| ------------------------------------------------------------------------------------
| 15-July-2011   HMSA_UAT_#20512_Start   HMSA    Palmetto and DMERC alerts -
|                HMSA_UAT_#20512_End             Reference links to be enabled
|                                                in the alert content.
************************************************************************************
]]></COMMENT>
      <RETURN TYPE="TABLE OF Ms_Rga_Channel_Response_Hdr%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_MS_RGA_CHNL_RESP_DTL_TBL">
      <RETURN TYPE="TABLE OF Ms_Rga_Channel_Response_Dtls%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_MS_RGA_CHNL_NOTIF_TBL">
      <RETURN TYPE="TABLE OF Ms_Rga_Channel_Notifications%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_FEED_AGGREGATOR_V">
      <RETURN TYPE="TABLE OF Ms_Rga_Feed_Aggregator_V%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <FUNCTION NAME="FN_SEND_CHNL_NOTIFICATNS">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="76" END_LINE="36" LINES="2" START_COLUMN="10" START_LINE="35"/>
    </FUNCTION>
    <PROCEDURE NAME="PR_POPULATE_CHANNEL_RESPONSE">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="66" END_LINE="39" LINES="2" START_COLUMN="11" START_LINE="38"/>
    </PROCEDURE>
    <FUNCTION NAME="EN_ENRICH_EXISTING_ALERTS">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="77" END_LINE="42" LINES="2" START_COLUMN="10" START_LINE="41"/>
    </FUNCTION>
    <PROCEDURE NAME="FN_POPULATE_ATTACHMENT_ALERTS">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="67" END_LINE="45" LINES="2" START_COLUMN="11" START_LINE="44"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="32" END_LINE="46" LINES="46" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_PROCESS_CHANNEL_RESP" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_CODE" NAME="G_SUCCESS_CODE">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_MESG" NAME="G_SUCCESS_MESG">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_MODULE_NAME" NAME="G_MODULE">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'Ms_Rga_Process_Channel_Resp'" NAME="G_PACKAGE_NAME">
      <RETURN TYPE="VARCHAR2(50)"/>
    </CONSTANT>
    <VARIABLE DEFAULT="'CHNLRESP'" NAME="G_ACTION">
      <RETURN TYPE="VARCHAR2(12)"/>
    </VARIABLE>
    <CONSTANT DEFAULT="'RSP_'" NAME="G_CHNL_RESP_ID_PREFIX">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'CHNL_NOTIF_'" NAME="G_CHNL_NOTIF_ID_PREFIX">
      <RETURN TYPE="VARCHAR2(12)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_HIGH" NAME="G_HIGH">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_MEDIUM" NAME="G_MEDIUM">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_LOW" NAME="G_LOW">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_HIGH" NAME="G_PKGDEBUGPRIORITY">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_APPS_UTILITIES.G_ERR" NAME="G_ERR">
      <COMMENT_FIRST_LINE><![CDATA[g_High; --g_Medium; -- set to medium, logging relaxed at pkg level
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[g_High; --g_Medium; -- set to medium, logging relaxed at pkg level
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <CURSOR NAME="MS_RGA_CHNL_RESP_HDR_CUR"/>
    <CURSOR NAME="MS_RGA_CHNL_RESP_DTL_CUR"/>
    <TYPE NAME="TY_MS_RGA_CHNLHDR_V_CUR">
      <RETURN TYPE="TABLE OF Ms_Rga_Chnl_Resp_Hdr_Cur%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_MS_RGA_CHNLDTL_V_CUR">
      <RETURN TYPE="TABLE OF Ms_Rga_Chnl_Resp_Dtl_Cur%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_SI_USERS">
      <RETURN TYPE="TABLE OF Si_Users_t%ROWTYPE INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <PROCEDURE NAME="DBG">
      <ARGUMENT MODE="IN" NAME="I_MSG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="G_PKGDEBUGPRIORITY" MODE="IN" NAME="I_MSG_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="MS_APPS_UTILITIES.G_STMT" MODE="IN" NAME="I_MSG_TYPE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="8" END_LINE="126" LINES="12" START_COLUMN="11" START_LINE="115"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_SEND_MAIL">
      <COMMENT_FIRST_LINE><![CDATA[This procedure has been written to handle the insert channel notification : split from the function Fn_Push_Notifs_ToMailQ to ensure a moderate cyclomatic complexity in PMD reports.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure has been written to handle the insert channel notification : split from the function Fn_Push_Notifs_ToMailQ to ensure a moderate cyclomatic complexity in PMD reports.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IO_SEND_EMAIL_TBL" TYPE="MS_RGA_PROCESS_SUBSCRPTN_RESP.TY_SEND_EMAIL_REC"/>
      <ARGUMENT MODE="IN" NAME="I_CHNL_NOTIF_RECS" TYPE="MS_RGA_CHANNEL_NOTIFICATIONS%ROWTYPE"/>
      <SUMMARY END_COLUMN="4" END_LINE="140" LINES="12" START_COLUMN="11" START_LINE="129"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_PUSH_NOTIFS_TOMAILQ">
      <ARGUMENT MODE="IN OUT" NAME="I_SEND_EMAIL_TBL" TYPE="MS_RGA_PROCESS_SUBSCRPTN_RESP.TY_SEND_EMAIL_TBL"/>
      <ARGUMENT MODE="IN" NAME="I_CHNL_NOTIF_RECS" TYPE="MS_RGA_PROCESS_CHANNEL_RESP.TY_MS_RGA_CHNL_NOTIF_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESG" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="27" END_LINE="181" LINES="40" START_COLUMN="10" START_LINE="142"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SEND_CHNL_NOTIFICATNS">
      <COMMENT_FIRST_LINE><![CDATA[users specified by Admin against a Structured-Content Channel.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[users specified by Admin against a Structured-Content Channel.
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="29" END_LINE="354" LINES="171" START_COLUMN="10" START_LINE="184"/>
    </FUNCTION>
    <FUNCTION NAME="FN_UPDATE_SI_TABLE">
      <ARGUMENT MODE="IN" NAME="IO_CHNL_RESP_DTL_FEEDS" TYPE="TY_MS_RGA_CHNLDTL_V_CUR"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="23" END_LINE="400" LINES="45" START_COLUMN="10" START_LINE="356"/>
    </FUNCTION>
    <FUNCTION NAME="FN_BUILD_CHNLDTL_TYPE">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_CHNL_RESP_DTL_FEEDS" TYPE="TY_MS_RGA_CHNLDTL_V_CUR"/>
      <ARGUMENT MODE="OUT" NAME="O_CHNL_RESP_DTL_RECS" TYPE="TY_MS_RGA_CHNL_RESP_DTL_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="26" END_LINE="562" LINES="161" START_COLUMN="10" START_LINE="402"/>
    </FUNCTION>
    <FUNCTION NAME="FN_BUILD_CHNLHDR_TYPE">
      <COMMENT_FIRST_LINE><![CDATA[ Function meant for translating source-type(SI table) into
  target-type(RGA Channel Response Hdr table).]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function meant for translating source-type(SI table) into
  target-type(RGA Channel Response Hdr table).
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_DISTINCT_FEEDAGG_RECS" TYPE="TY_MS_RGA_CHNLHDR_V_CUR"/>
      <ARGUMENT MODE="OUT" NAME="O_CHNLHDR_RESP_RECS" TYPE="TY_MS_RGA_CHNL_RESP_HDR_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="26" END_LINE="594" LINES="29" START_COLUMN="10" START_LINE="566"/>
    </FUNCTION>
    <FUNCTION NAME="FN_INSERT_UPDATE_CHNL_RESP_DTL">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_CHNL_RESP_DTL_RECS" TYPE="TY_MS_RGA_CHNL_RESP_DTL_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="35" END_LINE="669" LINES="74" START_COLUMN="10" START_LINE="596"/>
    </FUNCTION>
    <FUNCTION NAME="FN_INSERT_UPDATE_CHNL_RESP_HDR">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_CHNL_RESP_HDR_RECS" TYPE="TY_MS_RGA_CHNL_RESP_HDR_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="35" END_LINE="716" LINES="46" START_COLUMN="10" START_LINE="671"/>
    </FUNCTION>
    <FUNCTION NAME="FN_POPULATE_CHNL_RESP_DTL">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_CHNL_RESP_DTL_FEEDS" TYPE="TY_MS_RGA_CHNLDTL_V_CUR"/>
      <ARGUMENT MODE="OUT" NAME="O_CHNL_RESP_DTL_RECS" TYPE="TY_MS_RGA_CHNL_RESP_DTL_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="30" END_LINE="759" LINES="42" START_COLUMN="10" START_LINE="718"/>
    </FUNCTION>
    <FUNCTION NAME="FN_POPULATE_CHNL_RESP_HDR">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_DISTINCT_FEEDAGG_RECS" TYPE="TY_MS_RGA_CHNLHDR_V_CUR"/>
      <ARGUMENT MODE="OUT" NAME="O_CHNL_RESP_HDR_RECS" TYPE="TY_MS_RGA_CHNL_RESP_HDR_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="30" END_LINE="798" LINES="38" START_COLUMN="10" START_LINE="761"/>
    </FUNCTION>
    <FUNCTION NAME="FN_ENRICH_MAIL_BODY">
      <ARGUMENT MODE="IN" NAME="PINCLOB" TYPE="CLOB"/>
      <ARGUMENT MODE="OUT" NAME="POUTCLOB" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PWHATHTTPPATTERN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PWITHHTTPPATTERN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PWHATWWWPATTERN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PWITHWWWPATTERN" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="24" END_LINE="894" LINES="95" START_COLUMN="10" START_LINE="800"/>
    </FUNCTION>
    <FUNCTION NAME="EN_ENRICH_EXISTING_ALERTS">
      <COMMENT_FIRST_LINE><![CDATA[Resolution for bug # 20512 (HMSA UAT) &gt; Changes start.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Resolution for bug # 20512 (HMSA UAT) &gt; Changes start.
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="30" END_LINE="994" LINES="98" START_COLUMN="10" START_LINE="897"/>
    </FUNCTION>
    <FUNCTION NAME="FN_ENRICH_UNPROCESSED_MAILS">
      <COMMENT_FIRST_LINE><![CDATA[HMSA_UAT_#20512_Existing_Alert_End
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[HMSA_UAT_#20512_Existing_Alert_End
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="32" END_LINE="1093" LINES="97" START_COLUMN="10" START_LINE="997"/>
    </FUNCTION>
    <PROCEDURE NAME="FN_POPULATE_ATTACHMENT_ALERTS">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1146" LINES="52" START_COLUMN="11" START_LINE="1095"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_POPULATE_CHANNEL_RESPONSE">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="1294" LINES="147" START_COLUMN="11" START_LINE="1148"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="32" END_LINE="1296" LINES="1296" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_PROCESS_NOTIFY_USERS" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Project: GRC Intelligence<br/>
 Description:Package for sending emails to the users from NOTIFY USERS FORM <br/>
 DB impact: YES<br/>
 Commit inside: YES<br/>
 Rollback inside: NO<br/>
 ----------------------------------------------------------------------<br/>
 * ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <TYPE NAME="SUBSCRIPTN_NOTIFI_HEADER">
      <COMMENT_FIRST_LINE><![CDATA[ Subscription notification record type
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Subscription notification record type
]]></COMMENT>
      <FIELD NAME="SUBS_RESPONSE_ID" TYPE="MS_RGA_SUBSCRPTN_NOTIFICATIONS.SUBS_RESPONSE_ID%TYPE"/>
      <FIELD NAME="NOTIFICATION_ID" TYPE="MS_RGA_SUBSCRPTN_NOTIFICATIONS.NOTIFICATION_ID%TYPE"/>
      <FIELD NAME="NOTIFICATION_DATE" TYPE="MS_RGA_SUBSCRPTN_NOTIFICATIONS.NOTIFICATION_DATE%TYPE"/>
      <FIELD NAME="COMMENTS" TYPE="MS_RGA_SUBSCRPTN_NOTIFICATIONS.COMMENTS%TYPE"/>
      <FIELD NAME="PID" TYPE="MS_RGA_SUBSCRPTN_NOTIFICATIONS.PID%TYPE"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="SUBSCRIPTN_NOTIFI_USRS_DTLS">
      <COMMENT_FIRST_LINE><![CDATA[ Subscription notification user details record type
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Subscription notification user details record type
]]></COMMENT>
      <FIELD NAME="SUBS_RESPONSE_ID" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.SUBS_RESPONSE_ID%TYPE"/>
      <FIELD NAME="NOTIFICATION_ID" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.NOTIFICATION_ID%TYPE"/>
      <FIELD NAME="USER_TYPE" TYPE="MS_RGA_NOTIFY_USERS_V.NOTIFY_OTHER_USERS%TYPE"/>
      <FIELD NAME="ACTIVE" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.ACTIVE%TYPE"/>
      <FIELD NAME="USERNAME" TYPE="MS_RGA_NOTIFY_USERS_V.NOTIFY_SYSTEM_USERS%TYPE"/>
      <FIELD NAME="CREATED_ON" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.CREATED_ON%TYPE"/>
      <FIELD NAME="CREATED_BY" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.CREATED_BY%TYPE"/>
      <FIELD NAME="MODIFIED_ON" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.MODIFIED_ON%TYPE"/>
      <FIELD NAME="MODIFIED_BY" TYPE="MS_RGA_SUBSCRPTN_NOTIFY_USERS.MODIFIED_BY%TYPE"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="CREATE_NOTIFY_USERS_RECORD">
      <COMMENT_FIRST_LINE><![CDATA[ Subscription notification details record type
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Subscription notification details record type
]]></COMMENT>
      <FIELD NAME="SUB_NOTI_HDR" TYPE="SUBSCRIPTN_NOTIFI_HEADER"/>
      <FIELD NAME="SUB_NOTI_DTLS_TBL" TYPE="SUBSCRIPTN_NOTIFI_USRS_DTLS"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <PROCEDURE NAME="PROCESS_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ Email The Users That Are Specified In Notify Users Form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Email The Users That Are Specified In Notify Users Form. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="OTHERS/RAISE_EXCP,">
        <COMMENT><![CDATA[ when there is an error encountered in execution, <br/>
                      logs are captured in ms_apps_message_log table with package name :Process_Notify_Users. <br/>]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pf_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error message]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[OTHERS/raise_excp, when there is an error encountered in execution, <br/>
                      logs are captured in ms_apps_message_log table with package name :Process_Notify_Users. <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="63" LINES="5" START_COLUMN="14" START_LINE="59"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_SUBS_NOTIFI_MASTER">
      <COMMENT_FIRST_LINE><![CDATA[ records the notification details.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ records the notification details. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CREATE_NOTIFY_USERS_REC" TYPE="CREATE_NOTIFY_USERS_RECORD">
        <COMMENT><![CDATA[user record type <see above>]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="DUP_VAL_ON_INDEX,">
        <COMMENT><![CDATA[ when there is notification already,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </THROWS>
      <THROWS NAME="OTHERS,">
        <COMMENT><![CDATA[ when any other exception encountered,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_create_notify_users_rec user record type <see above>]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error message]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[DUP_VAL_ON_INDEX, when there is notification already,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[OTHERS, when any other exception encountered,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="76" LINES="5" START_COLUMN="14" START_LINE="72"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_SUBS_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ Records The Notification Details On User Level.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Records The Notification Details On User Level. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CREATE_NOTIFY_USERS_REC" TYPE="CREATE_NOTIFY_USERS_RECORD">
        <COMMENT><![CDATA[user record type <see above>]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="DUP_VAL_ON_INDEX,">
        <COMMENT><![CDATA[ when there is notification already,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </THROWS>
      <THROWS NAME="OTHERS,">
        <COMMENT><![CDATA[ when any other exception encountered,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_create_notify_users_rec user record type <see above>]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error message]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[DUP_VAL_ON_INDEX, when there is notification already,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[OTHERS, when any other exception encountered,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="90" LINES="5" START_COLUMN="14" START_LINE="86"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ Builds the formatted email subject,body,user and other details.Sends email to the notified users.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Builds the formatted email subject,body,user and other details.Sends email to the notified users. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="SEND_EMAIL_EXCP/OTHERS,">
        <COMMENT><![CDATA[ when any exception encountered during execution,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pf_id process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_data_id Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error message]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[send_email_excp/OTHERS, when any exception encountered during execution,returns the error message :SQLERRRM and code:SQLCODE <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="106" LINES="7" START_COLUMN="17" START_LINE="100"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="32" END_LINE="107" LINES="107" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_PROCESS_NOTIFY_USERS" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_CODE" NAME="G_SUCCESS_CODE">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_MESG" NAME="G_SUCCESS_MESG">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_MODULE_NAME" NAME="G_MODULE">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'MS_RGA_PROCESS_NOTIFY_USERS'" NAME="G_PACKAGE_NAME">
      <RETURN TYPE="VARCHAR2(50)"/>
    </CONSTANT>
    <VARIABLE DEFAULT="'NOTIFUSR'" NAME="G_ACTION">
      <RETURN TYPE="VARCHAR2(12)"/>
    </VARIABLE>
    <PROCEDURE NAME="PROCESS_NOTIFY_USERS">
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="194" LINES="185" START_COLUMN="14" START_LINE="10"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_SUBS_NOTIFI_MASTER">
      <ARGUMENT MODE="IN" NAME="I_CREATE_NOTIFY_USERS_REC" TYPE="CREATE_NOTIFY_USERS_RECORD"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="238" LINES="43" START_COLUMN="14" START_LINE="196"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_SUBS_NOTIFY_USERS">
      <ARGUMENT MODE="IN" NAME="I_CREATE_NOTIFY_USERS_REC" TYPE="CREATE_NOTIFY_USERS_RECORD"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="6" END_LINE="333" LINES="94" START_COLUMN="14" START_LINE="240"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_NOTIFY_USERS">
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="552" LINES="218" START_COLUMN="14" START_LINE="335"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="32" END_LINE="553" LINES="553" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_PROCESS_SUBSCRPTN_RESP" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Project: GRC Intelligence<br/>
 Description: Processes the unprocessed channel response alerts in Ms_Rga_Channel_Response_Dtls,sends notification and updates the processed flag accordingly  <br/>
 DB impact: YES<br/>
 Commit inside: YES<br/>
 Rollback inside: NO<br/>
 ----------------------------------------------------------------------<br/>
 * ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <TYPE NAME="TY_MS_RGA_SCRPTN_RESP_TBL">
      <COMMENT_FIRST_LINE><![CDATA[ Associative array-Ms_Rga_Subscription_Response Rowtype
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Associative array-Ms_Rga_Subscription_Response Rowtype
]]></COMMENT>
      <RETURN TYPE="Table OF Ms_Rga_Subscription_Response%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_MS_RGA_SCRPTN_NOTIF_TBL">
      <COMMENT_FIRST_LINE><![CDATA[ Associative array-Ms_Rga_Subscrptn_Notifications Rowtype
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Associative array-Ms_Rga_Subscrptn_Notifications Rowtype
]]></COMMENT>
      <RETURN TYPE="Table OF Ms_Rga_Subscrptn_Notifications%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_SEND_EMAIL_REC">
      <COMMENT_FIRST_LINE><![CDATA[ Send Email record type.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Send Email record type.
]]></COMMENT>
      <FIELD NAME="PRIORITY" TYPE="SI_EMAIL_QUEUE.PRIORITY%TYPE"/>
      <FIELD NAME="RECIPIENTS" TYPE="VARCHAR2_ARRAY"/>
      <FIELD NAME="ENTERPRISE_ID" TYPE="SI_ENT.ENTERPRISE_ID%TYPE"/>
      <FIELD NAME="SUBJECT" TYPE="SI_EMAIL_QUEUE.SUBJECT%TYPE"/>
      <FIELD NAME="TEMPLATE" TYPE="SI_EMAIL_QUEUE.TEMPLATE%TYPE"/>
      <FIELD NAME="PARAM_NAMES" TYPE="VARCHAR2_ARRAY"/>
      <FIELD NAME="PARAM_VALUES" TYPE="CLOB_ARRAY"/>
      <FIELD NAME="ERROR_CODE" TYPE="NUMBER"/>
      <FIELD NAME="ERROR_MESSAGE" TYPE="VARCHAR2(100)"/>
      <FIELD DEFAULT="'N'" NAME="SEND_EMAIL" TYPE="CHAR(1)"/>
      <FIELD DEFAULT="'N'" NAME="NOTIFY_BY_EMAIL" TYPE="CHAR(1)"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="TY_SEND_EMAIL_TBL">
      <COMMENT_FIRST_LINE><![CDATA[ Associative array-Send email record type
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Associative array-Send email record type
]]></COMMENT>
      <RETURN TYPE="Table OF Ty_Send_Email_Rec INDEX BY Pls_Integer"/>
    </TYPE>
    <PROCEDURE NAME="PR_POPULATE_SUBSCRPTN_RESP">
      <COMMENT_FIRST_LINE><![CDATA[no comments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no comments
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="66" END_LINE="42" LINES="2" START_COLUMN="13" START_LINE="41"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_POPULATE_SUBSCRPTN_RESP">
      <COMMENT_FIRST_LINE><![CDATA[ Processes the unprocessed channel alerts,sends notification and updates the status of processed alerts.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Processes the unprocessed channel alerts,sends notification and updates the status of processed alerts. <br/>
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error description]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SUPPRESS_NOTIFICATIONS" TYPE="CHAR">
        <COMMENT><![CDATA[Email suppress flag (No emails, if its 'Y')]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="NO_DATA_FOUND,">
        <COMMENT><![CDATA[ if  there are no channel records to be processed.<br/>]]></COMMENT>
      </THROWS>
      <THROWS NAME="OTHERS">
        <COMMENT><![CDATA[ , when any other exception encountered in processing, updates o_Error_Code with error code and o_Error_Desc with error message.]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_Error_Code Error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_Error_Desc Error description]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Suppress_Notifications Email suppress flag (No emails, if its 'Y')]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[No_Data_found, if  there are no channel records to be processed.<br/>]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[Others , when any other exception encountered in processing, updates o_Error_Code with error code and o_Error_Desc with error message.]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="73" END_LINE="53" LINES="3" START_COLUMN="13" START_LINE="51"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="34" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_PROCESS_SUBSCRPTN_RESP" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_CODE" NAME="G_SUCCESS_CODE">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_SUCCESS_MESG" NAME="G_SUCCESS_MESG">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_MODULE_NAME" NAME="G_MODULE">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'Ms_Rga_Process_Subscrptn_Resp'" NAME="G_PACKAGE_NAME">
      <RETURN TYPE="VARCHAR2(50)"/>
    </CONSTANT>
    <VARIABLE DEFAULT="'SUBSRESP'" NAME="G_ACTION">
      <RETURN TYPE="VARCHAR2(12)"/>
    </VARIABLE>
    <CONSTANT DEFAULT="'SUBS_RESP_'" NAME="G_SCRPTN_RESP_ID_PREFIX">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'SUBS_NOTIF_'" NAME="G_SCRPTN_NOTIF_ID_PREFIX">
      <RETURN TYPE="VARCHAR2(20)"/>
    </CONSTANT>
    <VARIABLE NAME="G_SUPPRESS_NOTIFICATION">
      <RETURN TYPE="CHAR(1)"/>
    </VARIABLE>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_HIGH" NAME="G_HIGH">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_MEDIUM" NAME="G_MEDIUM">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_RGA_UTILITIES.G_LOW" NAME="G_LOW">
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_APPS_UTILITIES.G_ERR" NAME="G_ERR">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE DEFAULT="G_HIGH" NAME="G_PKGDEBUGPRIORITY">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <CURSOR NAME="MS_RGA_UNPROC_SCRPTN_RESP_CUR">
      <COMMENT_FIRST_LINE><![CDATA[set to medium, logging relaxed at pkg level
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[set to medium, logging relaxed at pkg level
]]></COMMENT>
    </CURSOR>
    <TYPE NAME="TY_UNPROC_SCRPTN_RESP_CUR">
      <COMMENT_FIRST_LINE><![CDATA[Consider all unprocessed Channel_Response entries.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Consider all unprocessed Channel_Response entries.
]]></COMMENT>
      <RETURN TYPE="Table OF Ms_Rga_Unproc_Scrptn_Resp_Cur%ROWTYPE INDEX BY Pls_Integer"/>
    </TYPE>
    <TYPE NAME="TY_SI_USERS">
      <RETURN TYPE="Table OF Si_Users_t%ROWTYPE INDEX BY Varchar2(100)"/>
    </TYPE>
    <PROCEDURE NAME="DBG">
      <COMMENT_FIRST_LINE><![CDATA[Procedure meant for logging progress, errors and exceptions.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Procedure meant for logging progress, errors and exceptions.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_MSG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="G_PKGDEBUGPRIORITY" MODE="IN" NAME="I_MSG_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="MS_APPS_UTILITIES.G_STMT" MODE="IN" NAME="I_MSG_TYPE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="72" LINES="18" START_COLUMN="13" START_LINE="55"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_BUILD_REQUISITE_TYPES">
      <COMMENT_FIRST_LINE><![CDATA[the type for tracking notifications.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[the type for tracking notifications.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_UNPROC_SCRPTN_RESP_RECS" TYPE="TY_UNPROC_SCRPTN_RESP_CUR"/>
      <ARGUMENT MODE="OUT" NAME="O_SCRPTN_RESP_RECS" TYPE="TY_MS_RGA_SCRPTN_RESP_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_SEND_EMAIL_TBL" TYPE="TY_SEND_EMAIL_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_SCRPTN_NOTIF_RECS" TYPE="TY_MS_RGA_SCRPTN_NOTIF_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="31" END_LINE="359" LINES="284" START_COLUMN="12" START_LINE="76"/>
    </FUNCTION>
    <FUNCTION NAME="FN_INSERT_SCRPTN_RESP">
      <COMMENT_FIRST_LINE><![CDATA[Insert Subscription_Response type values into Ms_Rga_Subscription_Response.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Insert Subscription_Response type values into Ms_Rga_Subscription_Response.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SCRPTN_RESP_RECS" TYPE="TY_MS_RGA_SCRPTN_RESP_TBL"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IO_SEND_EMAIL_TBL" TYPE="TY_SEND_EMAIL_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="28" END_LINE="403" LINES="42" START_COLUMN="12" START_LINE="362"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SEND_NOTIFICATION">
      <COMMENT_FIRST_LINE><![CDATA[Function for sending emails.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Function for sending emails.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="I_SEND_EMAIL_TBL" TYPE="TY_SEND_EMAIL_TBL"/>
      <ARGUMENT MODE="IN" NAME="I_SCRPTN_NOTIF_RECS" TYPE="TY_MS_RGA_SCRPTN_NOTIF_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESG" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="27" END_LINE="465" LINES="60" START_COLUMN="12" START_LINE="406"/>
    </FUNCTION>
    <FUNCTION NAME="FN_UPDATE_CHNL_RESP_DTLS">
      <COMMENT_FIRST_LINE><![CDATA[update Processed flag in Ms_Rga_Channel_Response_Dtls.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[update Processed flag in Ms_Rga_Channel_Response_Dtls.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SCRPTN_RESP_RECS" TYPE="TY_MS_RGA_SCRPTN_RESP_TBL"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="31" END_LINE="508" LINES="40" START_COLUMN="12" START_LINE="469"/>
    </FUNCTION>
    <PROCEDURE NAME="PR_POPULATE_SUBSCRPTN_RESP">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="561" LINES="52" START_COLUMN="13" START_LINE="510"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_POPULATE_SUBSCRPTN_RESP">
      <COMMENT_FIRST_LINE><![CDATA[Process Subscription_Response.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Process Subscription_Response.
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUPPRESS_NOTIFICATIONS" TYPE="CHAR"/>
      <COMMENT_FIRST_LINE><![CDATA[Emails won't be sent if this parameter is set to 'Y'
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Emails won't be sent if this parameter is set to 'Y'
]]></COMMENT>
      <SUMMARY END_COLUMN="33" END_LINE="657" LINES="94" START_COLUMN="13" START_LINE="564"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_RESEND_NOTIFICATNS">
      <COMMENT_FIRST_LINE><![CDATA[this procedure can be invoked for sending only emails.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[this procedure can be invoked for sending only emails.
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_DESC" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="TRUE" MODE="IN" NAME="I_CONSIDR_TODAYS_NOTIFS" TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="28" END_LINE="839" LINES="179" START_COLUMN="13" START_LINE="661"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="34" END_LINE="841" LINES="841" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_PROC_VIEW_MANAGE_ALERTS" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Project: GRC Intelligence<br/>
 Description: This package keeps track of alerts which gets checked/unchecked for review or followup <br/>
 DB impact: YES<br/>
 Commit inside: YES<br/>
 Rollback inside: NO<br/>
 ----------------------------------------------------------------------<br/>
 * ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <PROCEDURE NAME="UPDATE_REVIEWED_CHANNELS">
      <COMMENT_FIRST_LINE><![CDATA[ Keeps track of all the alerts that gets checked/uncheked for review on user level.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Keeps track of all the alerts that gets checked/uncheked for review on user level. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_REVIEWED_CHANNELS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[user name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_REVIEW_VALUE" TYPE="NUMBER">
        <COMMENT><![CDATA[reveiw value (checked/unchecked)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[error message]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_reviewed_channels feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name  user name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_review_value reveiw value (checked/unchecked)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message error message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="29" LINES="7" START_COLUMN="14" START_LINE="23"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_FOLLOWUP_CHANNELS">
      <COMMENT_FIRST_LINE><![CDATA[ Keeps track of all the alerts that gets checked/uncheked for Followup on user level.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Keeps track of all the alerts that gets checked/uncheked for Followup on user level. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FOLLOWUP_CHANNELS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[user name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FOLLOWUP_VALUE" TYPE="NUMBER">
        <COMMENT><![CDATA[followup value (Checked/Unchecked)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[error message]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_followup_channels feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name  user name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_followup_value followup value (Checked/Unchecked)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code  Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message  error message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="44" LINES="7" START_COLUMN="14" START_LINE="38"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="35" END_LINE="46" LINES="46" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_PROC_VIEW_MANAGE_ALERTS" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_REVIEWED_CHANNELS">
      <ARGUMENT MODE="IN" NAME="I_REVIEWED_CHANNELS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_REVIEW_VALUE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="66" LINES="63" START_COLUMN="14" START_LINE="4"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_FOLLOWUP_CHANNELS">
      <ARGUMENT MODE="IN" NAME="I_FOLLOWUP_CHANNELS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FOLLOWUP_VALUE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="128" LINES="61" START_COLUMN="14" START_LINE="68"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="35" END_LINE="178" LINES="178" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_RISK_DATABASE_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_RISK_DATABASE_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_MS_RGA_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_MS_RGA_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_RISK_DATABASE_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_MS_RGA_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_MS_RGA_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_RISK_DATABASE_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_RISK_DATABASE_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="59" LINES="59" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_RISK_DATABASE_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="107" LINES="84" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="192" LINES="81" START_COLUMN="15" START_LINE="112"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="584" LINES="380" START_COLUMN="15" START_LINE="205"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="586" LINES="586" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_RPT_UTILS" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Project: GRC Intelligence<br/>
 Description: This package contains function to build report URL <br/>
 DB impact: NO<br/>
 Commit inside: NO<br/>
 Rollback inside: NO<br/>
 ----------------------------------------------------------------------<br/>
 * ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <FUNCTION NAME="BUILD_REPORT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Builds the report url.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Builds the report url. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_REPORT_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Report code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="P_REPORT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Report name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_FIELD_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[field code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_CALL_SOURCE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Call source]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="P_DISPLAY_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Display value]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_PARAMVALUE1" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Paramvalue1]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_PARAMVALUE2" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Paramvalue2]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="P_LOGIN" TYPE="VARCHAR2">
        <COMMENT><![CDATA[user name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete url to build the report</b> <br/>
          <b>null , incase of unsuccessful termination</b> <br/>]]></COMMENT>
      </RETURN>
      <THROWS NAME="OTHERS">
        <COMMENT><![CDATA[ , returns null , incase of unsuccessful termination]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_Report_Code Report code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_Report_Name Report name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_Field_Code field code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_Call_Source Call source]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_Display_Value Display value]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_Paramvalue1 Paramvalue1]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_paramvalue2 Paramvalue2]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_login user name]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[OTHERS , returns null , incase of unsuccessful termination]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete url to build the report</b> <br/>
          <b>null , incase of unsuccessful termination</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="73" END_LINE="35" LINES="8" START_COLUMN="12" START_LINE="28"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="21" END_LINE="37" LINES="37" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_RPT_UTILS" SCHEMA="Schema_objects">
    <FUNCTION NAME="BUILD_REPORT_URL">
      <ARGUMENT MODE="IN" NAME="P_REPORT_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_REPORT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_FIELD_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_CALL_SOURCE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_DISPLAY_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_PARAMVALUE1" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_PARAMVALUE2" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_LOGIN" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="230" LINES="228" START_COLUMN="12" START_LINE="3"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="21" END_LINE="232" LINES="232" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_SUBS_CHANNEL_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_RGA_SUBS_CHANNEL_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="53" LINES="53" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_SUBS_CHANNEL_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="169" LINES="169" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_RGA_UTILITIES" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Project: GRC Intelligence<br/>
 Description: Utility package used for RGA related APIs <br/>
 DB impact: YES<br/>
 Commit inside: YES<br/>
 Rollback inside: NO<br/>
 ----------------------------------------------------------------------<br/>
 * ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <CONSTANT DEFAULT="MS_APPS_CONSTANTS.G_SUCCESS" NAME="G_SUCCESS_CODE">
      <COMMENT_FIRST_LINE><![CDATA[constants--
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[constants--
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
    </CONSTANT>
    <CONSTANT DEFAULT="MS_APPS_CONSTANTS.G_SUCCESS_MESG" NAME="G_SUCCESS_MESG">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'RGA'" NAME="G_MODULE_NAME">
      <RETURN TYPE="VARCHAR2(10)"/>
    </CONSTANT>
    <CONSTANT DEFAULT="'MS_RGA_UTILITIES'" NAME="G_PACKAGE_NAME">
      <RETURN TYPE="VARCHAR2(50)"/>
    </CONSTANT>
    <VARIABLE DEFAULT="NULL" NAME="G_ACTION">
      <RETURN TYPE="VARCHAR2(12)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'MS_RGA/MS_RGA_NOTIFY_USERS.htm'" NAME="G_EMAIL_TEMPLATE">
      <RETURN TYPE="SI_EMAIL_QUEUE.TEMPLATE%TYPE"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'MS_RGA/MS_RGA_NOTIFY_USERS_FROM_USERS.htm'" NAME="G_EMAIL_TEMPLATE_NOTIFIED">
      <RETURN TYPE="SI_EMAIL_QUEUE.TEMPLATE%TYPE"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'MS_RGA/MS_RGA_CHANNEL_DTLS.htm'" NAME="G_EMAIL_CHANNEL_TEMPLATE">
      <RETURN TYPE="SI_EMAIL_QUEUE.TEMPLATE%TYPE"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'MS_RGA/MS_RGA_CHANNEL_DTLS_FAILURE.htm'" NAME="G_EMAIL_CHAN_FAILURE_TEMPLATE">
      <RETURN TYPE="SI_EMAIL_QUEUE.TEMPLATE%TYPE"/>
    </VARIABLE>
    <VARIABLE DEFAULT="1" NAME="G_HIGH">
      <COMMENT_FIRST_LINE><![CDATA[constants----
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[constants----
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE DEFAULT="2" NAME="G_MEDIUM">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE DEFAULT="3" NAME="G_LOW">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE DEFAULT="G_HIGH" NAME="G_MODULEDEBUGPRIORITY">
      <COMMENT_FIRST_LINE><![CDATA[Only high priority messages should be logged.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Only high priority messages should be logged.
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <FUNCTION NAME="GET_SELECT_URL_CHECKED">
      <COMMENT_FIRST_LINE><![CDATA[ Gets selected URL checked for Review/Followup status in My Alert Report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets selected URL checked for Review/Followup status in My Alert Report. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Review/followup flag (R/F)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ROWNO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete url of the checked alert</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_type Review/followup flag (R/F)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rowno   Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete url of the checked alert</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="57" LINES="6" START_COLUMN="10" START_LINE="52"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SELECT_URL_UNCHECKED">
      <COMMENT_FIRST_LINE><![CDATA[ Gets selected url unchecked for review/followup status in My Alert Report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets selected url unchecked for review/followup status in My Alert Report. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Review/followup flag (R/F)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ROWNO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete url of the unchecked alert</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_type Review/followup flag (R/F)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rowno   Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete url of the unchecked alert</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="70" LINES="6" START_COLUMN="10" START_LINE="65"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CHANNEL_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Returns the channel name by getting the channel id as input.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Returns the channel name by getting the channel id as input. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[channel id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>Channel name</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_channel_id channel id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>Channel name</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="79" LINES="4" START_COLUMN="10" START_LINE="76"/>
    </FUNCTION>
    <PROCEDURE NAME="SEND_EMAIL">
      <COMMENT_FIRST_LINE><![CDATA[ Sends email
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Sends email
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="X_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_RECIPIENTS" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN" NAME="X_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_TEMPLATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PARAM_NAMES" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN" NAME="X_PARAM_VALUES" TYPE="CLOB_ARRAY"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id   metric_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  process_instance_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text    Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@DEPRECATED">
        <COMMENT>
        </COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete edited URL as hyperlink</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="37" END_LINE="118" LINES="12" START_COLUMN="11" START_LINE="107"/>
    </PROCEDURE>
    <PROCEDURE NAME="SEND_EMAIL_INDIVIDUALLY">
      <COMMENT_FIRST_LINE><![CDATA[sends E-mail Individually
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[sends E-mail Individually
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="X_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_RECIPIENTS" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN" NAME="X_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_TEMPLATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PARAM_NAMES" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN OUT" NAME="X_PARAM_VALUES" TYPE="CLOB_ARRAY"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="134" LINES="15" START_COLUMN="11" START_LINE="120"/>
    </PROCEDURE>
    <PROCEDURE NAME="SEND_EMAIL_INFOLET_INV_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[no comments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no comments
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="INFOLET_INVOKED" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="INFOLET_INVOCATION_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="CHANNEL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="CREATION_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="LAST_UPDATED_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="RECIPIENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="SENDER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="SERVER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="151" LINES="15" START_COLUMN="11" START_LINE="137"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_INFOLET_INV_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[no comments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no comments
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="41" END_LINE="156" LINES="4" START_COLUMN="11" START_LINE="153"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_INFOLET_INV_FAILURE">
      <COMMENT_FIRST_LINE><![CDATA[no comments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no comments
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SERVER" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="162" LINES="5" START_COLUMN="11" START_LINE="158"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MONITOR_PROGRESS">
      <COMMENT_FIRST_LINE><![CDATA[ Monitors progress of a process by capturing logs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Monitors progress of a process by capturing logs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_MSG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Message to be captured]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="G_MODULEDEBUGPRIORITY" MODE="IN" NAME="I_PRIORITY" TYPE="NUMBER">
        <COMMENT><![CDATA[Priority]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="MS_APPS_UTILITIES.G_STMT" MODE="IN" NAME="I_MSG_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Mesage type]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="OTHERS">
        <COMMENT><![CDATA[ If any exceptions recorded during execution]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Msg Message to be captured]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Priority Priority]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Msg_Type Mesage type]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[others If any exceptions recorded during execution]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="61" END_LINE="174" LINES="5" START_COLUMN="11" START_LINE="170"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_ENRICH_KEYWORD_LIST">
      <COMMENT_FIRST_LINE><![CDATA[ Enriches/delimits the keyword list for keyword filter.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Enriches/delimits the keyword list for keyword filter. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_KEYWORD_LIST" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[keyword separator]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>Enriched delimited keyword for keyword filteration</b> <br/>]]></COMMENT>
      </RETURN>
      <THROWS NAME="OTHERS">
        <COMMENT><![CDATA[ If any exceptions recorded during execution]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_keyword_listList of keywords for filter]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_delimiter  keyword separator]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[others If any exceptions recorded during execution]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>Enriched delimited keyword for keyword filteration</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="186" LINES="5" START_COLUMN="10" START_LINE="182"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CTX_SEARCH">
      <COMMENT_FIRST_LINE><![CDATA[ Build keyword List as per Context grammar specifications of Oracle Text.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Build keyword List as per Context grammar specifications of Oracle Text. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_KEYWORD_LIST" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[keyword separator]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>Enriched delimited keyword for keyword filteration</b> <br/>]]></COMMENT>
      </RETURN>
      <THROWS NAME="NO_DATA_FOUND">
        <COMMENT><![CDATA[ If keyword list has no alphabets/numbers]]></COMMENT>
      </THROWS>
      <THROWS NAME="OTHERS">
        <COMMENT><![CDATA[ If any exceptions recorded during execution]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_keyword_listList of keywords for filter]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_delimiter  keyword separator]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[NO_DATA_FOUND If keyword list has no alphabets/numbers]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[OTHERS If any exceptions recorded during execution]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>Enriched delimited keyword for keyword filteration</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="199" LINES="5" START_COLUMN="10" START_LINE="195"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_LOG_ISSUE">
      <COMMENT_FIRST_LINE><![CDATA[ generates url for editing report output data.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates url for editing report output data. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Subscription response id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE">
        <COMMENT><![CDATA[Recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Channle id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url for navigating to log issue form</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Subs_Resp_Id  Subscription response id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Feed_Data_Id  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On Recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Channel_Id   Channle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url for navigating to log issue form</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="220" LINES="10" START_COLUMN="10" START_LINE="211"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_LOG_ISSUE1">
      <COMMENT_FIRST_LINE><![CDATA[ generates url for editing report output data.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates url for editing report output data. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Subscription response id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE">
        <COMMENT><![CDATA[Recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Channle id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url for navigating to log issue form</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Subs_Resp_Id  Subscription response id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Feed_Data_Id  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On Recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Channel_Id   Channle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url for navigating to log issue form</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="241" LINES="10" START_COLUMN="10" START_LINE="232"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_ORB_LINK">
      <COMMENT_FIRST_LINE><![CDATA[ This generates url to create or edit orb relations.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This generates url to create or edit orb relations. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Subscription response id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE">
        <COMMENT><![CDATA[Recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Channle id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url to create or edit orb relations</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Subs_Resp_Id  Subscription response id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Feed_Data_Id  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On Recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Channel_Id   Channle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url to create or edit orb relations</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="262" LINES="10" START_COLUMN="12" START_LINE="253"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ This generates url for editing report output data for Notify users.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This generates url for editing report output data for Notify users. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Subscription response id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE">
        <COMMENT><![CDATA[Recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Channle id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url to create or edit Notify users</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Subs_Resp_Id  Subscription response id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Feed_Data_Id  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On Recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Channel_Id   Channle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url to create or edit Notify users</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="283" LINES="10" START_COLUMN="10" START_LINE="274"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_EMAIL_CONTENT1">
      <COMMENT_FIRST_LINE><![CDATA[ This generates url for editing email_Content.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This generates url for editing email_Content. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url to create or edit Email_Content</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Feed_Data_Id  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url to create or edit Email_Content</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="299" LINES="7" START_COLUMN="10" START_LINE="293"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_EMAIL_CONTENT">
      <COMMENT_FIRST_LINE><![CDATA[ This generates url for editing Email_Content.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This generates url for editing Email_Content. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url to create or edit Email_Content</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id  Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Feed_Data_Id  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url to create or edit Email_Content</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="315" LINES="8" START_COLUMN="10" START_LINE="308"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_GRCINTEGRATION_AOC">
      <COMMENT_FIRST_LINE><![CDATA[no comments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no comments
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="324" LINES="8" START_COLUMN="10" START_LINE="317"/>
    </FUNCTION>
    <FUNCTION NAME="GET_NEXT_FEED_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Generates Feed id sequentially.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Generates Feed id sequentially. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ROWID" TYPE="ROWID">
        <COMMENT><![CDATA[row id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[<b>feed data id ID</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Rowid row id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>feed data id ID</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="30" END_LINE="333" LINES="4" START_COLUMN="10" START_LINE="330"/>
    </FUNCTION>
    <FUNCTION NAME="FN_UPDATE_FEED_TIMESTAMPS">
      <COMMENT_FIRST_LINE><![CDATA[ Updates the feed fetch timestamp for server urls.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Updates the feed fetch timestamp for server urls. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SERVER_ADD_URL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[server url]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LASTRESPTIMESTAMP" TYPE="VARCHAR2">
        <COMMENT><![CDATA[last response timestamp]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[return code,   <b>1 is successful COMPLETION</b> <br/>
                        <b>0 Is Unsuccessful Completion</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Server_Add_Url server url]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_LastRespTimestamp last response timestamp]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rowno   Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return code,   <b>1 is successful COMPLETION</b> <br/>
                        <b>0 Is Unsuccessful Completion</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="346" LINES="5" START_COLUMN="10" START_LINE="342"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_EDIT_RPTURL">
      <COMMENT_FIRST_LINE><![CDATA[NO COMMENTS
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[NO COMMENTS
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="353" LINES="6" START_COLUMN="10" START_LINE="348"/>
    </FUNCTION>
    <FUNCTION NAME="BUILD_FORM_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Builds the url for form navigation.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Builds the url for form navigation. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2">
        <COMMENT><![CDATA[push infolet]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDIT_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>url for form navigation</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_push_infolet push infolet]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_edit_flag Edit flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>url for form navigation</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="368" LINES="7" START_COLUMN="10" START_LINE="362"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INFOLET_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Gets Infolet id from name.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets Infolet id from name. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2">
        <COMMENT><![CDATA[push infolet name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[<b>Infolet id</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_push_infolet push infolet name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>Infolet id</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="377" LINES="4" START_COLUMN="10" START_LINE="374"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Gets user name from user id.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets user name from user id. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[user id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>user name</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>user name</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="386" LINES="4" START_COLUMN="10" START_LINE="383"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER">
      <COMMENT_FIRST_LINE><![CDATA[ Gets user name having alert notifictaion.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets user name having alert notifictaion. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESPONSE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[subscription id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>user name</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_subs_response_id subscription id]]></COMMENT>
      </TAG>
      <TAG TYPE="@DEPRECATED">
        <COMMENT>
        </COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>user name</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="396" LINES="4" START_COLUMN="10" START_LINE="393"/>
    </FUNCTION>
    <FUNCTION NAME="GET_NOTIFIED_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ Gets user name having alert notifictaion.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets user name having alert notifictaion. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[login user id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <COMMENT_FIRST_LINE><![CDATA[changes
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[changes
]]></COMMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>user name</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id login user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_data_id Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>user name</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="406" LINES="4" START_COLUMN="10" START_LINE="403"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RSS_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Generates rss url.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Generates rss url. <br/>
]]></COMMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[rss hyper text]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete url of the RSS</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_hyper_text rss hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete url of the RSS</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="415" LINES="4" START_COLUMN="10" START_LINE="412"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NOTY_USER">
      <COMMENT_FIRST_LINE><![CDATA[ Gets send notification setting for the subscription.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets send notification setting for the subscription. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBS_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[subscription id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[user id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>yes, if user to be notified by email</b> <br/>
         <b>no, if user not to be notified by email</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_subs_id subscription id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>yes, if user to be notified by email</b> <br/>
         <b>no, if user not to be notified by email</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="427" LINES="5" START_COLUMN="10" START_LINE="423"/>
    </FUNCTION>
    <FUNCTION NAME="INSERT_VIRTUAL_REP_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Gets virtual report id for SYSTEMI user reports.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets virtual report id for SYSTEMI user reports. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_REPORT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[report name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[<b>no .of user reports for systemi,for successful execution</b> <br/>
           <b>NULL for UNSUCCESSFUL EXECUTION</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_report_name report name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>no .of user reports for systemi,for successful execution</b> <br/>
           <b>NULL for UNSUCCESSFUL EXECUTION</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="437" LINES="4" START_COLUMN="10" START_LINE="434"/>
    </FUNCTION>
    <PROCEDURE NAME="EMAIL_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ Sends email notifictaion for the alerts to the users to be notified.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Sends email notifictaion for the alerts to the users to be notified. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message]]></COMMENT>
      </ARGUMENT>
      <THROWS NAME="NO_DATA_FOUND">
        <COMMENT><![CDATA[ If no notification mails to be sent]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pf_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_metric_id  Metric id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_data_id Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error message]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROES">
        <COMMENT><![CDATA[OTHERS if some other error is encounterd]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[NO_DATA_FOUND If no notification mails to be sent]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="41" END_LINE="454" LINES="7" START_COLUMN="11" START_LINE="448"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_AGGR_STATS_COUNT">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the aggregate statistics count.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the aggregate statistics count. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SERVER_URL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[server URL]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[channel source type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_INPUT_MODE" TYPE="CHAR"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[return number, <b>Number of aggregated alerts</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_server_url server URL]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_type  channel source type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_input_mod   alert processing status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return number, <b>Number of aggregated alerts</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="467" LINES="6" START_COLUMN="10" START_LINE="462"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NO_OF_SUBSCRIPTIONS">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the number of subscription for a channel.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the number of subscription for a channel. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_CHANNEL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[channel id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[<b>Number of subscription for the channel</b> <br/>
           <b>0 in case of unsuccessful termination</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[P_Channel_Id channel id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>Number of subscription for the channel</b> <br/>
           <b>0 in case of unsuccessful termination</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="477" LINES="4" START_COLUMN="10" START_LINE="474"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISM_ISSUE_TYPE">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the issue type displayed value.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the issue type displayed value. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IN_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[issue type stored value.]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[return varchhar2, <b>issue type displayed value</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[in_val issue type stored value.]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return varchhar2, <b>issue type displayed value</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="485" LINES="3" START_COLUMN="10" START_LINE="483"/>
    </FUNCTION>
    <FUNCTION NAME="GET_APP_OWN_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the organization name .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the organization name . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IN_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization entity id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[return varchar2, <b>Organization name</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[in_val Organization entity id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return varchar2, <b>Organization name</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="494" LINES="3" START_COLUMN="10" START_LINE="492"/>
    </FUNCTION>
    <FUNCTION NAME="DIFF_MLOV_FILT_COMMA_STR">
      <COMMENT_FIRST_LINE><![CDATA[no commentss
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no commentss
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_MAIN_STRING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_QUERY_LIST" TYPE="VARCHAR2_ARRAY"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="500" LINES="5" START_COLUMN="10" START_LINE="496"/>
    </FUNCTION>
    <FUNCTION NAME="GENERATE_SEQUENCE">
      <COMMENT_FIRST_LINE><![CDATA[ Generates feed sequence id.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Generates feed sequence id. <br/>
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
      <TAG TYPE="@RETURN&lt;B&gt;FEED">
        <COMMENT><![CDATA[sequence number</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="41" END_LINE="505" LINES="1" START_COLUMN="10" START_LINE="505"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ returns the parameter value for the given parameter type and parameter name for the Org.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ returns the parameter value for the given parameter type and parameter name for the Org. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ENTITY_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[organization entity id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAMETER_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[parameter type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAMETER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[parameeter name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>Parameter value</b> <br/>]]></COMMENT>
      </RETURN>
      <THROWS NAME="NO_DATA_FOUND">
        <COMMENT><![CDATA[ when parameter value not found for the type and name]]></COMMENT>
      </THROWS>
      <THROWS NAME="OTHERS">
        <COMMENT><![CDATA[ when any other error encountered]]></COMMENT>
      </THROWS>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_entity_id organization entity id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_parameter_type parameter type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_parameter_name parameeter name]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[NO_DATA_FOUND when parameter value not found for the type and name]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT><![CDATA[OTHERS when any other error encountered]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>Parameter value</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="36" END_LINE="520" LINES="6" START_COLUMN="12" START_LINE="515"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_NOTIFY_USERS_FORM">
      <COMMENT_FIRST_LINE><![CDATA[ generates url for editing report output data by invoking notify users form .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates url for editing report output data by invoking notify users form . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[login user id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[feed dats id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking notify users form</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id login user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_Data_id  feed dats id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On   recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_channnel_id channel id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking notify users form</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="535" LINES="7" START_COLUMN="12" START_LINE="529"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_LOG_ISSUE_FORM">
      <COMMENT_FIRST_LINE><![CDATA[ generates URL for editing report output data by invoking log issue form .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates URL for editing report output data by invoking log issue form . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[login user id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[feed dats id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking log issue form</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id login user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_Data_id   feed dats id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On   recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_channnel_id  channel id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking log issue form</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="550" LINES="7" START_COLUMN="14" START_LINE="544"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_ORB_FORM">
      <COMMENT_FIRST_LINE><![CDATA[ generates URL for editing report output data by invoking ORB form .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates URL for editing report output data by invoking ORB form . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[login user id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[feed dats id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking ORB form</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id login user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_Data_id  feed dats id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On   recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_channnel_id channel id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking ORB form</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="565" LINES="7" START_COLUMN="16" START_LINE="559"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_EMAIL_CONTENT_FORM">
      <COMMENT_FIRST_LINE><![CDATA[ generates url for editing report output data by invoking EMAIL CONTENT form .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates url for editing report output data by invoking EMAIL CONTENT form . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[feed dats id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking EMAIL CONTENT form</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_Data_id  feed dats id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking EMAIL CONTENT form</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="573" LINES="3" START_COLUMN="14" START_LINE="571"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CALL_FORM_LINK">
      <COMMENT_FIRST_LINE><![CDATA[Generates the url for form call
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Generates the url for form call
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAM1" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM2" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM3" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM4" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM5" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ICON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ICON_TITLE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="585" LINES="10" START_COLUMN="14" START_LINE="576"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALERT_ACTIONS_LINK">
      <COMMENT_FIRST_LINE><![CDATA[genrates the url for alert action
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[genrates the url for alert action
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAM1" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM2" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM3" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM4" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="594" LINES="7" START_COLUMN="14" START_LINE="588"/>
    </FUNCTION>
    <FUNCTION NAME="ALERT_ORB_COUNT_FOR_FLT">
      <COMMENT_FIRST_LINE><![CDATA[no comments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[no comments
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FILTER_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="18" END_LINE="601" LINES="5" START_COLUMN="15" START_LINE="597"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MATCH_KEYWORD">
      <COMMENT_FIRST_LINE><![CDATA[ checks is the alert body/subjects match the keyword filter .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ checks is the alert body/subjects match the keyword filter . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_BODY" TYPE="CLOB">
        <COMMENT><![CDATA[alert body]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SUBJECT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[alert subject]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FILTER_KEY" TYPE="VARCHAR2">
        <COMMENT><![CDATA[filter keywords]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>true, if the alert matches the keyword, or there is no filter keyword</b> <br/>
         <b>false, if the KEYWORD filter FAILS</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_body alert body]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_subject alert subject]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_filter_key  filter keywords]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>true, if the alert matches the keyword, or there is no filter keyword</b> <br/>
         <b>false, if the KEYWORD filter FAILS</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="615" LINES="6" START_COLUMN="14" START_LINE="610"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_MANAGE_ALERTS">
      <COMMENT_FIRST_LINE><![CDATA[ generates URL for editing report output data by invoking Manage Alerts .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ generates URL for editing report output data by invoking Manage Alerts . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[login user id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[feed dats id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[recieved on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking Manage Alerts</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id login user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_feed_Data_id  feed dats id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_Received_On   recieved on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_channnel_id channel id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>complete URL editing report output data by invoking Manage Alerts</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="632" LINES="7" START_COLUMN="10" START_LINE="626"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ takes care of the form security  .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ takes care of the form security  . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[pushform_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[process_instance_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[user_name-]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[<b>number 2 VIEW MODE -- 1 EDIT MODE -- 0 RESTRICT</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_id pushform_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id  process_instance_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name   user_name-]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>number 2 VIEW MODE -- 1 EDIT MODE -- 0 RESTRICT</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="647" LINES="7" START_COLUMN="14" START_LINE="641"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_RATING">
      <COMMENT_FIRST_LINE><![CDATA[ Returns the issue rating  .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Returns the issue rating  . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_ISSUE_RATING_GRCI" TYPE="VARCHAR2">
        <COMMENT><![CDATA[issue rating in number]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>ISSUE RATING IN TEXT</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[IP_ISSUE_RATING_GRCI issue rating in number]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>ISSUE RATING IN TEXT</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="33" END_LINE="657" LINES="5" START_COLUMN="14" START_LINE="653"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FORM_NAME">
      <COMMENT_FIRST_LINE><![CDATA[-----------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[-----------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="668" LINES="6" START_COLUMN="10" START_LINE="663"/>
    </FUNCTION>
    <FUNCTION NAME="GET_OBJECT_NAME">
      <COMMENT_FIRST_LINE><![CDATA[-----------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[-----------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="676" LINES="3" START_COLUMN="10" START_LINE="674"/>
    </FUNCTION>
    <FUNCTION NAME="OBJECTNAME_SUBSTR_FOR_ASSGNMNT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="683" LINES="6" START_COLUMN="10" START_LINE="678"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SUBSCRIPTION_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Gets subscription setting for the subscription.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets subscription setting for the subscription. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR">
        <COMMENT><![CDATA[status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[user id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[<b>yes, if subscribe</b> <br/>
         <b>no, if not subscribed</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id user id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[<b>yes, if subscribe</b> <br/>
         <b>no, if not subscribed</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="696" LINES="5" START_COLUMN="10" START_LINE="692"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="21" END_LINE="698" LINES="698" START_COLUMN="39" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_RGA_UTILITIES" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Project: GRC Intelligence<br/>
 Description: Utility package used for RGA related APIs <br/>
 DB impact: YES<br/>
 Commit inside: YES<br/>
 Rollback inside: NO<br/>
 ----------------------------------------------------------------------<br/>
 * ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE NAME="G_RUNNING_LOG_NMBR">
      <COMMENT_FIRST_LINE><![CDATA[package-level variables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[package-level variables
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <FUNCTION NAME="GET_APP_OWN_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the organization name .]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the organization name . <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IN_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization entity id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[return VARCHAR2, <b>Organization name</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[in_val Organization entity id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return VARCHAR2, <b>Organization name</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="23" END_LINE="38" LINES="16" START_COLUMN="12" START_LINE="23"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISM_ISSUE_TYPE">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the iSSUE type displayed value.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the iSSUE type displayed value. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IN_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[iSSUE type stored value.]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[return VARCHAR2, <b>iSSUE type displayed value</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[in_val iSSUE type stored value.]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return VARCHAR2, <b>iSSUE type displayed value</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="26" END_LINE="62" LINES="17" START_COLUMN="12" START_LINE="46"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SELECT_URL_UNCHECKED">
      <COMMENT_FIRST_LINE><![CDATA[ Gets selected URL unchecked for REVIEW/FOLLOWUP status in My Alert Report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets selected URL unchecked for REVIEW/FOLLOWUP status in My Alert Report. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Review/FOLLOWUP flag (R/F)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ROWNO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Feed data id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[return VARCHAR2, <b>complete URL of the unchecked alert</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_type Review/FOLLOWUP flag (R/F)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string  Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rowno   Feed data id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return VARCHAR2, <b>complete URL of the unchecked alert</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="31" END_LINE="98" LINES="28" START_COLUMN="12" START_LINE="71"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AGGR_STATS_COUNT">
      <COMMENT_FIRST_LINE><![CDATA[ Gets the aggregate statistics count.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Gets the aggregate statistics count. <br/>
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SERVER_URL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[server URL]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[channel source type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_INPUT_MODE" TYPE="CHAR"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[return number, <b>Number of aggregated alerts</b> <br/>]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_server_url server URL]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_type  channel source type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_input_mod   alert processing status]]></COMMENT>
      </TAG>
      <TAG TYPE="@THROWS">
        <COMMENT>
        </COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[return number, <b>Number of aggregated alerts</b> <br/>]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="6" END_LINE="206" LINES="98" START_COLUMN="12" START_LINE="109"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NO_OF_SUBSCRIPTIONS">
      <ARGUMENT MODE="IN" NAME="P_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="29" END_LINE="225" LINES="15" START_COLUMN="12" START_LINE="211"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SELECT_URL_CHECKED">
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ROWNO" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="255" LINES="28" START_COLUMN="12" START_LINE="228"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CHANNEL_NAME">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION get_edit_url(i_metric_id           IN NUMBER,
i_process_instance_id IN NUMBER,
i_hyper_text          IN VARCHAR2 DEFAULT NULL)
RETURN VARCHAR2 IS
x_url VARCHAR2(1000);
BEGIN
This generates URL for editing report output data.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION get_edit_url(i_metric_id           IN NUMBER,
i_process_instance_id IN NUMBER,
i_hyper_text          IN VARCHAR2 DEFAULT NULL)
RETURN VARCHAR2 IS
x_url VARCHAR2(1000);
BEGIN
This generates URL for editing report output data.
IF (i_hyper_text IS NULL) THEN
x_url := '&lt;a target="_self" href="javascript:callreportdetails(''Pushinfolet?id=' ||
i_metric_id || CHR(38) || 'proc=' || i_process_instance_id ||
CHR(38) || 'flag=1' || CHR(38) || 'emd=1' || CHR(38) ||
'wrapper=no'')"&gt;&lt;img border="0" src="/si_image/new_pencil.gif"&gt;&lt;/a&gt;';
ELSE
x_url := '&lt;a target="_self" href="javascript:callreportdetails(''Pushinfolet?id=' ||
i_metric_id || CHR(38) || 'proc=' || i_process_instance_id ||
CHR(38) || 'flag=1' || CHR(38) || 'emd=1' || CHR(38) ||
'wrapper=no'')"&gt;' || HTF.escape_sc(i_hyper_text) || '&lt;/a&gt;';
END IF;
RETURN x_url;
EXCEPTION
WHEN OTHERS THEN
RETURN NULL;
END get_edit_url;

]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="6" END_LINE="299" LINES="13" START_COLUMN="12" START_LINE="287"/>
    </FUNCTION>
    <PROCEDURE NAME="SEND_EMAIL_INFOLET_INV_STATUS">
      <ARGUMENT MODE="IN" NAME="INFOLET_INVOKED" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="INFOLET_INVOCATION_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="CHANNEL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="CREATION_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="LAST_UPDATED_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="RECIPIENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="SENDER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="SERVER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ERROR_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="6" END_LINE="366" LINES="66" START_COLUMN="13" START_LINE="301"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_INFOLET_INV_STATUS">
      <ARGUMENT MODE="IN" NAME="I_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="589" LINES="217" START_COLUMN="13" START_LINE="373"/>
    </PROCEDURE>
    <PROCEDURE NAME="EMAIL_INFOLET_INV_FAILURE">
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SERVER" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="780" LINES="185" START_COLUMN="13" START_LINE="596"/>
    </PROCEDURE>
    <PROCEDURE NAME="SEND_EMAIL">
      <ARGUMENT MODE="IN" NAME="X_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_RECIPIENTS" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN" NAME="X_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_TEMPLATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PARAM_NAMES" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN" NAME="X_PARAM_VALUES" TYPE="CLOB_ARRAY"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="17" END_LINE="870" LINES="84" START_COLUMN="13" START_LINE="787"/>
    </PROCEDURE>
    <PROCEDURE NAME="SEND_EMAIL_INDIVIDUALLY">
      <ARGUMENT MODE="IN" NAME="X_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_RECIPIENTS" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN" NAME="X_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_TEMPLATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PARAM_NAMES" TYPE="VARCHAR2_ARRAY"/>
      <ARGUMENT MODE="IN OUT" NAME="X_PARAM_VALUES" TYPE="CLOB_ARRAY"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="X_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="961" LINES="86" START_COLUMN="13" START_LINE="876"/>
    </PROCEDURE>
    <PROCEDURE NAME="PR_MONITOR_PROGRESS">
      <ARGUMENT MODE="IN" NAME="I_MSG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="G_MODULEDEBUGPRIORITY" MODE="IN" NAME="I_PRIORITY" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="MS_APPS_UTILITIES.G_STMT" MODE="IN" NAME="I_MSG_TYPE" TYPE="VARCHAR2"/>
      <COMMENT_FIRST_LINE><![CDATA[i_Rec_Key In Varchar2 Default Null)
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[i_Rec_Key In Varchar2 Default Null)
]]></COMMENT>
      <SUMMARY END_COLUMN="24" END_LINE="1031" LINES="65" START_COLUMN="13" START_LINE="967"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_ENRICH_KEYWORD_LIST">
      <ARGUMENT MODE="IN" NAME="I_KEYWORD_LIST" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="1230" LINES="197" START_COLUMN="12" START_LINE="1034"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CTX_SEARCH">
      <COMMENT_FIRST_LINE><![CDATA[Build keyword List as per Context grammar specifications of Oracle Text.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Build keyword List as per Context grammar specifications of Oracle Text.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_KEYWORD_LIST" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1257" LINES="21" START_COLUMN="12" START_LINE="1237"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_LOG_ISSUE1">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1318" LINES="56" START_COLUMN="12" START_LINE="1263"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_ORB_LINK">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="1392" LINES="73" START_COLUMN="12" START_LINE="1320"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_LOG_ISSUE">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1420" LINES="26" START_COLUMN="12" START_LINE="1395"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_NOTIFY_USERS">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1474" LINES="51" START_COLUMN="12" START_LINE="1424"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_EMAIL_CONTENT1">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="1501" LINES="24" START_COLUMN="12" START_LINE="1478"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_EMAIL_CONTENT">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="1522" LINES="20" START_COLUMN="12" START_LINE="1503"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_GRCINTEGRATION_AOC">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="1553" LINES="30" START_COLUMN="10" START_LINE="1524"/>
    </FUNCTION>
    <FUNCTION NAME="GET_NEXT_FEED_ID">
      <ARGUMENT MODE="IN" NAME="I_ROWID" TYPE="ROWID"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="1570" LINES="12" START_COLUMN="12" START_LINE="1559"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_EDIT_RPTURL">
      <ARGUMENT MODE="IN" NAME="I_METRIC_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1597" LINES="22" START_COLUMN="12" START_LINE="1576"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INFOLET_ID">
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1615" LINES="13" START_COLUMN="12" START_LINE="1603"/>
    </FUNCTION>
    <FUNCTION NAME="BUILD_FORM_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_EDIT_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="1649" LINES="29" START_COLUMN="12" START_LINE="1621"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_NAME">
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1668" LINES="14" START_COLUMN="12" START_LINE="1655"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER">
      <ARGUMENT MODE="IN" NAME="I_SUBS_RESPONSE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="15" END_LINE="1705" LINES="32" START_COLUMN="12" START_LINE="1674"/>
    </FUNCTION>
    <FUNCTION NAME="GET_NOTIFIED_USERS">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION GET_NOTIFIED_USERS(i_subs_response_id VARCHAR2) RETURN VARCHAR2 AS
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION GET_NOTIFIED_USERS(i_subs_response_id VARCHAR2) RETURN VARCHAR2 AS
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1758" LINES="47" START_COLUMN="12" START_LINE="1712"/>
    </FUNCTION>
    <FUNCTION NAME="INSERT_VIRTUAL_REP_ID">
      <ARGUMENT MODE="IN" NAME="P_REPORT_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="1814" LINES="51" START_COLUMN="12" START_LINE="1764"/>
    </FUNCTION>
    <PROCEDURE NAME="EMAIL_NOTIFY_USERS">
      <COMMENT_FIRST_LINE><![CDATA[
&lt;a target="_blank" href="http://rss.cnn.com/rss/edition.rss"&gt;http://rss.cnn.com/rss/edition.rss&lt;/a&gt;

]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[
&lt;a target="_blank" href="http://rss.cnn.com/rss/edition.rss"&gt;http://rss.cnn.com/rss/edition.rss&lt;/a&gt;

]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PF_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2001" LINES="177" START_COLUMN="13" START_LINE="1825"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_NOTY_USER">
      <ARGUMENT MODE="IN" NAME="I_SUBS_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="6" END_LINE="2041" LINES="35" START_COLUMN="12" START_LINE="2007"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RSS_URL">
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="2066" LINES="20" START_COLUMN="12" START_LINE="2047"/>
    </FUNCTION>
    <FUNCTION NAME="FN_UPDATE_FEED_TIMESTAMPS">
      <ARGUMENT MODE="IN" NAME="I_SERVER_ADD_URL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LASTRESPTIMESTAMP" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="32" END_LINE="2103" LINES="32" START_COLUMN="12" START_LINE="2072"/>
    </FUNCTION>
    <FUNCTION NAME="DIFF_MLOV_FILT_COMMA_STR">
      <COMMENT_FIRST_LINE><![CDATA[Begin
g_Running_Log_Nmbr := 0;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Begin
g_Running_Log_Nmbr := 0;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_MAIN_STRING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_QUERY_LIST" TYPE="VARCHAR2_ARRAY"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="2139" LINES="32" START_COLUMN="12" START_LINE="2108"/>
    </FUNCTION>
    <FUNCTION NAME="GENERATE_SEQUENCE">
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="2147" LINES="7" START_COLUMN="10" START_LINE="2141"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE">
      <ARGUMENT MODE="IN" NAME="I_ORG_ENTITY_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PARAMETER_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAMETER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="2195" LINES="47" START_COLUMN="11" START_LINE="2149"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_NOTIFY_USERS_FORM">
      <COMMENT_FIRST_LINE><![CDATA[--The follow functions added on 30-Oct-14 by kvjm
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--The follow functions added on 30-Oct-14 by kvjm
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="2267" LINES="67" START_COLUMN="12" START_LINE="2201"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_LOG_ISSUE_FORM">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="2337" LINES="68" START_COLUMN="12" START_LINE="2270"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_ORB_FORM">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="2394" LINES="55" START_COLUMN="12" START_LINE="2340"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_EMAIL_CONTENT_FORM">
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="2421" LINES="26" START_COLUMN="12" START_LINE="2396"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CALL_FORM_LINK">
      <ARGUMENT MODE="IN" NAME="I_PARAM1" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM2" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM3" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM4" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM5" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ICON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ICON_TITLE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="8" END_LINE="2444" LINES="22" START_COLUMN="14" START_LINE="2423"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALERT_ACTIONS_LINK">
      <ARGUMENT MODE="IN" NAME="I_PARAM1" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM2" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM3" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM4" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="9" END_LINE="2457" LINES="12" START_COLUMN="14" START_LINE="2446"/>
    </FUNCTION>
    <FUNCTION NAME="ALERT_ORB_COUNT_FOR_FLT">
      <ARGUMENT MODE="IN" NAME="I_FILTER_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="8" END_LINE="2502" LINES="44" START_COLUMN="15" START_LINE="2459"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_FILTER_KEY">
      <COMMENT_FIRST_LINE><![CDATA[FILTER CHECK FUNCTION ADDED FOR PERFORMANCE  TUNING OF GRCI
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FILTER CHECK FUNCTION ADDED FOR PERFORMANCE  TUNING OF GRCI
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PATTERN" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2528" LINES="19" START_COLUMN="10" START_LINE="2510"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MATCH_KEYWORD">
      <ARGUMENT MODE="IN" NAME="I_BODY" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FILTER_KEY" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2594" LINES="64" START_COLUMN="11" START_LINE="2531"/>
    </FUNCTION>
    <FUNCTION NAME="GET_URL_MANAGE_ALERTS">
      <COMMENT_FIRST_LINE><![CDATA[----End of FILTER CHECK FUNCTION ADDED FOR PERFORMANCE  TUNING OF GRCI BY DEBDULAL SAMANTA
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[----End of FILTER CHECK FUNCTION ADDED FOR PERFORMANCE  TUNING OF GRCI BY DEBDULAL SAMANTA
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FEED_DATA_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RECEIVED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CHANNEL_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="2736" LINES="139" START_COLUMN="10" START_LINE="2598"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2779" LINES="41" START_COLUMN="11" START_LINE="2739"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_RATING">
      <ARGUMENT MODE="IN" NAME="IP_ISSUE_RATING_GRCI" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="2791" LINES="11" START_COLUMN="10" START_LINE="2781"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FORM_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="2837" LINES="45" START_COLUMN="10" START_LINE="2793"/>
    </FUNCTION>
    <FUNCTION NAME="GET_OBJECT_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="2871" LINES="33" START_COLUMN="10" START_LINE="2839"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FLOW_VIEW_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="'V'" MODE="IN" NAME="PC_VIEW_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="2913" LINES="41" START_COLUMN="10" START_LINE="2873"/>
    </FUNCTION>
    <FUNCTION NAME="OBJECTNAME_SUBSTR_FOR_ASSGNMNT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="2941" LINES="25" START_COLUMN="10" START_LINE="2917"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SUBSCRIPTION_STATUS">
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="6" END_LINE="2966" LINES="23" START_COLUMN="10" START_LINE="2944"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="21" END_LINE="2970" LINES="2970" START_COLUMN="42" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="_GRCIDEV" SCHEMA="Schema_objects">
    <FUNCTION NAME="MS_RGA_VIRTUAL_REP_ID">
      <ARGUMENT MODE="IN" NAME="P_REPORT_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="33" LINES="33" START_COLUMN="40" START_LINE="1"/>
    </FUNCTION>
  </PACKAGE>
  <GENERATOR>
    <OBJECTS>
      <PROCESSED COUNT="1"/>
      <SKIPPED COUNT="0"/>
    </OBJECTS>
    <CREATED DATE="23/4/15" TIME="6:35 PM"/>
    <SETTINGS DEFAULT_KEYWORDS_CASE="UPPER" DEFAULT_NAMES_CASE="UPPER" IGNORE_INFORMAL_COMMENTS="FALSE" INPUT_ENCODING="Cp1252" KEYWORDS_TO_DEFAULT_CASE="TRUE" KEYWORDS_TO_LOWER_CASE="FALSE" KEYWORDS_TO_UPPER_CASE="FALSE" NAMES_TO_DEFAULT_CASE="TRUE" NAMES_TO_LOWER_CASE="FALSE" NAMES_TO_UPPER_CASE="FALSE" SHOW_SKIPPED_PACKAGES="FALSE" VERBOSE="FALSE"/>
  </GENERATOR>
</APPLICATION>