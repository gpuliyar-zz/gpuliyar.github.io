#parse("fastform/MS_RGA/MS_RGA_COMMON_JS.js")
<script>
var g_edit_mode;
var g_sub_id,g_channel_id,g_alert_title;
var g_response_date='';
var x_ALERT_TITLE;
var x_CHANNEL_NAME_GRCI;
var x_received_on;
var chname='';
var alert_title='';
window.onbeforeunload = WindowCloseHanlder;
function viewlink_function(url)
{ 
   window.open(url,'_blank',"scrollbars=yes, left =50,top=100,width=800, height=500,position=center,resizable=yes");
}

F.onLoad (function()
{ 
	
        var tool=document.getElementById("MSAI_186");
        //tool.innerHTML='{$Log Issues}' +F.ALERT_TITLE_GRCI.readValue() +"<div align=right><A href=\"javascript:fcancel()\"><IMG style=\"PADDING-RIGHT: 0px\" alt=\"Cancel the changes made to this form\" align=right   src=\"/images/icons/cross.png\"></A> <A id=msai_submit href=\"javascript:fsubmit()\"><IMG alt=\"Submits for processing it to the next step\" align=right src=\"/images/icons/tick.png\"></A></div>"


//tool.innerHTML=tool.innerHTML + "<A href=\"javascript:fcancel()\"><IMG style=\"PADDING-RIGHT: 0px\" alt=\"Cancel the changes made to this form\" align=right   src=\"/images/icons/cross.png\"></A> <A id=msai_submit href=\"javascript:fsubmit()\"><IMG alt=\"Submits for processing it to the next step\" align=right src=\"/images/icons/tick.png\"></A>"

tool.innerHTML= "<td> <div align=right><A id=msai_submit href=\"javascript:fsubmit()\"><IMG alt=\"Submits for processing it to the next step\"  src=\"/images/icons/tick.png\"></A><A href=\"javascript:fcancel()\"><IMG style=\"PADDING-RIGHT: 0px\" alt=\"Cancel the changes made to this form\"  align=right src=\"/images/icons/cross.png\"></A></div></td>"+tool.innerHTML;


	//F.toolBar.updateTitle( 'Log Issue about : ' + x_ALERT_TITLE);
	F.FEED_DATA_ID.callInfolet();

	//Getting channel name from url
     if (typeof this.href === "undefined") {
           url = document.location.toString();
	}
	else {
           url = this.href.toString();
	}
	arr=url.split("ChName/*-*/");
	chname=arr[1];
	
	F.DD_PROCESS_CODE.write('MS_RGA_LOG_ISSUES');
	F.DD_CURRENT_STAGE.write('CREATE_EDIT'); 	
	F.FND.preventZeroRows();  
	F.FND.showPage(1); 

	if(location.href.indexOf('wrapper=yes') <1 && location.href.indexOf('uniqueid=')<1)
		{
			//showToolbar_new(); 
			
				/*F.toolBar.hideControl("edit");                  //To conditionally hide the 'edit' button from the toolbar
				F.toolBar.hideControl("viewreport");            //To conditionally hide the 'Change History Report' button from the toolbar
				F.toolBar.hideControl("saveandclose");          //To conditionally hide the 'Save and Close' button from the toolbar
				F.toolBar.hideControl("save");*/
			}
	makeTreeonLoad();
	g_edit_mode = F.getFormParameter("emd");
		Ext.onReady(function(){ 
	/*		 Ext.ToolTip({
				target: 'msai_tree_panel_100020',
				html: 'Right Click to Add an Issue',
				trackMouse:true
			});  */
			Ext.QuickTips.init();
		});
		
	
});



function makeTreeonLoad() //
{	

	//Creating the finding tree
	F.FND.setAttributes("Issues",F.ISSUE_ID,F.ISSUE_TYPE_GRCI); //Setting the attributes for Finding, which contain one primary key and one foreign key
	F.FND.setNodeProperties("F",[F.ISSUE_TITLE_GRCI],[F.ISSUE_ID]); //setting up the node properties
	F.FND.useTreeView(20);


}
var rgaIssueId = 1;
F.FND.afterPageLoad(function(srow, erow)
{ 
	if(alert_title==="")
	alert_title = F.ALERT_TITLE_GRCI.readValue(1);

if(srow==1)
{
    var x = F.CUSTOM_FIELD2.readValue(srow);
	
    F.CUSTOM_FIELD5.writeValue(x,x);
	
    x_ALERT_TITLE =F.CUSTOM_FIELD2.readValue(srow);
    x_CHANNEL_NAME_GRCI =chname;
     
var x_received_on_old;
     x_received_on_old= F.CUSTOM_FIELD1.readValue(srow);

	
      x_received_on= F.CUSTOM_FIELD1.readValue(srow);
     //x_received_on  =  x_received_on_old.substring(3,5)+"/"+  x_received_on_old.substring(0,2)+"/"+ x_received_on_old.substring(6,10);
 	//F.CHANNEL_NAME_GRCI.makeLabelRequired(srow);
	//F.ALERT_TITLE_GRCI.makeLabelRequired(srow);
	//F.CUSTOM_FIELD1.makeLabelRequired(srow);
}

/*
  ALERT_TITLE_GRCI ->Alert Title
  CUSTOM_FIELD2 ->Alert Title 
  CHANNEL_NAME_GRCI -> Channel Name
  Received On->CUSTOM_FIELD1
 */
 
   var i,y = F.CUSTOM_FIELD5.read();
   for (i=srow; i<= erow; i++)
   {
		F.ALERT_TITLE_GRCI.write(alert_title,i);
		F.ALERT_TITLE_GRCI.writeAll(alert_title,i);
		F.ALERT_TITLE_GRCI.writeValue(alert_title,alert_title,i);
   }
 
 
   //F.ALERT_TITLE_GRCI.writeValue(decodeHtmlContent(y),decodeHtmlContent(y),erow);
   F.CHANNEL_NAME_GRCI.writeValue( decodeURIComponent(x_CHANNEL_NAME_GRCI),decodeURIComponent(x_CHANNEL_NAME_GRCI),erow);


   F.CUSTOM_FIELD1.writeValue(x_received_on,x_received_on,erow);

  // F.CUSTOM_FIELD1.write(x_received_on,x_received_on,erow);
   

F.ISSUE_RESOLUTION_GRCI.writeValue(1,1,erow);
   F.ISSUE_ID.writeValue('RGAISSUE-'+rgaIssueId, 'RGAISSUE-'+rgaIssueId, erow);
   //F.CHANNEL_NAME_GRCI.makeLabelRequired(erow);
	//F.ALERT_TITLE_GRCI.makeLabelRequired(erow);
	//F.CUSTOM_FIELD1.makeLabelRequired(erow);
  // F.CUSTOM_FIELD4.writeValue('N','N',erow);
   //alert('F.ISSUE_ID.' +F.ISSUE_ID.readValue(erow));
   //alert('F.CUSTOM_FIELD4.' +F.CUSTOM_FIELD4.readValue(erow));
   rgaIssueId++;
   
   
 
});

F.FND.afterClickNode(function(row)
{	


 
	var x_received_on_old1;
    	x_received_on_old1= F.CUSTOM_FIELD1.readValue(row);    
     	//x_received_on  =  x_received_on_old1.substring(3,5)+"/"+  x_received_on_old1.substring(0,2)+"/"+ x_received_on_old1.substring(6,10);
       F.CUSTOM_FIELD1.writeValue(x_received_on,x_received_on,row);
});

F.FND.onAddNode(function(row)
{	
return true;
});


F.FND.afterAddNode(function()
{	
return true;
});


F.FND.onDeleteNode(function(row)
{	
	

	
	if(F.CUSTOM_FIELD4.read(row) == '1'){
		alert('${LogIssDeleAtl}');
		return false;
	}
	
	// else if(typeof(F.OBJECT_ID.readValue(row)) != 'undefined'){
	// alert('${LogIssDele}');
	// return false;
	// }
	
	// if(F.OBJECT_ID.readValue() != null && F.OBJECT_ID.readValue() != '' ){
	// alert('${LogIssDele}');
	// return false;
	// }
	
	 //else
	else if(F.CUSTOM_FIELD4.read(row)=='2')
	{
		alert('${LogIssDele}');
		return false;
	}
	else if(row==1)
	{
		alert('${LogIssDeleAtl}');
		return false;
	}
		
	return true;
});
var x_alert_id,x_sub_id,x_feed_id;
F.onSubmit(function()
{	
	if(alert_title==="")
	alert_title = F.ALERT_TITLE_GRCI.readValue(1);
	
	var row;
	var fnd_cnt = 0;
	fnd_cnt = F.FND.getRowCount();

	var x_dd_created_by =F.DD_CURRENT_USER_NAME.read();
	var chkFNDMarkedForDeletionFlag = false;
	for(row in F.FND.rows()) //loop for all the Findings rows
	{  
	  if(row==1)
	   {
	
	      x_alert_id=F.CUSTOM_FIELD3.readValue(row);
		  x_sub_id=F.SUBS_RESPONSE_ID_GRCI.readValue(row);
		  x_feed_id=F.FEED_DATA_ID.readValue(row);
		 
	    }

		 if((F.ISSUE_TITLE_GRCI.read(row)!== "") && (F.ISSUE_RATING_GRCI.read(row)!== "") && (F.ISSUE_TYPE_GRCI.read(row)!== "") && (F.ISSUE_DETAILS_GRCI.read(row)!== "") && (F.ISSUE_DUE_DATE_GRCI.read(row)!== "") && (F.ISSUE_RESOLUTION_GRCI.read(row)!== "") && (F.OWNER_ORG_GRCI.read(row)!== "") && (F.ISSUE_OWNER_GRCI.read(row)!== "") && (F.APPROVER_ORG_GRCI.read(row)!== "") && (F.ISSUE_APPROVER_GRCI.read(row)!== ""))
		{

		F.ALERT_TITLE_GRCI.write(alert_title,row);
		// F.ALERT_TITLE_GRCI.writeValue(x_alert_id,x_alert_id,row);
		 F.SUBS_RESPONSE_ID_GRCI.writeValue(x_sub_id,x_sub_id,row);
		 F.FEED_DATA_ID.writeValue(x_feed_id,x_feed_id,row);
         F.ISSUE_CREATED_BY.writeValue( x_dd_created_by, x_dd_created_by,row);
		  
		 F.CUSTOM_FIELD4.write(2,row);
         }
		 
		
	} 
	for (row =1; row <= fnd_cnt; row++) {
		if(!F.FND.isMarkedForDeletion(row)) {
			chkFNDMarkedForDeletionFlag = true;
			break;
		}
		else{
			chkFNDMarkedForDeletionFlag = false;
		}
			
			
	}

	if(!chkFNDMarkedForDeletionFlag) {
	
		alert('${LogFndDel}');
		return false;
	}
	
	
			
return true;


});

    
function finding_sec_validation(row)
{     
                if(F.ISSUE_TITLE_GRCI.isEmpty(row))
				{
								alert("${LogIssTitle}"+"("+ row +")");
								return false;
				}				
				if(F.ISSUE_RATING_GRCI.isEmpty(row))//issue rating is empty
                {
                                alert("${LogIssRating}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                                return false;
                }
                if(F.ISSUE_TYPE_GRCI.isEmpty(row))//finding type is empty
                {
                    alert("${LogIssType}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                }
				if(F.ISSUE_DETAILS_GRCI.isEmpty(row))//finding detail is empty
                {
                    alert("${LogIssDet}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                }
                if(F.ISSUE_DUE_DATE_GRCI.isEmpty(row))//issue due date is empty
                {
                    alert("${LogIssDue}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                }
                if(F.ISSUE_RESOLUTION_GRCI.isEmpty(row))//issue resolution is empty
                {
                    alert("${LogIssRes}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                } 
                if(F.OWNER_ORG_GRCI.isEmpty(row))//Owner Org is empty
                  {
                    alert("${LogOwnOrg}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                   }
                if(F.ISSUE_OWNER_GRCI.isEmpty(row))//owner is empty
                   {
                    alert("${LogIssOwn}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                    }
                if(F.APPROVER_ORG_GRCI.isEmpty(row))//Approver Org is empty
                 {
                    alert("${LogAppOrg}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                }
                if(F.ISSUE_APPROVER_GRCI.isEmpty(row))//Approver is empty
                 {
                    alert("${LogIssApp}"+" "+ F.ISSUE_TITLE_GRCI.read(row));
                    return false;
                 }
    } 

F.ISSUE_DUE_DATE_GRCI.onChange ( function(row)
{
	 //------- validating the due date for Fingings and Issues--------------
            //------ get the system date in required format-----
    var dt = new Date();
 /*   var h = dt.getHours();
    var mt = dt.getMinutes();
    var s = dt.getSeconds();
    var x = h+":"+mt+":"+s;
    var m = dt.getMonth()+1; if(m<10) m ='0'+m;
    var d = dt.getDate();  if(d<10) d ='0'+d;
    var y = dt.getFullYear();
    var today = m+"/"+d+"/"+y;
commented out by Rajesh for bug 202127. Instaead of comparing string, comparing date objects.
*/

                       
    for (var i=1; i<=F.FND.getRowCount(); i++)
    {
		var due_date = F.ISSUE_DUE_DATE_GRCI.read(i).substring(0,10);
var due_date_obj = new Date(F.ISSUE_DUE_DATE_GRCI.read(i));
//due_date_obj.setHours();
//alert("due date after"+due_date_obj);
        if((F.ISSUE_DUE_DATE_GRCI.read(i) !== "") && (due_date_obj <= dt) )
        {
			alert("${LogFutDate}");
			F.ISSUE_DUE_DATE_GRCI.write('',i);
            return false;
        }
    }
});  


		
F.ISSUE_TITLE_GRCI.onChange( function(row)
{
	if (F.ISSUE_TITLE_GRCI.read(row).length > 60)
	{
		alert("${LogIssChr}"+" "+row);
		F.ISSUE_TITLE_GRCI.write('',row);
		F.FND.refreshTreeView();
		
		F.FND.showPage(row);

	}
});

function WindowCloseHanlder()
{
 
try{
	if(parent.window.opener !== null)
	{

//	alert(parent.window.opener.hideMask());
	parent.window.opener.hideMask();
	parent.window.opener.setTimeout('hideScreenMask()');
	//document.getElementById("MSAI_GRAY_OUT").style.visibility='hidden';	
	}
	}catch(e)
	{}
} 

function fsubmit(){


		checknsubmit();

	
}

function postFormSubmit(respObj) {

				window.top.close();
}

	
function fcancel(){
	
	window.top.close();
}
</script>