<?xml version="1.0" encoding="UTF-8"?><APPLICATION NAME="AUD - 6.1">
  <PACKAGE NAME="MS_AUD_ADMIN_UTILITIES" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_ADMIN_UTILITIES<br/>
 Description: This package consists assorted list of procedures and
functions invoked manully after Audits installation<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <PROCEDURE NAME="PROC_DATA_MIGRATION">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure that is invoked manually after Audits installation to put back data
 from the view to base tables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure that is invoked manually after Audits installation to put back data
 from the view to base tables
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Module name usually AUD]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_module Module name usually AUD]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="23" END_LINE="19" LINES="3" START_COLUMN="11" START_LINE="17"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CLEANUP">
      <COMMENT_FIRST_LINE><![CDATA[ A clean-up procedure that truncates data from all
 audit realted tables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ A clean-up procedure that truncates data from all
 audit realted tables
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Module name usually AUD]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_module Module name usually AUD]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="23" END_LINE="28" LINES="3" START_COLUMN="11" START_LINE="26"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MIGRATION_BY_LOGIC">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure that is invoked manually after Audits installation to put back data
 from the view to base tables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure that is invoked manually after Audits installation to put back data
 from the view to base tables
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Module name usually AUD]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_module Module name usually AUD]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="23" END_LINE="37" LINES="3" START_COLUMN="11" START_LINE="35"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MIGRATION_BY_LOGIC">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure that is invoked manually after Audits installation to put back data
 from the view to base tables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure that is invoked manually after Audits installation to put back data
 from the view to base tables
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PK_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Module name usually AUD]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pk_value Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_module Module name usually AUD]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="26" END_LINE="48" LINES="4" START_COLUMN="11" START_LINE="45"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_LOG">
      <COMMENT_FIRST_LINE><![CDATA[ Logging procedure to log activities into table ms_aud_dm_logs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Logging procedure to log activities into table ms_aud_dm_logs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOG_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[a number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Table name on which some action takes place]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJ_REF_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="'I'" MODE="IN" NAME="I_LOG_TYPE" TYPE="VARCHAR">
        <COMMENT><![CDATA[Type of log Error(E), Information(I) etc]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_LOG_DESC" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Log description]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_log_id a number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_name Table name on which some action takes place]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_obj_ref_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_log_type Type of log Error(E), Information(I) etc]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_log_desc Log description]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="42" END_LINE="68" LINES="9" START_COLUMN="11" START_LINE="60"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="70" LINES="70" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_ADMIN_UTILITIES" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_DATA_MIGRATION">
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="192" LINES="190" START_COLUMN="11" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CLEANUP">
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="287" LINES="95" START_COLUMN="11" START_LINE="193"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MIGRATION_BY_LOGIC">
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="752" LINES="465" START_COLUMN="11" START_LINE="288"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MIGRATION_BY_LOGIC">
      <ARGUMENT MODE="IN" NAME="I_PK_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_MODULE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="1155" LINES="403" START_COLUMN="11" START_LINE="753"/>
    </PROCEDURE>
    <PROCEDURE NAME="INSERT_LOG">
      <ARGUMENT MODE="IN" NAME="I_LOG_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_OBJ_REF_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="'I'" MODE="IN" NAME="I_LOG_TYPE" TYPE="VARCHAR"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_LOG_DESC" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="15" END_LINE="1202" LINES="47" START_COLUMN="11" START_LINE="1156"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="1203" LINES="1203" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_ADVISOR_UTILITIES" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_ADVISOR_UTILITIES<br/>
 Description: Package contains procedures and functions related
Advisors in the Plan Form<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <FUNCTION NAME="FN_GET_RISK_JSON_STRING">
      <COMMENT_FIRST_LINE><![CDATA[ Function that generates a json string for the given process_id, scenario_id
 and username
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that generates a json string for the given process_id, scenario_id
 and username
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process ID (ms_aud_risk_advisor_data.process_id)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID (ms_rsk_risk_rollup.scenario_id)]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_id Process ID (ms_aud_risk_advisor_data.process_id)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sce_id Scenario ID (ms_rsk_risk_rollup.scenario_id)]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="25" LINES="6" START_COLUMN="13" START_LINE="20"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_JSON_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct a json string from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct a json string from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[owner_organizations of ms_grc_core_object_ogn]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id owner_organizations of ms_grc_core_object_ogn]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sce_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_type Plan Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_advisor_run_flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="43" LINES="8" START_COLUMN="13" START_LINE="36"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_JSON_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct a json string from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct a json string from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[owner_organizations of ms_grc_core_object_ogn]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id owner_organizations of ms_grc_core_object_ogn]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sce_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_type Plan Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_advisor_run_flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="61" LINES="8" START_COLUMN="13" START_LINE="54"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PROCESS_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct a URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct a URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PRODESS_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[object_id of ms_aud_grc_core_object_pub_v]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_prodess_id object_id of ms_aud_grc_core_object_pub_v]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="69" LINES="2" START_COLUMN="13" START_LINE="68"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct a URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct a URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="77" LINES="2" START_COLUMN="13" START_LINE="76"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_NAME_ASCTD_TO_RSK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return a comma separated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return a comma separated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAM_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Y or N]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_param_val Y or N]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="93" LINES="7" START_COLUMN="13" START_LINE="87"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_ID_ASCTD_TO_RSK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return a comma separated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return a comma separated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAM_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Y or N]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_param_val Y or N]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="109" LINES="7" START_COLUMN="13" START_LINE="103"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_ADVISOR_AE_DATA_SYNC">
      <SUMMARY END_COLUMN="39" END_LINE="111" LINES="1" START_COLUMN="14" START_LINE="111"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ADVISOR_RISK_DATA_SYNC">
      <SUMMARY END_COLUMN="41" END_LINE="113" LINES="1" START_COLUMN="14" START_LINE="113"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_EOD_PROCESS">
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="119" LINES="5" START_COLUMN="14" START_LINE="115"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_PROCESS_SCORE">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns ms_rsk_core_object_rollup.residual_rollup_rating
 for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns ms_rsk_core_object_rollup.residual_rollup_rating
 for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_PROCESS_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[ms_rsk_core_object_rollup.core_object_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns residual_rollup_rating as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_process_name ms_rsk_core_object_rollup.core_object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_assessment Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns residual_rollup_rating as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="132" LINES="5" START_COLUMN="13" START_LINE="128"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_SCORE">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns Risk Rating/Score for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns Risk Rating/Score for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_RISK_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Assessment Type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns residual_rollup_rating as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_process_name Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_assessment Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_assessment_type Assessment Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns residual_rollup_rating as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="146" LINES="6" START_COLUMN="13" START_LINE="141"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RATING">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns Low,Medium or High for the given score
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns Low,Medium or High for the given score
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_SCORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Score value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns value Low,Medium or High as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_score Score value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns value Low,Medium or High as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="154" LINES="2" START_COLUMN="13" START_LINE="153"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SUGGESTED_YEAR">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a year for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a year for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SEC" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter not in use/deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LAST_AUDIT_DATE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Last audit date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_NEXT_AUDIT_DATE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Next audit date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns year as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sec Parameter not in use/deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_last_audit_date Last audit date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_next_audit_date Next audit date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_score Score value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns year as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="170" LINES="7" START_COLUMN="13" START_LINE="164"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ISSUE">
      <COMMENT_FIRST_LINE><![CDATA[ Returns count of open issues as Number
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Returns count of open issues as Number
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process ID as in ms_ism_issue_ico.ico_title]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns count of open issues as Number]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Process ID as in ms_ism_issue_ico.ico_title]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns count of open issues as Number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="178" LINES="2" START_COLUMN="13" START_LINE="177"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ISSUE_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Construnts an URL for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Construnts an URL for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="OPEN_ISSUE" TYPE="NUMBER">
        <COMMENT><![CDATA[Count of Open Issues]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns count of open issues as Number]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[open_issue Count of Open Issues]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Process ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns count of open issues as Number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="192" LINES="6" START_COLUMN="13" START_LINE="187"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ISSUE_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Issue details for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Issue details for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[AE ID as in ms_ism_issue_ico.ico_title]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD">
        <COMMENT><![CDATA[Returns set of data as pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_ae_id AE ID as in ms_ism_issue_ico.ico_title]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="43" END_LINE="200" LINES="2" START_COLUMN="13" START_LINE="199"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_CRNT_IN_SUG_YEARS">
      <ARGUMENT MODE="IN" NAME="SUGGESTED_YEAS" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="203" LINES="2" START_COLUMN="13" START_LINE="202"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MODIFY_PROCESS_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function inserts a string in between the given input string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function inserts a string in between the given input string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PROCESS_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Sting on which manipulation needs to be carried out]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a manipulated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[process_name Sting on which manipulation needs to be carried out]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a manipulated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="211" LINES="2" START_COLUMN="13" START_LINE="210"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_ADVISOR_ORG_DATA_SYNC">
      <COMMENT_FIRST_LINE><![CDATA[added by product dev for the organization advisor for GASCO
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[added by product dev for the organization advisor for GASCO
]]></COMMENT>
      <SUMMARY END_COLUMN="40" END_LINE="214" LINES="1" START_COLUMN="14" START_LINE="214"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ADVISOR_ORGRSK_DATA_SYNC">
      <SUMMARY END_COLUMN="43" END_LINE="216" LINES="1" START_COLUMN="14" START_LINE="216"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_ORG_JSON_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a JSON string for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a JSON string for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter not in use/deprecated]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON sting as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sce_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_type Plan Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_advisor_run_flag Parameter not in use/deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON sting as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="232" LINES="7" START_COLUMN="13" START_LINE="226"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORGRSK_JSON_STRING">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a JSON string for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a JSON string for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON sting as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sce_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON sting as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="246" LINES="6" START_COLUMN="13" START_LINE="241"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORGRSK_JSON_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a JSON string for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a JSON string for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter not in use/deprecated]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON sting as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sce_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_type Plan Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_advisor_run_flag Parameter not in use/deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON sting as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="262" LINES="7" START_COLUMN="13" START_LINE="256"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_SCORE">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns Rating/Score for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns Rating/Score for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_ORG_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns ms_rsk_organization_rollup.residual_rollup_rating as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_org_name Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_assessment Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns ms_rsk_organization_rollup.residual_rollup_rating as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="274" LINES="5" START_COLUMN="13" START_LINE="270"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function that performs a replace operation on the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that performs a replace operation on the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_NAME" TYPE="VARCHAR">
        <COMMENT><![CDATA[Organization Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a string as varchar2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_name Organization Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a string as varchar2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="282" LINES="2" START_COLUMN="13" START_LINE="281"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_OPEN_ISSUE">
      <COMMENT_FIRST_LINE><![CDATA[ Returns count of open issues as Number
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Returns count of open issues as Number
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process ID as in ms_ism_issue_iao.iao_title]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns count of open issues as Number]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Process ID as in ms_ism_issue_iao.iao_title]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns count of open issues as Number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="290" LINES="2" START_COLUMN="13" START_LINE="289"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_OPEN_ISSUE_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct an URL for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct an URL for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="OPEN_ISSUE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID of the URL]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Open Issues count]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[object_id Object ID of the URL]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="304" LINES="6" START_COLUMN="13" START_LINE="299"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_OPEN_ISSUE_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return a comma separated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return a comma separated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="43" END_LINE="312" LINES="2" START_COLUMN="13" START_LINE="311"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_NAME_ASCTD_TO_RSK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return a comma separated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return a comma separated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="320" LINES="2" START_COLUMN="13" START_LINE="319"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_ID_ASCTD_TO_RSK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return a comma separated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return a comma separated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rsk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="328" LINES="2" START_COLUMN="13" START_LINE="327"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORGAE_RSK_JSON_DATA">
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="18" END_LINE="335" LINES="7" START_COLUMN="12" START_LINE="329"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_JSON_STRING">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="18" END_LINE="343" LINES="8" START_COLUMN="13" START_LINE="336"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="29" END_LINE="344" LINES="344" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_ADVISOR_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_RISK_JSON_STRING">
      <ARGUMENT MODE="IN" NAME="I_PROCESS_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="31" END_LINE="103" LINES="101" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_JSON_DATA">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="27" END_LINE="393" LINES="289" START_COLUMN="13" START_LINE="105"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_JSON_DATA">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="29" END_LINE="562" LINES="168" START_COLUMN="13" START_LINE="395"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PROCESS_URL">
      <ARGUMENT MODE="IN" NAME="I_PRODESS_ID" TYPE="VARCHAR"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="614" LINES="51" START_COLUMN="13" START_LINE="564"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_URL">
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="666" LINES="51" START_COLUMN="13" START_LINE="616"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_NAME_ASCTD_TO_RSK">
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="725" LINES="58" START_COLUMN="13" START_LINE="668"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_ID_ASCTD_TO_RSK">
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="789" LINES="63" START_COLUMN="13" START_LINE="727"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_ADVISOR_AE_DATA_SYNC">
      <SUMMARY END_COLUMN="33" END_LINE="909" LINES="119" START_COLUMN="14" START_LINE="791"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ADVISOR_RISK_DATA_SYNC">
      <SUMMARY END_COLUMN="35" END_LINE="1002" LINES="92" START_COLUMN="14" START_LINE="911"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_EOD_PROCESS">
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1019" LINES="16" START_COLUMN="14" START_LINE="1004"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_PROCESS_SCORE">
      <ARGUMENT MODE="IN" NAME="LV_PROCESS_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="1090" LINES="70" START_COLUMN="13" START_LINE="1021"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_SCORE">
      <ARGUMENT MODE="IN" NAME="LV_RISK_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1167" LINES="76" START_COLUMN="13" START_LINE="1092"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RATING">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION fn_get_rating (lv_score VARCHAR2)
RETURN VARCHAR2
AS
lc_rating   VARCHAR2 (1000);
lc_sql      VARCHAR2 (4000);
BEGIN
lc_sql :=
'SELECT risk_score
FROM ms_rsk_assessed_score
WHERE :1 BETWEEN minimum_value AND maximum_value';
EXECUTE IMMEDIATE lc_sql
INTO lc_rating
USING lv_score;
IF lc_rating IS NOT NULL
THEN
lc_rating := lc_rating || ' [' || lv_score || ']';
END IF;
RETURN lc_rating;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_get_rating;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION fn_get_rating (lv_score VARCHAR2)
RETURN VARCHAR2
AS
lc_rating   VARCHAR2 (1000);
lc_sql      VARCHAR2 (4000);
BEGIN
lc_sql :=
'SELECT risk_score
FROM ms_rsk_assessed_score
WHERE :1 BETWEEN minimum_value AND maximum_value';
EXECUTE IMMEDIATE lc_sql
INTO lc_rating
USING lv_score;
IF lc_rating IS NOT NULL
THEN
lc_rating := lc_rating || ' [' || lv_score || ']';
END IF;
RETURN lc_rating;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_get_rating;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_SCORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="1236" LINES="41" START_COLUMN="14" START_LINE="1196"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SUGGESTED_YEAR">
      <ARGUMENT MODE="IN" NAME="I_SEC" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LAST_AUDIT_DATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_NEXT_AUDIT_DATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="1292" LINES="55" START_COLUMN="13" START_LINE="1238"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ISSUE">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="7" END_LINE="1356" LINES="63" START_COLUMN="13" START_LINE="1294"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ISSUE_URL">
      <ARGUMENT MODE="IN" NAME="OPEN_ISSUE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="1424" LINES="67" START_COLUMN="13" START_LINE="1358"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ISSUE_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD"/>
      <SUMMARY END_COLUMN="33" END_LINE="1509" LINES="84" START_COLUMN="13" START_LINE="1426"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_CRNT_IN_SUG_YEARS">
      <ARGUMENT MODE="IN" NAME="SUGGESTED_YEAS" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="34" END_LINE="1536" LINES="26" START_COLUMN="13" START_LINE="1511"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MODIFY_PROCESS_NAME">
      <ARGUMENT MODE="IN" NAME="PROCESS_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="1555" LINES="18" START_COLUMN="13" START_LINE="1538"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_ADVISOR_ORG_DATA_SYNC">
      <SUMMARY END_COLUMN="34" END_LINE="1657" LINES="101" START_COLUMN="14" START_LINE="1557"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ADVISOR_ORGRSK_DATA_SYNC">
      <SUMMARY END_COLUMN="37" END_LINE="1754" LINES="96" START_COLUMN="14" START_LINE="1659"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_ORG_JSON_DATA">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION fn_get_org_json_data (
i_sce_id      VARCHAR2,
i_plan_type   VARCHAR2,
i_user_name   VARCHAR2,
i_advisor_run_flag VARCHAR2
)
RETURN CLOB
IS
lc_xml_data    CLOB;
lc_json_data   CLOB;                        --VARCHAR2 (32000) := NULL;
lc_ch          clob;
lc_count       NUMBER           := 0;
lc_param_val   VARCHAR2 (10);
BEGIN
FOR rec IN (SELECT   a.object_id AS object_id,
a.object_name as object_name,
ms_aud_advisor_utilities.fn_get_rating(ms_aud_advisor_utilities.fn_get_org_score (a.object_id,i_sce_id)) AS score,
a.start_date AS start_date,
a.end_date AS end_date,
a.next_audit_date AS next_audit_date,
a.suggested_years AS suggested_years,
a.planned_years AS planned_years,
a.open_issue AS open_issue,
a.planned_candidates AS planned_candidates,
A.FK AS FK,
A.OBJECT_URL AS OBJECT_URL
FROM ms_aud_org_advisor_data_v a, si_org_entities_t b
WHERE a.object_id = b.org_entity_id
AND (   b.end_date IS NULL
OR TRUNC (b.end_date) &gt; TRUNC (SYSDATE)
)
ORDER BY score DESC NULLS LAST, object_name ASC)
LOOP
lc_ch :=
ms_aud_advisor_utilities.fn_get_orgrsk_json_string
(rec.object_id,
i_sce_id,
i_user_name
);
rec.score :=
ms_aud_advisor_utilities.fn_get_rating
(ms_aud_advisor_utilities.fn_get_org_score (rec.object_id,
i_sce_id
)
);
rec.open_issue :=
ms_aud_advisor_utilities.fn_get_org_open_issue_url
(ms_aud_advisor_utilities.fn_get_org_open_issue (rec.object_id),
rec.object_id,
i_user_name
);
lc_count := lc_count + 1;
IF i_plan_type &lt;&gt; '1'
THEN
rec.suggested_years :=
ms_aud_advisor_utilities.fn_get_suggested_year
(i_sce_id,
rec.start_date,
rec.next_audit_date,
rec.score
);
END IF;
IF ms_aud_advisor_utilities.fn_check_crnt_in_sug_years
(rec.suggested_years) =
1
THEN
rec.object_url :=
ms_aud_advisor_utilities.fn_modify_process_name
(rec.object_name);
END IF;
IF lc_ch IS NULL
THEN
lc_ch := ''' ,leaf:true';
ELSE
lc_ch := ''' ,children:' || lc_ch;
END IF;
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,fk:'''
|| rec.fk
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\''''')
|| ''' ,object_url:'''
|| rec.object_url
|| ''' ,score:'''
|| rec.score
|| ''' ,last_audit_start_date:'''
|| rec.start_date
|| ''' ,last_audit_end_date:'''
|| rec.end_date
|| ''' ,next_audit_date:'''
|| rec.next_audit_date
|| ''' ,suggested_years:'''
|| rec.suggested_years
|| ''' ,planned_years:'''
|| rec.planned_years
|| ''' ,open_issue:'''
|| rec.open_issue
|| ''' ,planned_candidates:'''
|| rec.planned_candidates
|| ''' ,checked:false ,uiProvider:Ext.ux.tree.CheckboxColumnNodeUI ,expanded:false ,iconCls:''task_org'
|| lc_ch
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,fk:'''
|| rec.fk
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\''''')
|| ''' ,object_url:'''
|| rec.object_url
|| ''' ,score:'''
|| rec.score
|| ''' ,last_audit_start_date:'''
|| rec.start_date
|| ''' ,last_audit_end_date:'''
|| rec.end_date
|| ''' ,next_audit_date:'''
|| rec.next_audit_date
|| ''' ,suggested_years:'''
|| rec.suggested_years
|| ''' ,planned_years:'''
|| rec.planned_years
|| ''' ,open_issue:'''
|| rec.open_issue
|| ''' ,planned_candidates:'''
|| rec.planned_candidates
|| ''' ,checked:false ,uiProvider:Ext.ux.tree.CheckboxColumnNodeUI ,expanded:false ,iconCls:''task_org'
|| lc_ch
|| '}';
END IF;
END LOOP;
lc_json_data := '[' || lc_json_data || ']';
RETURN lc_json_data;
EXCEPTION
WHEN OTHERS
THEN
return null;
END fn_get_org_json_data;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION fn_get_org_json_data (
i_sce_id      VARCHAR2,
i_plan_type   VARCHAR2,
i_user_name   VARCHAR2,
i_advisor_run_flag VARCHAR2
)
RETURN CLOB
IS
lc_xml_data    CLOB;
lc_json_data   CLOB;                        --VARCHAR2 (32000) := NULL;
lc_ch          clob;
lc_count       NUMBER           := 0;
lc_param_val   VARCHAR2 (10);
BEGIN
FOR rec IN (SELECT   a.object_id AS object_id,
a.object_name as object_name,
ms_aud_advisor_utilities.fn_get_rating(ms_aud_advisor_utilities.fn_get_org_score (a.object_id,i_sce_id)) AS score,
a.start_date AS start_date,
a.end_date AS end_date,
a.next_audit_date AS next_audit_date,
a.suggested_years AS suggested_years,
a.planned_years AS planned_years,
a.open_issue AS open_issue,
a.planned_candidates AS planned_candidates,
A.FK AS FK,
A.OBJECT_URL AS OBJECT_URL
FROM ms_aud_org_advisor_data_v a, si_org_entities_t b
WHERE a.object_id = b.org_entity_id
AND (   b.end_date IS NULL
OR TRUNC (b.end_date) &gt; TRUNC (SYSDATE)
)
ORDER BY score DESC NULLS LAST, object_name ASC)
LOOP
lc_ch :=
ms_aud_advisor_utilities.fn_get_orgrsk_json_string
(rec.object_id,
i_sce_id,
i_user_name
);
rec.score :=
ms_aud_advisor_utilities.fn_get_rating
(ms_aud_advisor_utilities.fn_get_org_score (rec.object_id,
i_sce_id
)
);
rec.open_issue :=
ms_aud_advisor_utilities.fn_get_org_open_issue_url
(ms_aud_advisor_utilities.fn_get_org_open_issue (rec.object_id),
rec.object_id,
i_user_name
);
lc_count := lc_count + 1;
IF i_plan_type &lt;&gt; '1'
THEN
rec.suggested_years :=
ms_aud_advisor_utilities.fn_get_suggested_year
(i_sce_id,
rec.start_date,
rec.next_audit_date,
rec.score
);
END IF;
IF ms_aud_advisor_utilities.fn_check_crnt_in_sug_years
(rec.suggested_years) =
1
THEN
rec.object_url :=
ms_aud_advisor_utilities.fn_modify_process_name
(rec.object_name);
END IF;
IF lc_ch IS NULL
THEN
lc_ch := ''' ,leaf:true';
ELSE
lc_ch := ''' ,children:' || lc_ch;
END IF;
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,fk:'''
|| rec.fk
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\''''')
|| ''' ,object_url:'''
|| rec.object_url
|| ''' ,score:'''
|| rec.score
|| ''' ,last_audit_start_date:'''
|| rec.start_date
|| ''' ,last_audit_end_date:'''
|| rec.end_date
|| ''' ,next_audit_date:'''
|| rec.next_audit_date
|| ''' ,suggested_years:'''
|| rec.suggested_years
|| ''' ,planned_years:'''
|| rec.planned_years
|| ''' ,open_issue:'''
|| rec.open_issue
|| ''' ,planned_candidates:'''
|| rec.planned_candidates
|| ''' ,checked:false ,uiProvider:Ext.ux.tree.CheckboxColumnNodeUI ,expanded:false ,iconCls:''task_org'
|| lc_ch
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,fk:'''
|| rec.fk
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\''''')
|| ''' ,object_url:'''
|| rec.object_url
|| ''' ,score:'''
|| rec.score
|| ''' ,last_audit_start_date:'''
|| rec.start_date
|| ''' ,last_audit_end_date:'''
|| rec.end_date
|| ''' ,next_audit_date:'''
|| rec.next_audit_date
|| ''' ,suggested_years:'''
|| rec.suggested_years
|| ''' ,planned_years:'''
|| rec.planned_years
|| ''' ,open_issue:'''
|| rec.open_issue
|| ''' ,planned_candidates:'''
|| rec.planned_candidates
|| ''' ,checked:false ,uiProvider:Ext.ux.tree.CheckboxColumnNodeUI ,expanded:false ,iconCls:''task_org'
|| lc_ch
|| '}';
END IF;
END LOOP;
lc_json_data := '[' || lc_json_data || ']';
RETURN lc_json_data;
EXCEPTION
WHEN OTHERS
THEN
return null;
END fn_get_org_json_data;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="28" END_LINE="2008" LINES="101" START_COLUMN="13" START_LINE="1908"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORGRSK_JSON_STRING">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="33" END_LINE="2104" LINES="95" START_COLUMN="13" START_LINE="2010"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORGRSK_JSON_DATA">
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="31" END_LINE="2204" LINES="99" START_COLUMN="13" START_LINE="2106"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_SCORE">
      <ARGUMENT MODE="IN" NAME="LV_ORG_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_ASSESSMENT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2272" LINES="67" START_COLUMN="13" START_LINE="2206"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_URL">
      <ARGUMENT MODE="IN" NAME="I_ORG_NAME" TYPE="VARCHAR"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="2287" LINES="14" START_COLUMN="13" START_LINE="2274"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_OPEN_ISSUE">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="29" END_LINE="2335" LINES="47" START_COLUMN="13" START_LINE="2289"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_OPEN_ISSUE_URL">
      <ARGUMENT MODE="IN" NAME="OPEN_ISSUE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="2404" LINES="68" START_COLUMN="13" START_LINE="2337"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_OPEN_ISSUE_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD"/>
      <SUMMARY END_COLUMN="37" END_LINE="2489" LINES="84" START_COLUMN="13" START_LINE="2406"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_NAME_ASCTD_TO_RSK">
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="2515" LINES="25" START_COLUMN="13" START_LINE="2491"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_ID_ASCTD_TO_RSK">
      <ARGUMENT MODE="IN" NAME="I_RSK_ID" TYPE="VARCHAR"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="2539" LINES="23" START_COLUMN="13" START_LINE="2517"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORGAE_RSK_JSON_DATA">
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="34" END_LINE="2646" LINES="107" START_COLUMN="10" START_LINE="2540"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_JSON_STRING">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ADVISOR_RUN_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="29" END_LINE="2745" LINES="99" START_COLUMN="11" START_LINE="2647"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="29" END_LINE="2746" LINES="2746" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_ASSESSMENT" SCHEMA="Schema_objects">
    <VARIABLE NAME="SCENARIO_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="SCENARIO_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000 CHAR)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="5" LINES="5" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_ASSESSMENT_REC" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_ASSESSMENT">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_ASSESSMENT" TYPE="TABLE OF MS_AUD_ASSESSMENT">
        <COMMENT><![CDATA[Collection Type : TABLE OF ms_aud_assessment]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_AUDITABLE_ENTITY_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDITABLE_ENTITY_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="31" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDITABLE_ENTITY_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="338" LINES="315" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="783" LINES="441" START_COLUMN="15" START_LINE="343"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="3590" LINES="2793" START_COLUMN="15" START_LINE="798"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="31" END_LINE="3591" LINES="3591" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDITABLE_ENTIT_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDITABLE_ENTIT_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDITABLE_ENTIT_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDITOR_PROFILE_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDITOR_PROFILE_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDITOR_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDITOR_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDITOR_PROFILE_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDITOR_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDITOR_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDITOR_PROFILE_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDITOR_PROFILE_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDITOR_PROFILE_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="107" LINES="84" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="192" LINES="81" START_COLUMN="15" START_LINE="112"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="696" LINES="494" START_COLUMN="15" START_LINE="203"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="697" LINES="697" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_CLOSURE_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_CLOSURE_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_CLOSURE_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_CLOSURE_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_CLOSURE_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_CLOSURE_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="263" LINES="240" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="348" LINES="81" START_COLUMN="15" START_LINE="268"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="1705" LINES="1345" START_COLUMN="15" START_LINE="361"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1707" LINES="1707" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_DETAILS_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_DETAILS_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_DETAILS_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_DETAILS_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_DETAILS_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_DETAILS_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="107" LINES="84" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="192" LINES="81" START_COLUMN="15" START_LINE="112"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="501" LINES="297" START_COLUMN="15" START_LINE="205"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="503" LINES="503" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_ISSUE_REV_TASK_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_ISSUE_REV_TASK_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="35" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_ISSUE_REV_TASK_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="197" LINES="174" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="282" LINES="81" START_COLUMN="15" START_LINE="202"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="1898" LINES="1604" START_COLUMN="15" START_LINE="295"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="35" END_LINE="1900" LINES="1900" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="20" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="19" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_PLAN_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_PLAN_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_PLAN_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_REPORT_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_REPORT_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_REPORT_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_REPORT_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_REPORT_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_REPORT_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="209" LINES="186" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="294" LINES="81" START_COLUMN="15" START_LINE="214"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="2136" LINES="1828" START_COLUMN="15" START_LINE="309"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="2137" LINES="2137" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_SECURITY" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_AUDIT_SECURITY<br/>
 Description: Audits security related checks are performed using this package.
These procedures and functions are invoked in various Reports
and other packages to enforce Audit related security<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <FUNCTION NAME="CHECK_VIEW_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has any kind of access or privilege
 for the given Audit or any other object like task, draft issues etc
 by internally calling other security related fucntions
 like check_team_member/check_user_activity/check_restricted_view_access etc
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has any kind of access or privilege
 for the given Audit or any other object like task, draft issues etc
 by internally calling other security related fucntions
 like check_team_member/check_user_activity/check_restricted_view_access etc
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_OBJECT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Push Form name as in ms_aud_audit.dd_object_type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_RESTRICT_ACCESS_TO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Is access restricted Y or N]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_OWNERS_ORGANIZATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[A constant with value VIEW]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns ACCESS or NOACCESS]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_object_name Push Form name as in ms_aud_audit.dd_object_type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_restrict_access_to Is access restricted Y or N]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_owners_organization Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_action A constant with value VIEW]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns ACCESS or NOACCESS]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="34" LINES="9" START_COLUMN="13" START_LINE="26"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has access to particular
 push form for the given process instance id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has access to particular
 push form for the given process instance id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Push form ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_id Push form ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="49" LINES="6" START_COLUMN="13" START_LINE="44"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_TEAM_MEMBER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user is part of the given audit ids
 team member or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user is part of the given audit ids
 team member or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating that the given user is
a team member and latter indicating given user is not a team member]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating that the given user is
a team member and latter indicating given user is not a team member]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="63" LINES="5" START_COLUMN="13" START_LINE="59"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_AUDITOR">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user is an Auditor of the given audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user is an Auditor of the given audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="72" LINES="2" START_COLUMN="13" START_LINE="71"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_AUDIT_LEAD_MANAGER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user is part of the given audits
 Lead Manager/Aduti Manager or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user is part of the given audits
 Lead Manager/Aduti Manager or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="85" LINES="5" START_COLUMN="13" START_LINE="81"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_RESTRICTED_VIEW_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has the Restricted Audits activity
 for the given Organization
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has the Restricted Audits activity
 for the given Organization
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_OWNER_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_owner_org Organization]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="98" LINES="5" START_COLUMN="13" START_LINE="94"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_SCH_AUDIT_EDITABLITY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has the Modify Schedule Audit activity
 for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has the Modify Schedule Audit activity
 for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_MODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Mode Editable or Non-editable]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_mode Mode Editable or Non-editable]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="113" LINES="6" START_COLUMN="13" START_LINE="108"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_USER_ACTIVITY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has particular activity assigned or not
 for the given Organization
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has particular activity assigned or not
 for the given Organization
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_OWNER_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_ACTIVITY" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Activity Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_owner_org Organization]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_activity  Activity Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="128" LINES="6" START_COLUMN="13" START_LINE="123"/>
    </FUNCTION>
    <FUNCTION NAME="EMAIL_SECURITY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to perform various checks on the form that are opened through
 link provided in the email body for example form to be opened in editable or non-editable mode
 form already locked by other user etc
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to perform various checks on the form that are opened through
 link provided in the email body for example form to be opened in editable or non-editable mode
 form already locked by other user etc
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Push form ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instnace ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_id Push form ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process Instnace ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or 0 with former indicating Success and latter indicating Failure]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="144" LINES="6" START_COLUMN="13" START_LINE="139"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="26" END_LINE="145" LINES="145" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_SECURITY" SCHEMA="Schema_objects">
    <FUNCTION NAME="CHECK_VIEW_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_OBJECT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_RESTRICT_ACCESS_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_OWNERS_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ACTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="68" LINES="66" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="190" LINES="121" START_COLUMN="13" START_LINE="70"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_AUDITOR">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="210" LINES="19" START_COLUMN="13" START_LINE="192"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_AUDIT_LEAD_MANAGER">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="32" END_LINE="247" LINES="36" START_COLUMN="13" START_LINE="212"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_TEAM_MEMBER">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="300" LINES="52" START_COLUMN="10" START_LINE="249"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_RESTRICTED_VIEW_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_OWNER_ORG" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="36" END_LINE="335" LINES="34" START_COLUMN="13" START_LINE="302"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_SCH_AUDIT_EDITABLITY">
      <ARGUMENT MODE="IN" NAME="IP_MODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="404" LINES="68" START_COLUMN="13" START_LINE="337"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_USER_ACTIVITY">
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_OWNER_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ACTIVITY" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="430" LINES="25" START_COLUMN="13" START_LINE="406"/>
    </FUNCTION>
    <FUNCTION NAME="EMAIL_SECURITY">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="852" LINES="421" START_COLUMN="13" START_LINE="432"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="26" END_LINE="853" LINES="853" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_TASK_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_TASK_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_TASK_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_AUDIT_TASK_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_AUDIT_TASK_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_AUDIT_TASK_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="359" LINES="336" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="444" LINES="81" START_COLUMN="15" START_LINE="364"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="2472" LINES="2014" START_COLUMN="15" START_LINE="459"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="2473" LINES="2473" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CHECKLIST_TASK_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_CHECKLIST_TASK_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CHECKLIST_TASK_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CHECKLIST_TASK_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_CHECKLIST_TASK_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CHECKLIST_TASK_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="413" LINES="390" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="498" LINES="81" START_COLUMN="15" START_LINE="418"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="4194" LINES="3682" START_COLUMN="15" START_LINE="513"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="4195" LINES="4195" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CHK_QUESTION_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_CHK_QUESTION_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_QST_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_QST_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="56" LINES="9" START_COLUMN="15" START_LINE="48"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="57" LINES="57" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CHK_QUESTION_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_QST_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="91" LINES="77" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_QST_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_QST_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="175" LINES="77" START_COLUMN="15" START_LINE="99"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="177" LINES="177" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CHK_SECTION_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_CHK_SECTION_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="56" LINES="9" START_COLUMN="15" START_LINE="48"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="57" LINES="57" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CHK_SECTION_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="91" LINES="77" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_SEC_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="175" LINES="77" START_COLUMN="15" START_LINE="99"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="177" LINES="177" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_COMPONENTS" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_COMPONENTS<br/>
 Description: Package that helps to generate configurable IDs related to
Audits<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <FUNCTION NAME="MS_AUD_GENERATE_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to generate IDs like Audit ID, Task ID,Plan ID etc in Audits application
 Internally it invokes ms_apps_utilities.get_next_id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to generate IDs like Audit ID, Task ID,Plan ID etc in Audits application
 Internally it invokes ms_apps_utilities.get_next_id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="FORMNAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Module name AUD]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ID_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column name for which ID needs to be generated, for ex AUDIT_ID,TASK_ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Formname]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns the generated ID as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[formname Module name AUD]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[id_name Column name for which ID needs to be generated, for ex AUDIT_ID,TASK_ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Formname]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns the generated ID as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="25" LINES="6" START_COLUMN="13" START_LINE="20"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="22" END_LINE="26" LINES="26" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_COMPONENTS" SCHEMA="Schema_objects">
    <FUNCTION NAME="MS_AUD_GENERATE_ID">
      <ARGUMENT MODE="IN" NAME="FORMNAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ID_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="77" LINES="75" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="22" END_LINE="78" LINES="78" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CONFIG_UTILITIES" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_CONFIG_UTILITIES<br/>
 Description: Package that majorly does XML transformations to
and from CLOB or XML type data<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <FUNCTION NAME="FN_GET_XSL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return XSL Stylesheet for the given workflow codes
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return XSL Stylesheet for the given workflow codes
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of source]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of destination]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns mapped XSL stylesheet between the source
and destination workflow code as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_flow Workflow code of source]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dest_flow Workflow code of destination]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns mapped XSL stylesheet between the source
and destination workflow code as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="20" LINES="2" START_COLUMN="13" START_LINE="19"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TARGET_VIEW">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return DB view of the corresponding form
 for the given workflow code
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return DB view of the corresponding form
 for the given workflow code
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of source]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of destination]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns form name VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_flow Workflow code of source]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dest_flow Workflow code of destination]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns form name VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="30" LINES="2" START_COLUMN="13" START_LINE="29"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TARGET_PUSHFORM_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return destination form name for the given workflow code
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return destination form name for the given workflow code
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of source]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of destination]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns form name VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_flow Workflow code of source]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dest_flow Workflow code of destination]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns form name VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="42" LINES="5" START_COLUMN="13" START_LINE="38"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SOURCE_PUSHFORM_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return source form name for the given workflow code
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return source form name for the given workflow code
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of source]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code of destination]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns form name VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_flow Workflow code of source]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dest_flow Workflow code of destination]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns form name VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="54" LINES="5" START_COLUMN="13" START_LINE="50"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XML">
      <COMMENT_FIRST_LINE><![CDATA[ Function to transform the given XML data based on
 the XSL stylesheet provided
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to transform the given XML data based on
 the XSL stylesheet provided
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="CLOB">
        <COMMENT><![CDATA[CLOB XML data that needs to be converted]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_XSL" TYPE="CLOB">
        <COMMENT><![CDATA[CLOB XSL stylesheet]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns formatted XML data as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_xml CLOB XML data that needs to be converted]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_xsl CLOB XSL stylesheet]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns formatted XML data as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="64" LINES="2" START_COLUMN="13" START_LINE="63"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XML">
      <COMMENT_FIRST_LINE><![CDATA[ Function to transform the given XML data based on
 the XSL stylesheet provided
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to transform the given XML data based on
 the XSL stylesheet provided
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="XMLTYPE">
        <COMMENT><![CDATA[XML Type data that needs to be converted]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_XSL" TYPE="XMLTYPE">
        <COMMENT><![CDATA[XSL Type stylesheet]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="XMLTYPE">
        <COMMENT><![CDATA[Returns formatted XML data as XMLTYPE]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_xml XML Type data that needs to be converted]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_xsl XSL Type stylesheet]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns formatted XML data as XMLTYPE]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="21" END_LINE="74" LINES="2" START_COLUMN="13" START_LINE="73"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MAX_REC_NUM">
      <COMMENT_FIRST_LINE><![CDATA[ Function to extract max instance rec number from the given XML data
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to extract max instance rec number from the given XML data
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="XMLTYPE">
        <COMMENT><![CDATA[XML Type data that needs to be converted]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns max instance_rec_num as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_xml XML Type data that needs to be converted]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns max instance_rec_num as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="82" LINES="2" START_COLUMN="13" START_LINE="81"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="28" END_LINE="83" LINES="83" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CONFIG_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_XSL">
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="18" END_LINE="20" LINES="18" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TARGET_VIEW">
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="39" LINES="18" START_COLUMN="13" START_LINE="22"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TARGET_PUSHFORM_NAME">
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="61" LINES="21" START_COLUMN="13" START_LINE="41"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SOURCE_PUSHFORM_NAME">
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="83" LINES="21" START_COLUMN="13" START_LINE="63"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XML_">
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_XSL" TYPE="CLOB"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="19" END_LINE="119" LINES="35" START_COLUMN="13" START_LINE="85"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MAX_REC_NUM">
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="XMLTYPE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="138" LINES="18" START_COLUMN="13" START_LINE="121"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XML">
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_XSL" TYPE="CLOB"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="18" END_LINE="160" LINES="21" START_COLUMN="13" START_LINE="140"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XML">
      <ARGUMENT MODE="IN" NAME="I_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="I_XSL" TYPE="XMLTYPE"/>
      <RETURN TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="18" END_LINE="182" LINES="21" START_COLUMN="13" START_LINE="162"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="28" END_LINE="183" LINES="183" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CONTROL_TEST_TASK_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_CONTROL_TEST_TASK_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="32" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CONTROL_TEST_TASK_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="590" LINES="567" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="675" LINES="81" START_COLUMN="15" START_LINE="595"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="4172" LINES="3483" START_COLUMN="15" START_LINE="690"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="32" END_LINE="4173" LINES="4173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_COPY_AUDIT_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_COPY_AUDIT_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_COPY_AUDIT_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_COPY_AUDIT_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_COPY_AUDIT_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_COPY_AUDIT_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="134" LINES="111" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="219" LINES="81" START_COLUMN="15" START_LINE="139"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="840" LINES="607" START_COLUMN="15" START_LINE="234"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="841" LINES="841" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_CTRL_TEST_TASK_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_CTRL_TEST_TASK_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_CTRL_TEST_TASK_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_DATA_REFRESH" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_DATA_REFRESH<br/>
 Description: Package that helps to refresh/cleanup the base tables of Audits
module.Rebuilds the table indexes if there are any<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <PROCEDURE NAME="MS_AUD_DATA_AE_RPT_REFRESH">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_DATA_AE_RPT
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_DATA_AE_RPT
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="37" END_LINE="16" LINES="1" START_COLUMN="11" START_LINE="16"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DATA_FLOW_DOWN_ORG_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_DATA_FLOW_DOWN_ORG
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_DATA_FLOW_DOWN_ORG
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="38" END_LINE="22" LINES="1" START_COLUMN="11" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DATA_LOV_ORG_VALUES_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_DATA_LOV_ORG_VALUES
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_DATA_LOV_ORG_VALUES
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="39" END_LINE="28" LINES="1" START_COLUMN="11" START_LINE="28"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FLOW_DOWN_ORG_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_FLOW_DOWN_ORG
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_FLOW_DOWN_ORG
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="33" END_LINE="34" LINES="1" START_COLUMN="11" START_LINE="34"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_USER_ACTIVITY_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_USER_ACTIVITY
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_USER_ACTIVITY
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="33" END_LINE="40" LINES="1" START_COLUMN="11" START_LINE="40"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_ORG_FLOW_DOWN_HRCH_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_ORG_FLOW_DOWN_HRCH
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_ORG_FLOW_DOWN_HRCH
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="38" END_LINE="46" LINES="1" START_COLUMN="11" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_PARAMETERS_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_PARAMETERS
 from ms_qs_parameter tables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_PARAMETERS
 from ms_qs_parameter tables
]]></COMMENT>
      <SUMMARY END_COLUMN="30" END_LINE="52" LINES="1" START_COLUMN="11" START_LINE="52"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_USERS_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate and reload data into MS_AUD_FLOW_DOWN_ORG
 from the view
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate and reload data into MS_AUD_FLOW_DOWN_ORG
 from the view
]]></COMMENT>
      <SUMMARY END_COLUMN="25" END_LINE="58" LINES="1" START_COLUMN="11" START_LINE="58"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DELETE_KHI_DATA_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to truncate keep history tables
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to truncate keep history tables
]]></COMMENT>
      <SUMMARY END_COLUMN="35" END_LINE="63" LINES="1" START_COLUMN="11" START_LINE="63"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_UPDT_FIELD_EDITABILITY">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to update multi-rows of ms_aud_field_editability to support
 Data Correction feature
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to update multi-rows of ms_aud_field_editability to support
 Data Correction feature
]]></COMMENT>
      <SUMMARY END_COLUMN="40" END_LINE="69" LINES="1" START_COLUMN="11" START_LINE="69"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CLEAN_TEMP_ATTACHS_P">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to cleanup last 5 days of data from MS_AUD_DU_ATTACHMENTS
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to cleanup last 5 days of data from MS_AUD_DU_ATTACHMENTS
]]></COMMENT>
      <SUMMARY END_COLUMN="38" END_LINE="74" LINES="1" START_COLUMN="11" START_LINE="74"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DATA_REFRESH_ALL">
      <COMMENT_FIRST_LINE><![CDATA[ Wrapper procedure to call other procedures contained in this package
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Wrapper procedure to call other procedures contained in this package
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="61" END_LINE="79" LINES="1" START_COLUMN="11" START_LINE="79"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="81" LINES="81" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_DATA_REFRESH" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MS_AUD_DATA_AE_RPT_REFRESH">
      <SUMMARY END_COLUMN="34" END_LINE="73" LINES="70" START_COLUMN="14" START_LINE="4"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DATA_FLOW_DOWN_ORG_P">
      <SUMMARY END_COLUMN="35" END_LINE="90" LINES="16" START_COLUMN="14" START_LINE="75"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DATA_LOV_ORG_VALUES_P">
      <SUMMARY END_COLUMN="36" END_LINE="118" LINES="27" START_COLUMN="14" START_LINE="92"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FLOW_DOWN_ORG_P">
      <SUMMARY END_COLUMN="30" END_LINE="167" LINES="48" START_COLUMN="14" START_LINE="120"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_USER_ACTIVITY_P">
      <SUMMARY END_COLUMN="30" END_LINE="218" LINES="50" START_COLUMN="14" START_LINE="169"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_ORG_FLOW_DOWN_HRCH_P">
      <SUMMARY END_COLUMN="35" END_LINE="253" LINES="34" START_COLUMN="14" START_LINE="220"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_PARAMETERS_P">
      <SUMMARY END_COLUMN="27" END_LINE="275" LINES="22" START_COLUMN="14" START_LINE="254"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_USERS_P">
      <SUMMARY END_COLUMN="22" END_LINE="297" LINES="21" START_COLUMN="14" START_LINE="277"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DELETE_KHI_DATA_P">
      <SUMMARY END_COLUMN="32" END_LINE="323" LINES="25" START_COLUMN="14" START_LINE="299"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_UPDT_FIELD_EDITABILITY">
      <SUMMARY END_COLUMN="36" END_LINE="346" LINES="22" START_COLUMN="13" START_LINE="325"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CLEAN_TEMP_ATTACHS_P">
      <SUMMARY END_COLUMN="34" END_LINE="356" LINES="9" START_COLUMN="13" START_LINE="348"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DATA_REFRESH_ALL">
      <ARGUMENT MODE="IN OUT" NAME="ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="376" LINES="19" START_COLUMN="13" START_LINE="358"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="378" LINES="378" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_DATA_UPLOAD_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_DATA_UPLOAD_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_UPLOAD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_UPLOAD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_DATA_UPLOAD_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_UPLOAD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_UPLOAD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_DATA_UPLOAD_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_DATA_UPLOAD_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_DATA_UPLOAD_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="107" LINES="84" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="192" LINES="81" START_COLUMN="15" START_LINE="112"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="662" LINES="458" START_COLUMN="15" START_LINE="205"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="664" LINES="664" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_DATA_UPLOAD_UTILS" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_DATA_UPLOAD_UTILS<br/>
 Description: Package that contains procedures/functions to support
Audits Data Upload feature<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="NULL" NAME="GN_LOG_SEQ">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE DEFAULT="NULL" NAME="GN_LOG_ID">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <FUNCTION NAME="MS_AUD_GET_OBJECT_TYPE">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns the object type for the given object title
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns the object type for the given object title
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object title as in ms_aud_orb_config_form_title.form_title]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_title Object title as in ms_aud_orb_config_form_title.form_title]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="25" LINES="4" START_COLUMN="10" START_LINE="22"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_VALID_OBJECTID">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns the object ID for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns the object ID for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="37" LINES="5" START_COLUMN="10" START_LINE="33"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_VALID_OBJECTNAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns the object name for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns the object name for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="49" LINES="5" START_COLUMN="10" START_LINE="45"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_REL_SOURCE_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns rel_source_id for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns rel_source_id for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object id as in ms_grc_orb_relations.rel_source_object_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object id as in ms_grc_orb_relations.rel_source_object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="59" LINES="4" START_COLUMN="10" START_LINE="56"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_REL_INSTANCE_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns rel_inst_id for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns rel_inst_id for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object id as in ms_grc_orb_relations.rel_source_object_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object id as in ms_grc_orb_relations_orb.tgt_obj_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type as in ms_grc_orb_relations_orb.tgt_obj_type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object id as in ms_grc_orb_relations.rel_source_object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_tgt_obj_id Object id as in ms_grc_orb_relations_orb.tgt_obj_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_tgt_obj_type Object type as in ms_grc_orb_relations_orb.tgt_obj_type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="73" LINES="6" START_COLUMN="10" START_LINE="68"/>
    </FUNCTION>
    <FUNCTION NAME="GET_OBJECTNAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns object_id for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns object_id for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_tgt_obj_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_tgt_obj_name Object name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2 string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="85" LINES="5" START_COLUMN="10" START_LINE="81"/>
    </FUNCTION>
    <PROCEDURE NAME="ORG_PROFILE_CONVERTOR">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to manipulate the incoming XML
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to manipulate the incoming XML
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[Holds the incoming and manipulated XML data]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER">
        <COMMENT><![CDATA[Used only to support the procedure spec]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code handler]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message handler]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[Error sequence handler]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Used only to support the procedure spec]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iop_xml_data Holds the incoming and manipulated XML data]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iop_log_no Used only to support the procedure spec]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[op_error_code Error Code handler]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[op_error_message Error message handler]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iop_error_seq Error sequence handler]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pid Used only to support the procedure spec]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns the manipulated XML data as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="104" LINES="8" START_COLUMN="11" START_LINE="97"/>
    </PROCEDURE>
    <PROCEDURE NAME="DATA_ENTRY_CONVERTOR">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to manipulate the incoming XML
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to manipulate the incoming XML
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[Holds the incoming and manipulated XML data]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER">
        <COMMENT><![CDATA[Used only to support the procedure spec]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code handler]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message handler]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[Error sequence handler]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Used only to support the procedure spec]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iop_xml_data Holds the incoming and manipulated XML data]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iop_log_no Used only to support the procedure spec]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[op_error_code Error Code handler]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[op_error_message Error message handler]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iop_error_seq Error sequence handler]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pid Used only to support the procedure spec]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns the manipulated XML data as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="123" LINES="8" START_COLUMN="11" START_LINE="116"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_KPIKRI_ATINAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function related to GRC.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function related to GRC. Returns object id for
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_ASSESSMENT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Assessment type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ATI_OBJECT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[as in ms_grc_risk.object_name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_assessment_type Assessment type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_ati_object_name as in ms_grc_risk.object_name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="136" LINES="5" START_COLUMN="10" START_LINE="132"/>
    </FUNCTION>
    <FUNCTION NAME="GET_KPIKRI_ATINAMEWITHOBJECTID">
      <COMMENT_FIRST_LINE><![CDATA[ Function related to GRC.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function related to GRC. Returns object id for
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_ASSESSMENT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Assessment type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ATI_OBJECT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[as in ms_grc_risk.object_name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ATI_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID as in ms_grc_risk.object_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_assessment_type Assessment type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_ati_object_name as in ms_grc_risk.object_name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_ati_object_id Object ID as in ms_grc_risk.object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="151" LINES="6" START_COLUMN="10" START_LINE="146"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_OBJECTID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get ms_aud_auditable_entit.object_id
 for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get ms_aud_auditable_entit.object_id
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_object_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="164" LINES="5" START_COLUMN="10" START_LINE="160"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_ASSERTION">
      <COMMENT_FIRST_LINE><![CDATA[ Function related to GRC.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function related to GRC. Returns Ms_Qs_Lov_Org_Values_v.stored_value
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_DD_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ASSERTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_user_name Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_assertion_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="177" LINES="5" START_COLUMN="10" START_LINE="173"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_ASSERTION_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function related to GRC.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function related to GRC. Returns Ms_Qs_Lov_Org_Values_v.stored_value
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_DD_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ASSERTION_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_user_name Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_assertion_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="190" LINES="5" START_COLUMN="10" START_LINE="186"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_ASSERTION_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function related to GRC.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function related to GRC. Returns Ms_Qs_Lov_Org_Values_v.displayed_value
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_DD_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ASSERTION_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_user_name Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_assertion_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="203" LINES="5" START_COLUMN="10" START_LINE="199"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ADDITIONAL_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get additional details information for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get additional details information for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ITEM_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="PV_ADDN_DETAILS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[object name as comma separated string]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a date]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_object_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_addn_details object name as comma separated string]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a date]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="217" LINES="6" START_COLUMN="10" START_LINE="212"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CREATED_BY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get created by value from ms_aud_auditable_entit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get created by value from ms_aud_auditable_entit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a date]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_object_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a date]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="229" LINES="5" START_COLUMN="10" START_LINE="225"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CREATED_ON">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get created on value from ms_aud_auditable_entit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get created on value from ms_aud_auditable_entit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="DATE">
        <COMMENT><![CDATA[Returns a date]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_dd_object_type Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a date]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="241" LINES="5" START_COLUMN="10" START_LINE="237"/>
    </FUNCTION>
    <PROCEDURE NAME="GET_AUD_DETLS_FOR_PLAN_SCOPE">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to get the details of Plan Scope form
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to get the details of Plan Scope form
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_LEG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_IS_LEG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Holds value A or null]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_AUD_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold audit title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_AUD_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold audit status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_AUD_LEAD_AUDIT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold lead auditor]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_AUD_AUDIT_MGR" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold audit manager]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_COND_BY_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold conducted_by_org]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_CONFIG_FLAG" TYPE="CLOB">
        <COMMENT><![CDATA[Out parameter to hold config flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_SCOPE_BASED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold scope_based_on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_AUD_CLASSFIC" TYPE="VARCHAR">
        <COMMENT><![CDATA[Out parameter to hold audit classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ORG_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Out parameter to hold Org id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_HEADER_DETL" TYPE="CLOB">
        <COMMENT><![CDATA[Out parameter to hold audit header details]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_aud_leg_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_is_leg Holds value A or null]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Aud_Title Out parameter to hold audit title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Aud_Status Out parameter to hold audit status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Aud_Lead_Audit Out parameter to hold lead auditor]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Aud_Audit_Mgr Out parameter to hold audit manager]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Cond_By_Org Out parameter to hold conducted_by_org]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Config_Flag Out parameter to hold config flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Scope_Based_On Out parameter to hold scope_based_on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Aud_Classfic Out parameter to hold audit classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Org_Aud_Id Out parameter to hold Org id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[O_Header_Detl Out parameter to hold audit header details]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="271" LINES="14" START_COLUMN="11" START_LINE="258"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_ATTACHMENT">
      <ARGUMENT MODE="IN" NAME="I_UPLOAD_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_ATTACHMENT_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="16" END_LINE="274" LINES="2" START_COLUMN="10" START_LINE="273"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the audits id for the given legacy id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the audits id for the given legacy id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Audit ID as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_legacy_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Audit ID as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="282" LINES="2" START_COLUMN="10" START_LINE="281"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_UPLOAD_STATUS_LOG">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return the log of the Audit Upload
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return the log of the Audit Upload
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Form name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Upload process instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Start date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[End date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_APPS_UPLOAD_LOG_TABLE_TYPE">
        <COMMENT><![CDATA[Returns a set of columns describing the log of Audit Upload
as MS_APPS_UPLOAD_LOG_TABLE_TYPE]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_form_name Form name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Upload process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_start_date Start date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_end_date End date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a set of columns describing the log of Audit Upload
as MS_APPS_UPLOAD_LOG_TABLE_TYPE]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="43" END_LINE="298" LINES="6" START_COLUMN="10" START_LINE="293"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_REPORT_UPLOAD_HDR">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the audits header information
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the audits header information
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a string concatenated by delimiters as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_legacy_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a string concatenated by delimiters as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="12" END_LINE="309" LINES="4" START_COLUMN="10" START_LINE="306"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_REP_SEL_ISSUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return list of associated Finding IDs for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return list of associated Finding IDs for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SEL_ISSUES" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Issue ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a comma separated string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_legacy_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sel_issues Issue ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma separated string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="12" END_LINE="322" LINES="5" START_COLUMN="10" START_LINE="318"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_UPLOAD_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the Audit Upload is success
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the Audit Upload is success
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 0 or 1 as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_legacy_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_type Audit type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="335" LINES="5" START_COLUMN="10" START_LINE="331"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_STATUS_FOR_UPLOAD">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check staus of audit before uploading
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check staus of audit before uploading
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 0 or 1 as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_legacy_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_type Audit type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="348" LINES="5" START_COLUMN="10" START_LINE="344"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="29" END_LINE="350" LINES="350" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_DATA_UPLOAD_UTILS" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MESSAGE_LOG">
      <ARGUMENT MODE="IN" NAME="P_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_PROGRAM_NAME" TYPE="MS_APPS_MESSAGE_LOG.PROGRAM_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="P_LINE_LOCATION" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="12" LINES="10" START_COLUMN="11" START_LINE="3"/>
    </PROCEDURE>
    <FUNCTION NAME="MS_AUD_GET_OBJECT_TYPE">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TITLE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="32" LINES="20" START_COLUMN="10" START_LINE="13"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_VALID_OBJECTID">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="79" LINES="47" START_COLUMN="10" START_LINE="33"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_VALID_OBJECTNAME">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="116" LINES="37" START_COLUMN="10" START_LINE="80"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_REL_SOURCE_ID">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="132" LINES="16" START_COLUMN="10" START_LINE="117"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_REL_INSTANCE_ID">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="156" LINES="24" START_COLUMN="10" START_LINE="133"/>
    </FUNCTION>
    <FUNCTION NAME="GET_OBJECTNAME">
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_TGT_OBJ_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="206" LINES="50" START_COLUMN="10" START_LINE="157"/>
    </FUNCTION>
    <PROCEDURE NAME="ORG_PROFILE_CONVERTOR">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="275" LINES="69" START_COLUMN="11" START_LINE="207"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_KPIKRI_ATINAME">
      <ARGUMENT MODE="IN" NAME="PV_ASSESSMENT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ATI_OBJECT_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="348" LINES="73" START_COLUMN="10" START_LINE="276"/>
    </FUNCTION>
    <FUNCTION NAME="GET_KPIKRI_ATINAMEWITHOBJECTID">
      <ARGUMENT MODE="IN" NAME="PV_ASSESSMENT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ATI_OBJECT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ATI_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="426" LINES="78" START_COLUMN="10" START_LINE="349"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_OBJECTID">
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="462" LINES="36" START_COLUMN="10" START_LINE="427"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_ASSERTION">
      <ARGUMENT MODE="IN" NAME="PV_DD_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ASSERTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="487" LINES="25" START_COLUMN="10" START_LINE="463"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_ASSERTION_ID">
      <ARGUMENT MODE="IN" NAME="PV_DD_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ASSERTION_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="511" LINES="24" START_COLUMN="10" START_LINE="488"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_ASSERTION_NAME">
      <ARGUMENT MODE="IN" NAME="PV_DD_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ASSERTION_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="536" LINES="25" START_COLUMN="10" START_LINE="512"/>
    </FUNCTION>
    <PROCEDURE NAME="DATA_ENTRY_CONVERTOR">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="983" LINES="447" START_COLUMN="11" START_LINE="537"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_ADDITIONAL_DETAILS">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ITEM_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="PV_ADDN_DETAILS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1077" LINES="94" START_COLUMN="10" START_LINE="984"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CREATED_BY">
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="1099" LINES="22" START_COLUMN="10" START_LINE="1078"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CREATED_ON">
      <ARGUMENT MODE="IN" NAME="PV_DD_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="DATE"/>
      <SUMMARY END_COLUMN="19" END_LINE="1121" LINES="22" START_COLUMN="10" START_LINE="1100"/>
    </FUNCTION>
    <PROCEDURE NAME="GET_AUD_DETLS_FOR_PLAN_SCOPE">
      <ARGUMENT MODE="IN" NAME="I_AUD_LEG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_IS_LEG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_AUD_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_AUD_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_AUD_LEAD_AUDIT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_AUD_AUDIT_MGR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_COND_BY_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_CONFIG_FLAG" TYPE="CLOB"/>
      <ARGUMENT MODE="OUT" NAME="O_SCOPE_BASED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_AUD_CLASSFIC" TYPE="VARCHAR"/>
      <ARGUMENT MODE="OUT" NAME="O_ORG_AUD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_HEADER_DETL" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="33" END_LINE="1239" LINES="118" START_COLUMN="11" START_LINE="1122"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_ATTACHMENT">
      <ARGUMENT MODE="IN" NAME="I_UPLOAD_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_ATTACHMENT_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="1257" LINES="17" START_COLUMN="10" START_LINE="1241"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_ID">
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1272" LINES="14" START_COLUMN="10" START_LINE="1259"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_GET_UPLOAD_STATUS_LOG">
      <ARGUMENT MODE="IN" NAME="I_FORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_APPS_UPLOAD_LOG_TABLE_TYPE"/>
      <SUMMARY END_COLUMN="35" END_LINE="1292" LINES="19" START_COLUMN="10" START_LINE="1274"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_REPORT_UPLOAD_HDR">
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="35" END_LINE="1373" LINES="80" START_COLUMN="10" START_LINE="1294"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_REP_SEL_ISSUES">
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SEL_ISSUES" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="32" END_LINE="1509" LINES="135" START_COLUMN="10" START_LINE="1375"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_UPLOAD_STATUS">
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1575" LINES="64" START_COLUMN="10" START_LINE="1512"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_STATUS_FOR_UPLOAD">
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="1634" LINES="57" START_COLUMN="10" START_LINE="1578"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="29" END_LINE="1637" LINES="1637" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_DETAILED_AUDIT_LIST" SCHEMA="Schema_objects">
    <VARIABLE NAME="AUDIT_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TITLE_LINK" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_CLASSIFICATION" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="VIEW_TASKS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="PLAN_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="PLAN_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="END_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="CONDUCTED_BY_ORG" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="PLAN_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="VERSION_NO" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="OVERVIEW" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="TOTAL_BUDGETED_EFFORT" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="BUDGETED_EFFORT_FROM_AC" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="BUDGETED_COST" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="ADD_SCOPE" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="APPROACH" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="BUSINESS_OVERVIEW" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="PROCESS_OVERVIEW" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="SIGNIFICANT_CHALLENGES" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="ACCOMPLISHMENTS" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_OBJECTIVES" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="ANALYTICAL_REVIEW" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="AREAS_OF_CONSIDERATION" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="MNG_EXT_AUD_CONCERNS" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="PLANNING_MEETING_RESULTS" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="SCOPE_BASED_ON" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="PURPOSE" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="RESTRICT_ACCESS_TO" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="MILESTONE_TEMPLATE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="CORE_OBJECTS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RISKS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="ORGANIZATIONS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="LEAD_AUDITOR" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_MANAGER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CREATED_BY" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="TEAM" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="ESTIMATED_EFFORT" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="LOCATIONS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SCHEDULE_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="RESOURCE_EFFORT" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="51" LINES="51" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_DETAILED_AUDIT_LIST_REC" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_DETAILED_AUDIT_LIST">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_DETAILED_AUDIT_LIST" TYPE="TABLE OF MS_AUD_DETAILED_AUDIT_LIST">
        <COMMENT><![CDATA[Collection Type : TABLE OF MS_AUD_DETAILED_AUDIT_LIST]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_DMS_DOC" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_INT_DMS_OBJECT">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_INT_DMS_OBJECT" TYPE="TABLE OF MS_AUD_INT_DMS_OBJECT">
        <COMMENT><![CDATA[Collection Type : table OF MS_AUD_INT_DMS_OBJECT]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_DRAFT_ISSUES_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_DRAFT_ISSUES_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_DRAFT_ISSUES_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_DRAFT_ISSUES_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_DRAFT_ISSUES_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_DRAFT_ISSUES_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="260" LINES="237" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="345" LINES="81" START_COLUMN="15" START_LINE="265"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="2427" LINES="2070" START_COLUMN="15" START_LINE="358"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="2429" LINES="2429" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_EMAIL_ATTACH_API" SCHEMA="Schema_objects">
    <PROCEDURE NAME="SEND_EMAIL_VIA_PF">
      <COMMENT_FIRST_LINE><![CDATA[Procedure to insert the details into ms_aud_attachment_emails
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Procedure to insert the details into ms_aud_attachment_emails
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_EMAIL_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RECEPIENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_EMAIL_NOTE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_BOILERPLATE_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COPYRIGHT_INFO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBJECT_HEADER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBJECT_BODY" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PROC_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PUSH_INFOLET_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_REPORT_ATTACHMENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_REPORT_ATTACH_DETAILS" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_LINK_YN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_EMAIL_LINK_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_PROCEDURE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TEMPLATE_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_YEAR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_REPORT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="51" END_LINE="29" LINES="26" START_COLUMN="11" START_LINE="4"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_EMAIL_STATUS">
      <ARGUMENT MODE="IN" NAME="I_EMAIL_MSG_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="70" END_LINE="33" LINES="3" START_COLUMN="11" START_LINE="31"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="35" LINES="35" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_EMAIL_ATTACH_API" SCHEMA="Schema_objects">
    <PROCEDURE NAME="SEND_EMAIL_VIA_PF">
      <ARGUMENT MODE="IN" NAME="I_EMAIL_SUBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RECEPIENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_EMAIL_NOTE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_BOILERPLATE_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COPYRIGHT_INFO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBJECT_HEADER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SUBJECT_BODY" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PROC_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PUSH_INFOLET_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_REPORT_ATTACHMENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_REPORT_ATTACH_DETAILS" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_LINK_YN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_EMAIL_LINK_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_PROCEDURE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TEMPLATE_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_YEAR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_REPORT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="94" LINES="92" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_EMAIL_STATUS">
      <ARGUMENT MODE="IN" NAME="I_EMAIL_MSG_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="124" LINES="29" START_COLUMN="14" START_LINE="96"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="125" LINES="125" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_EMAIL_NOTIFICATIONS" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MS_AUD_EMAIL_LEAD_AUD">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDITABLE_ENTITIES" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATIONS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_EMAIL_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="22" LINES="20" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_EMAIL_AUD_MNGR">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDITABLE_ENTITIES" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATIONS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_EMAIL_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="41" LINES="18" START_COLUMN="14" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_REM_X_PRIOR_DAYS_EMAIL">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="46" LINES="4" START_COLUMN="14" START_LINE="43"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_AUDIT_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="49" LINES="2" START_COLUMN="13" START_LINE="48"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CLOSURE_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="52" LINES="2" START_COLUMN="13" START_LINE="51"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALL_AUD_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="55" LINES="2" START_COLUMN="13" START_LINE="54"/>
    </FUNCTION>
    <PROCEDURE NAME="MS_AUD_CANCEL_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_LEAD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PLAN_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="69" LINES="13" START_COLUMN="14" START_LINE="57"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CLOSE_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="80" LINES="10" START_COLUMN="14" START_LINE="71"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CREATE_TASK_EMAIL_OLD">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="89" LINES="8" START_COLUMN="14" START_LINE="82"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_REPORT_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_YEAR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REPORT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="103" LINES="13" START_COLUMN="14" START_LINE="91"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_REVIEW_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="114" LINES="10" START_COLUMN="14" START_LINE="105"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FOLLOW_UP_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_FOLLOW_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_FOLLOW_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="125" LINES="10" START_COLUMN="14" START_LINE="116"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_X_DAYS_IN_ADVANCE">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_START_DATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="136" LINES="10" START_COLUMN="14" START_LINE="127"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_ISSUE_REVIEW_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="147" LINES="10" START_COLUMN="14" START_LINE="138"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DELEGATE_REVIEW_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_DELEGATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="158" LINES="10" START_COLUMN="14" START_LINE="149"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DELEGATE_REMOVED_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_DELEGATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="169" LINES="10" START_COLUMN="14" START_LINE="160"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_ISSUE_REVIEW_COMPL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REV_DAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REVIEW_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="182" LINES="12" START_COLUMN="14" START_LINE="171"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_APPROVE_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="193" LINES="10" START_COLUMN="14" START_LINE="184"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_CLARIFY_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_APPROVER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="205" LINES="11" START_COLUMN="14" START_LINE="195"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_REAUDIT_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="216" LINES="10" START_COLUMN="14" START_LINE="207"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_MGT_CLARIFY">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUD_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_MGT_SUPPORT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="229" LINES="12" START_COLUMN="14" START_LINE="218"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_PLAN_SCOPE_AC">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_APPROVAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_APPROVE_USERS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ACTION_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="241" LINES="11" START_COLUMN="14" START_LINE="231"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_REVIEW_COMPL_AUDITEE">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REV_DAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REVIEW_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="254" LINES="12" START_COLUMN="14" START_LINE="243"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CREATE_TASK_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="MS_AUD_AUDIT.AUDIT_TITLE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_NAME" TYPE="MS_AUD_AUDIT_TASK.TASK_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_APPROVER" TYPE="MS_AUD_AUDIT_TASK.APPROVER%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_OWNER" TYPE="MS_AUD_AUDIT_TASK.TASK_OWNER%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_OLD_TASK_OWNER" TYPE="MS_AUD_AUDIT_TASK.TASK_OWNER%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_SECTION_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RELATED_RISK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_CONTROL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_TEST" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_INSTRUCTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RP_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="276" LINES="21" START_COLUMN="14" START_LINE="256"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_UPCOMING_AUDIT_CONTACTS">
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="279" LINES="2" START_COLUMN="13" START_LINE="278"/>
    </FUNCTION>
    <FUNCTION NAME="EMAIL_SUBJECT">
      <ARGUMENT MODE="IN" NAME="PI_SUBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="USER_NM" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="282" LINES="2" START_COLUMN="13" START_LINE="281"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REAUDIT_CONTACT">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR"/>
      <SUMMARY END_COLUMN="21" END_LINE="285" LINES="2" START_COLUMN="13" START_LINE="284"/>
    </FUNCTION>
    <PROCEDURE NAME="MS_AUD_COA_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUTHOR_NAME" TYPE="MS_AUD_AUDIT_TASK.AUTHOR_NAME%TYPE"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="295" LINES="9" START_COLUMN="13" START_LINE="287"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="31" END_LINE="296" LINES="296" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_EMAIL_NOTIFICATIONS" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MS_AUD_EMAIL_LEAD_AUD">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDITABLE_ENTITIES" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATIONS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_EMAIL_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="187" LINES="185" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_EMAIL_AUD_MNGR">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDITABLE_ENTITIES" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATIONS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR_MLOV" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_EMAIL_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="364" LINES="175" START_COLUMN="14" START_LINE="190"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_REM_X_PRIOR_DAYS_EMAIL">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="960" LINES="595" START_COLUMN="14" START_LINE="366"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_AUDIT_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="1013" LINES="52" START_COLUMN="13" START_LINE="962"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CLOSURE_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="1103" LINES="89" START_COLUMN="13" START_LINE="1015"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALL_AUD_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="1137" LINES="33" START_COLUMN="13" START_LINE="1105"/>
    </FUNCTION>
    <PROCEDURE NAME="MS_AUD_CANCEL_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_LEAD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PLAN_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1620" LINES="482" START_COLUMN="14" START_LINE="1139"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CLOSE_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1865" LINES="244" START_COLUMN="14" START_LINE="1622"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CREATE_TASK_EMAIL_OLD">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="2188" LINES="322" START_COLUMN="14" START_LINE="1867"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_REPORT_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_YEAR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REPORT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="2842" LINES="653" START_COLUMN="14" START_LINE="2190"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_REVIEW_EMAIL">
      <COMMENT_FIRST_LINE><![CDATA[implemented in front end
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[implemented in front end
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="2945" LINES="101" START_COLUMN="14" START_LINE="2845"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FOLLOW_UP_EMAIL">
      <COMMENT_FIRST_LINE><![CDATA[implemented in front end
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[implemented in front end
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_FOLLOW_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_FOLLOW_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="3048" LINES="101" START_COLUMN="14" START_LINE="2948"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_X_DAYS_IN_ADVANCE">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_START_DATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_PURPOSE" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="3152" LINES="103" START_COLUMN="14" START_LINE="3050"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_ISSUE_REVIEW_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="3286" LINES="133" START_COLUMN="14" START_LINE="3154"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DELEGATE_REVIEW_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_DELEGATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="3399" LINES="112" START_COLUMN="14" START_LINE="3288"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_DELEGATE_REMOVED_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_DELEGATE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="3508" LINES="108" START_COLUMN="14" START_LINE="3401"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_ISSUE_REVIEW_COMPL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REV_DAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REVIEW_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="3648" LINES="139" START_COLUMN="14" START_LINE="3510"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_APPROVE_EMAIL">
      <COMMENT_FIRST_LINE><![CDATA[implemented in front end
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[implemented in front end
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="3763" LINES="113" START_COLUMN="14" START_LINE="3651"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_FINAL_CLARIFY_EMAIL">
      <COMMENT_FIRST_LINE><![CDATA[implemented in front end
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[implemented in front end
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_APPROVER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="3865" LINES="100" START_COLUMN="14" START_LINE="3766"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_REAUDIT_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="4028" LINES="162" START_COLUMN="14" START_LINE="3867"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_MGT_CLARIFY">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_LEAD_AUD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_AUD_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_MGT_SUPPORT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="4147" LINES="118" START_COLUMN="14" START_LINE="4030"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_PLAN_SCOPE_AC">
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_APPROVAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_APPROVE_USERS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_ACTION_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="4240" LINES="92" START_COLUMN="14" START_LINE="4149"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_REVIEW_COMPL_AUDITEE">
      <COMMENT_FIRST_LINE><![CDATA[implemented in front end
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[implemented in front end
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PI_PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_PID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REV_DAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_REVIEW_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="4358" LINES="116" START_COLUMN="14" START_LINE="4243"/>
    </PROCEDURE>
    <PROCEDURE NAME="MS_AUD_CREATE_TASK_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_TITLE" TYPE="MS_AUD_AUDIT.AUDIT_TITLE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_NAME" TYPE="MS_AUD_AUDIT_TASK.TASK_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_APPROVER" TYPE="MS_AUD_AUDIT_TASK.APPROVER%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_OWNER" TYPE="MS_AUD_AUDIT_TASK.TASK_OWNER%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_OLD_TASK_OWNER" TYPE="MS_AUD_AUDIT_TASK.TASK_OWNER%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_SECTION_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RELATED_RISK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_CONTROL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_TEST" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_INSTRUCTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PI_RP_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="O_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="4853" LINES="494" START_COLUMN="14" START_LINE="4360"/>
    </PROCEDURE>
    <FUNCTION NAME="GET_UPCOMING_AUDIT_CONTACTS">
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="4887" LINES="33" START_COLUMN="13" START_LINE="4855"/>
    </FUNCTION>
    <FUNCTION NAME="EMAIL_SUBJECT">
      <ARGUMENT MODE="IN" NAME="PI_SUBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="USER_NM" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4938" LINES="50" START_COLUMN="13" START_LINE="4889"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REAUDIT_CONTACT">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR"/>
      <SUMMARY END_COLUMN="7" END_LINE="4970" LINES="31" START_COLUMN="13" START_LINE="4940"/>
    </FUNCTION>
    <PROCEDURE NAME="MS_AUD_COA_EMAIL">
      <ARGUMENT MODE="IN" NAME="PI_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PI_AUTHOR_NAME" TYPE="MS_AUD_AUDIT_TASK.AUTHOR_NAME%TYPE"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="5082" LINES="111" START_COLUMN="11" START_LINE="4972"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="31" END_LINE="5083" LINES="5083" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_EMAIL_NOTIFY_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_EMAIL_NOTIFY_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="54" LINES="54" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_EMAIL_NOTIFY_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="19" LINES="7" START_COLUMN="15" START_LINE="13"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="94" LINES="75" START_COLUMN="15" START_LINE="20"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="174" LINES="75" START_COLUMN="15" START_LINE="100"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="17" END_LINE="322" LINES="142" START_COLUMN="15" START_LINE="181"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="26" END_LINE="324" LINES="324" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F000_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_3">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="100" LINES="100" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F000_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_3">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="3749" LINES="3749" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F000_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F000_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1469" LINES="1459" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1472" LINES="1472" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F000_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[  MS_AUD_F000_HELPER
 This package consists of a list of hook procedures that are used in auditor profile.
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when we create an auditor profile.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when we create an auditor profile.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="33" LINES="11" START_COLUMN="14" START_LINE="23"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used for publishing.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used for publishing.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="58" LINES="11" START_COLUMN="14" START_LINE="48"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F000_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="41" LINES="39" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="128" LINES="86" START_COLUMN="14" START_LINE="43"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="129" LINES="129" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F001_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PLAN_S001_S001_A001">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S003_A005">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S002_A002">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S003_A005">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S001_A004">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F001_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PLAN_S001_S001_A001">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S003_A005">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S002_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S003_A005">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S001_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F001_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRAN_PLAN_S002_S005_A003">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRAN_PLAN_S005_S005">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S005_A035">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F001_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRAN_PLAN_S002_S005_A003">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="33" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRAN_PLAN_S005_S005">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S005_A035">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F001_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F001_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="2167" LINES="2157" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="2170" LINES="2170" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F001_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[  MS_AUD_F001_HELPER
 This package consists of a list of hook procedures that are used in Annual-Multi-Year Plan flow.
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="PROC_PLAN_DEACTIVATE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used update the status of expired plans to Inactive
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used update the status of expired plans to Inactive
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="21" LINES="3" START_COLUMN="13" START_LINE="19"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used for generating Audit Candidate ID and Resource Pool ID.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used for generating Audit Candidate ID and Resource Pool ID.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="33" LINES="4" START_COLUMN="13" START_LINE="30"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S001_A001">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Save And Continue Working action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Save And Continue Working action. This is invoked in Plan_S001_S001_A001 self-transition from MANAGE_PLAN to MANAGE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="57" LINES="9" START_COLUMN="13" START_LINE="49"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S003_A005">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Cancel action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Cancel action. This is invoked in Plan_S001_S003_A005 transition from MANAGE_PLAN to CLOSE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="81" LINES="9" START_COLUMN="13" START_LINE="73"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S002_A002">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Send For Approval action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Send For Approval action. This is invoked in Plan_S001_S002_A002 transition from MANAGE_PLAN to APPROVE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="106" LINES="9" START_COLUMN="13" START_LINE="98"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S003_A005">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Cancel action wherein the plan form is in APPROVE_PLAN stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Cancel action wherein the plan form is in APPROVE_PLAN stage. This is invoked in Plan_S002_S003_A005 transition from APPROVE_PLAN to CLOSE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="130" LINES="9" START_COLUMN="13" START_LINE="122"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S001_A004">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Request Clarification action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Request Clarification action. This is invoked in Plan_S002_S001_A004 transition from APPROVE_PLAN to MANAGE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="155" LINES="9" START_COLUMN="13" START_LINE="147"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S001_A003">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Approve action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Approve action. This is invoked in tran_plan_s002_s005_a003 transition from APPROVE_PLAN to ACTIVE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="179" LINES="9" START_COLUMN="13" START_LINE="171"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S004_A011">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the plan form with Send For Review action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the plan form with Send For Review action. This is invoked in TRANSITION_10 from MANAGE_PLAN to REVIEW_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="203" LINES="9" START_COLUMN="13" START_LINE="195"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S004_S001_A013">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked when the plan reviewer submits the plan form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked when the plan reviewer submits the plan form. This is invoked in TRANSITION_11 from REVIEW_PLAN to MANAGE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="229" LINES="9" START_COLUMN="13" START_LINE="221"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S003_S003_T12">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on re-opening the plan.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on re-opening the plan. This is invoked in tran_plan_s005_s005 self-transition from ACTIVE_PLAN to ACTIVE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="254" LINES="9" START_COLUMN="13" START_LINE="246"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_CREATION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to trigger the audit when a new audit form is submitted with Update Audit action and on submitting the form with Approve action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to trigger the audit when a new audit form is submitted with Update Audit action and on submitting the form with Approve action.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="268" LINES="4" START_COLUMN="13" START_LINE="265"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to update Auditable Entity, Related Risks and Organizations fields with the values present in TMP fields based on the value present in Scope Based On field.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to update Auditable Entity, Related Risks and Organizations fields with the values present in TMP fields based on the value present in Scope Based On field.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="70" END_LINE="283" LINES="4" START_COLUMN="13" START_LINE="280"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_BASE_INSTANCE_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_PLAN_AUDIT_V and to update this value to MS_AUD_AUDIT_PLAN base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_PLAN_AUDIT_V and to update this value to MS_AUD_AUDIT_PLAN base table. It also updates AC_STATUS value in MS_AUD_AUDIT_PLAN_ACD (Audit Candidate multirow) and MS_AUD_PLAN_AUDIT_V.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="85" END_LINE="306" LINES="8" START_COLUMN="13" START_LINE="299"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_STATUS_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to update the Status value in Audit Candidate.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to update the Status value in Audit Candidate.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="XMLTYPE">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="319" LINES="4" START_COLUMN="13" START_LINE="316"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_OLD_PID_DELETION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to delete the records from MS_AUD_PLAN_AUDIT_V for the old PID and status Reopen Planning and also to update the Creation Date field when the status of plan is Reopen Planning.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to delete the records from MS_AUD_PLAN_AUDIT_V for the old PID and status Reopen Planning and also to update the Creation Date field when the status of plan is Reopen Planning.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="81" END_LINE="341" LINES="8" START_COLUMN="13" START_LINE="334"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S005_A035">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked when the plan is published directly through Plan Upload.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked when the plan is published directly through Plan Upload. This is invoked in Plan_S001_S005_A035 transition from MANAGE_PLAN to ACTIVE_PLAN stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="63" END_LINE="365" LINES="9" START_COLUMN="11" START_LINE="357"/>
    </PROCEDURE>
    <PROCEDURE NAME="RSM_INTEGRATION_DELETE_ACD">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when CANCEL_TEAM business event is raised to RSM on marking the Audit Candidates for deletion.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when CANCEL_TEAM business event is raised to RSM on marking the Audit Candidates for deletion.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain param name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_param_name contain param name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="61" END_LINE="379" LINES="5" START_COLUMN="12" START_LINE="375"/>
    </PROCEDURE>
    <FUNCTION NAME="FUNC_GET_SCENARIOS_FROM_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ This pipelined function returns the Scenario ID and Scenario Name from RSK tables when Is_RSK_Integrated parameter is set to Y.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This pipelined function returns the Scenario ID and Scenario Name from RSK tables when Is_RSK_Integrated parameter is set to Y.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ENTITY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain organisation entity id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_SCENARIO_ASSESSMENT"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_entity_id contain organisation entity id]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="50" END_LINE="387" LINES="2" START_COLUMN="10" START_LINE="386"/>
    </FUNCTION>
    <VARIABLE DEFAULT="NULL" NAME="LC_RP_DETAIL">
      <RETURN TYPE="VARCHAR2(32000)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="NULL" NAME="LC_TEAM_DETAILS">
      <RETURN TYPE="VARCHAR2(32000)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="NULL" NAME="LC_DELETE_AUDIT_ID">
      <RETURN TYPE="VARCHAR2(32000)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="NULL" NAME="LC_TEAM_DET_FOR_ADHOC">
      <RETURN TYPE="VARCHAR2(32000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="23" END_LINE="394" LINES="394" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F001_HELPER" SCHEMA="Schema_objects">
    <VARIABLE NAME="LC_RSM_INTEGRATED_WITH_AUDITS">
      <RETURN TYPE="VARCHAR2(1)"/>
    </VARIABLE>
    <PROCEDURE NAME="PROC_PLAN_DEACTIVATE">
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="36" LINES="32" START_COLUMN="11" START_LINE="5"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_CREATION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="929" LINES="892" START_COLUMN="12" START_LINE="38"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1065" LINES="135" START_COLUMN="12" START_LINE="931"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S001_A001">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1399" LINES="333" START_COLUMN="14" START_LINE="1067"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S003_A005">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1613" LINES="213" START_COLUMN="11" START_LINE="1401"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S002_A002">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1943" LINES="329" START_COLUMN="11" START_LINE="1615"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S003_A005">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2157" LINES="213" START_COLUMN="11" START_LINE="1945"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S001_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2358" LINES="200" START_COLUMN="11" START_LINE="2159"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S002_S001_A003">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2647" LINES="288" START_COLUMN="11" START_LINE="2360"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S004_A011">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2909" LINES="261" START_COLUMN="11" START_LINE="2649"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S004_S001_A013">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="3165" LINES="255" START_COLUMN="11" START_LINE="2911"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S003_S003_T12">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="3454" LINES="289" START_COLUMN="11" START_LINE="3166"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="3560" LINES="105" START_COLUMN="11" START_LINE="3456"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_BASE_INSTANCE_UPDATE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="3802" LINES="241" START_COLUMN="11" START_LINE="3562"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_STATUS_UPDATE">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="3869" LINES="67" START_COLUMN="11" START_LINE="3803"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_OLD_PID_DELETION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="3966" LINES="96" START_COLUMN="11" START_LINE="3871"/>
    </PROCEDURE>
    <PROCEDURE NAME="PLAN_S001_S005_A035">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="4306" LINES="338" START_COLUMN="12" START_LINE="3969"/>
    </PROCEDURE>
    <FUNCTION NAME="FUNC_GET_SCENARIOS_FROM_RISK">
      <ARGUMENT MODE="IN" NAME="I_ORG_ENTITY_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_SCENARIO_ASSESSMENT"/>
      <SUMMARY END_COLUMN="33" END_LINE="4362" LINES="55" START_COLUMN="10" START_LINE="4308"/>
    </FUNCTION>
    <PROCEDURE NAME="RSM_INTEGRATION_DELETE_ACD">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="4423" LINES="59" START_COLUMN="12" START_LINE="4365"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="4432" LINES="4432" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F002_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[  MS_AUD_F002_HELPER
 This package consists of a list of hook procedures that are used in Data Upload.
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TRAN001">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used for open and submit form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used for open and submit form.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="33" END_LINE="33" LINES="11" START_COLUMN="11" START_LINE="23"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_FORN_JSON">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used for getting json for form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used for getting json for form.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain flag status.]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_flag contain flag status.]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="39" LINES="2" START_COLUMN="12" START_LINE="38"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="25" END_LINE="40" LINES="40" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F002_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRAN001">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="12" END_LINE="44" LINES="42" START_COLUMN="11" START_LINE="3"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_FORN_JSON">
      <ARGUMENT MODE="IN" NAME="I_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="94" LINES="50" START_COLUMN="10" START_LINE="45"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="95" LINES="95" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F003_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AUD_S020_S020_A008">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S021_A009">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S022_A002">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S020_A004">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S021_A009">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F003_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AUD_S020_S020_A008">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S021_A009">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S022_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S020_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S021_A009">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F003_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AUD_S021_S020_A036">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S021_S022_A037">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="76" LINES="76" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F003_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AUD_S021_S020_A036">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S021_S022_A037">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="2501" LINES="2501" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F003_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F003_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1867" LINES="1857" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1870" LINES="1870" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F003_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ MS_AUD_F003_HELPER
 This package consists of a list of hook procedures that are used in Audit flow.
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="AUD_S020_S020_A008">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Update Audit' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Update Audit' action. This is invoked in AUD_S020_S020_A008 self-transition from Create_Audit to Create_Audit stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="35" LINES="9" START_COLUMN="13" START_LINE="27"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S021_A009">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Cancel Audit' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Cancel Audit' action. This is invoked in AUD_S020_S021_A009 transition from Create_Audit to Manage_Audit_End stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="59" LINES="9" START_COLUMN="13" START_LINE="51"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S021_A028">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Close Audit' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Close Audit' action. This is invoked in aud_s020_s021_a009 procedure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="82" LINES="9" START_COLUMN="13" START_LINE="74"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S022_A002">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Send For Approval' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Send For Approval' action. This is invoked in AUD_S020_S022_A002 transition from Create_Audit to Approve_Audit stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="105" LINES="9" START_COLUMN="13" START_LINE="97"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S020_A003">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Approve' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Approve' action. This is invoked in aud_s022_s020_a004 procedure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="128" LINES="9" START_COLUMN="13" START_LINE="120"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S020_A004">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Request Clarification' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Request Clarification' action. This is invoked in AUD_S022_S020_A004 transition from Approve_Audit to Create_Audit stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="151" LINES="9" START_COLUMN="13" START_LINE="143"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S021_A009">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Cancel Audit' action wherein the audit form is in Approve_Audit stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Cancel Audit' action wherein the audit form is in Approve_Audit stage. This is invoked in AUD_S022_S021_A009 transition from Approve_Audit to Manage_Audit_End stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="174" LINES="9" START_COLUMN="13" START_LINE="166"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ENABLE_LINKS">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to enable Audit Closure link in 'My Audits' report on publishing final report for the audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to enable Audit Closure link in 'My Audits' report on publishing final report for the audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[contains  audit id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_PUBLISHED_BY" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contains published by]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[return contains  pid]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_audit_id contains  audit id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_published_by contains published by]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_pid return contains  pid]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="57" END_LINE="185" LINES="3" START_COLUMN="13" START_LINE="183"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_CREATION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to trigger the audit when a new audit form is submitted with 'Update Audit' action and on submitting the form with 'Approve' action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to trigger the audit when a new audit form is submitted with 'Update Audit' action and on submitting the form with 'Approve' action.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[CONTAINS updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data CONTAINS updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="198" LINES="4" START_COLUMN="13" START_LINE="195"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AE_AUDIT_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure inserts the value of Audit ID, Audit Title, Auditable Entities, Related Risks, Audit Start Date, Audit End Date, Next Audit Date into ms_aud_ae_audit_dates table for displaying these details in Audit Advisor and Risk Advisor.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure inserts the value of Audit ID, Audit Title, Auditable Entities, Related Risks, Audit Start Date, Audit End Date, Next Audit Date into ms_aud_ae_audit_dates table for displaying these details in Audit Advisor and Risk Advisor.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="59" END_LINE="209" LINES="3" START_COLUMN="13" START_LINE="207"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_SCHEDULER">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure converts future audit to active when audit start date meets the system date.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure converts future audit to active when audit start date meets the system date. This is invoked on daily basis through 'MS_AUD_Sch_Generate_Audit' schedule infolet
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="66" END_LINE="220" LINES="3" START_COLUMN="13" START_LINE="218"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_RSRC_ALLOC_RSM_TO_MANAGE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to update the Team Member field in audit with the value of Resources field in RSM.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to update the Team Member field in audit with the value of Resources field in RSM. Also to update the values of Audit Start Date, Modified By and Modified On fields in audit from RSM when Is_RSM_Integrated parameter is set to Y.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[contains  audit id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contains Flag Type]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_audit_id contains  audit id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_TYPE_FLAG contains Flag Type]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="109" END_LINE="228" LINES="1" START_COLUMN="13" START_LINE="228"/>
    </PROCEDURE>
    <PROCEDURE NAME="RSM_INTEGRATION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to update the Team Member field in audit with the value of Resources field in RSM.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to update the Team Member field in audit with the value of Resources field in RSM. Also to update the values of Audit Start Date, Modified By and Modified On fields in audit from RSM when Is_RSM_Integrated parameter is set to Y.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_XML" TYPE="XMLTYPE">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain parman name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_xml contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_param_name contain parman name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="61" END_LINE="243" LINES="5" START_COLUMN="13" START_LINE="239"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_PID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_MANAGE_AUDIT_V and to update this value to MS_AUD_AUDIT base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_MANAGE_AUDIT_V and to update this value to MS_AUD_AUDIT base table. It is also used to copy the details of Audit Plan/Scope and Tasks from the source audit to the copied audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="75" END_LINE="265" LINES="8" START_COLUMN="13" START_LINE="258"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_SCHED_UPCOM_EMAIL">
      <COMMENT_FIRST_LINE><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_MANAGE_AUDIT_V and to update this value to MS_AUD_AUDIT base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_MANAGE_AUDIT_V and to update this value to MS_AUD_AUDIT base table. It is also used to copy the details of Audit Plan/Scope and Tasks from the source audit to the copied audit.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="67" END_LINE="276" LINES="3" START_COLUMN="13" START_LINE="274"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S021_S020_A036">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Re-open' action wherein the audit form is in Manage_Audit_End stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Re-open' action wherein the audit form is in Manage_Audit_End stage. This is invoked in AUD_S021_S020_A036 transition from Manage_Audit_End to Create_Audit stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="301" LINES="11" START_COLUMN="14" START_LINE="291"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S021_S022_A036">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Re-open' action after which approve assignment will be triggered.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Re-open' action after which approve assignment will be triggered. This is invoked in aud_s020_s022_a002 procedure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="326" LINES="11" START_COLUMN="14" START_LINE="316"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form from Re-open Audits report for data correction.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form from Re-open Audits report for data correction. This is invoked in aud_s020_s020_a008 and aud_s021_s020_a036 procedures.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="351" LINES="11" START_COLUMN="14" START_LINE="341"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S021_A009_AS51">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Cancel Audit' action wherein the audit form is in pending re-open audit approval stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the audit form with 'Cancel Audit' action wherein the audit form is in pending re-open audit approval stage. This is invoked in aud_s022_s021_a009 procedure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="376" LINES="11" START_COLUMN="11" START_LINE="366"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to update Organizations field with the values present in TMP field based on the value present in Scope Based On field.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to update Organizations field with the values present in TMP field based on the value present in Scope Based On field.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="391" LINES="5" START_COLUMN="11" START_LINE="387"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="392" LINES="392" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F003_HELPER" SCHEMA="Schema_objects">
    <VARIABLE NAME="LC_RSM_INTEGRATED_WITH_AUDITS">
      <RETURN TYPE="VARCHAR2(1)"/>
    </VARIABLE>
    <PROCEDURE NAME="RSM_INTEGRATION">
      <ARGUMENT MODE="IN" NAME="LT_IN_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="255" LINES="251" START_COLUMN="13" START_LINE="5"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S020_A008">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1064" LINES="808" START_COLUMN="13" START_LINE="257"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S021_A009">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1368" LINES="303" START_COLUMN="13" START_LINE="1066"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S021_A009">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1672" LINES="303" START_COLUMN="13" START_LINE="1370"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S021_A028">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2023" LINES="350" START_COLUMN="13" START_LINE="1674"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S020_S022_A002">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2335" LINES="311" START_COLUMN="13" START_LINE="2025"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S020_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2582" LINES="246" START_COLUMN="13" START_LINE="2337"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S020_A003">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="3292" LINES="709" START_COLUMN="13" START_LINE="2584"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_RSRC_ALLOC_RSM_TO_MANAGE">
      <COMMENT_FIRST_LINE><![CDATA[  PROCEDURE proc_rsrc_alloc_rsm_to_manage(lc_audit_id IN ms_aud_audit.audit_id%type) IS
lc_rsrc            VARCHAR2(1000);
lc_rsrc_cur        VARCHAR2(100);
lc_sql             VARCHAR2(1000);
lc_upd_sql         VARCHAR2(1000);
lc_upd_sql1        VARCHAR2(1000);
xn_error_handle_id NUMBER := 0;
xn_error_sequence  NUMBER := 0;
lc_del_flag        VARCHAR2(10) := 'N';
lc_modulename      VARCHAR2(100) := '[ ms_aud_f003_helper.proc_rsrc_alloc_rsm_to_manage ]';
pragma autonomous_transaction;
TYPE team_cur IS REF CURSOR;
cur team_cur;
BEGIN
IF (ms_apps_utilities.get_parameter_value(1,
'MS AUD Integrated Modules',
'Is_RSM_Integrated') = 'Y') THEN
lc_sql := 'SELECT a.resource_name
FROM ms_rsm_team_resources a, ms_rsm_project_team b, ms_aud_audit c, si_users d
WHERE b.project_id = :1 AND b.team_id = a.team_id and b.project_id=c.audit_id  AND a.resource_name = d.user_name and resource_name is not NULL';
OPEN cur FOR lc_sql
USING lc_audit_id;
LOOP
FETCH cur
INTO lc_rsrc_cur;
EXIT WHEN cur%NOTFOUND;
lc_rsrc := lc_rsrc || ',' || lc_rsrc_cur;
END LOOP;
lc_rsrc := SUBSTR(lc_rsrc, 2, LENGTH(lc_rsrc));
lc_upd_sql := 'UPDATE ms_aud_manage_audit_v SET team_member = :1 WHERE instance_id = (SELECT MAX (instance_id) FROM ms_aud_manage_audit_v WHERE audit_id = :2)';
lc_upd_sql1 := 'UPDATE ms_aud_audit_tmm SET team_member = :1 WHERE audit_id = :2';
EXECUTE IMMEDIATE lc_upd_sql
USING lc_rsrc, lc_audit_id;
EXECUTE IMMEDIATE lc_upd_sql1 USING lc_rsrc, lc_audit_id;
FOR rec IN (SELECT COLUMN_VALUE AS user_id
FROM TABLE(ms_apps_utilities.PARSE_STRING(lc_rsrc, ','))) LOOP
IF rec.user_id IS NOT NULL THEN
IF lc_del_flag = 'N' THEN
DELETE FROM ms_aud_audit_tmm WHERE audit_id = lc_audit_id;
lc_del_flag := 'Y';
END IF;
INSERT INTO ms_aud_audit_tmm
(audit_id, team_member)
VALUES
(lc_audit_id, rec.user_id);
END IF;
END LOOP;
COMMIT;
ms_apps_mdf_errors_pkg.insert_log(pn_error_handle_id =&gt; xn_error_handle_id,
pn_error_sequence  =&gt; xn_error_sequence,
pc_error_type      =&gt; 'LOG',
pc_error_text      =&gt; 'AUD' ||
' Team updates in Manage Audit is Successful');
END IF;
EXCEPTION
WHEN OTHERS THEN
ms_apps_mdf_errors_pkg.insert_log(pn_error_handle_id =&gt; xn_error_handle_id,
pn_error_sequence  =&gt; xn_error_sequence,
pc_error_type      =&gt; 'ERROR',
pc_error_text      =&gt; lc_modulename ||
SQLCODE || '-' ||
' Error in Resource updation in Audit' ||
SQLERRM);
RAISE;
END proc_rsrc_alloc_rsm_to_manage;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[  PROCEDURE proc_rsrc_alloc_rsm_to_manage(lc_audit_id IN ms_aud_audit.audit_id%type) IS
lc_rsrc            VARCHAR2(1000);
lc_rsrc_cur        VARCHAR2(100);
lc_sql             VARCHAR2(1000);
lc_upd_sql         VARCHAR2(1000);
lc_upd_sql1        VARCHAR2(1000);
xn_error_handle_id NUMBER := 0;
xn_error_sequence  NUMBER := 0;
lc_del_flag        VARCHAR2(10) := 'N';
lc_modulename      VARCHAR2(100) := '[ ms_aud_f003_helper.proc_rsrc_alloc_rsm_to_manage ]';
pragma autonomous_transaction;
TYPE team_cur IS REF CURSOR;
cur team_cur;
BEGIN
IF (ms_apps_utilities.get_parameter_value(1,
'MS AUD Integrated Modules',
'Is_RSM_Integrated') = 'Y') THEN
lc_sql := 'SELECT a.resource_name
FROM ms_rsm_team_resources a, ms_rsm_project_team b, ms_aud_audit c, si_users d
WHERE b.project_id = :1 AND b.team_id = a.team_id and b.project_id=c.audit_id  AND a.resource_name = d.user_name and resource_name is not NULL';
OPEN cur FOR lc_sql
USING lc_audit_id;
LOOP
FETCH cur
INTO lc_rsrc_cur;
EXIT WHEN cur%NOTFOUND;
lc_rsrc := lc_rsrc || ',' || lc_rsrc_cur;
END LOOP;
lc_rsrc := SUBSTR(lc_rsrc, 2, LENGTH(lc_rsrc));
lc_upd_sql := 'UPDATE ms_aud_manage_audit_v SET team_member = :1 WHERE instance_id = (SELECT MAX (instance_id) FROM ms_aud_manage_audit_v WHERE audit_id = :2)';
lc_upd_sql1 := 'UPDATE ms_aud_audit_tmm SET team_member = :1 WHERE audit_id = :2';
EXECUTE IMMEDIATE lc_upd_sql
USING lc_rsrc, lc_audit_id;
EXECUTE IMMEDIATE lc_upd_sql1 USING lc_rsrc, lc_audit_id;
FOR rec IN (SELECT COLUMN_VALUE AS user_id
FROM TABLE(ms_apps_utilities.PARSE_STRING(lc_rsrc, ','))) LOOP
IF rec.user_id IS NOT NULL THEN
IF lc_del_flag = 'N' THEN
DELETE FROM ms_aud_audit_tmm WHERE audit_id = lc_audit_id;
lc_del_flag := 'Y';
END IF;
INSERT INTO ms_aud_audit_tmm
(audit_id, team_member)
VALUES
(lc_audit_id, rec.user_id);
END IF;
END LOOP;
COMMIT;
ms_apps_mdf_errors_pkg.insert_log(pn_error_handle_id =&gt; xn_error_handle_id,
pn_error_sequence  =&gt; xn_error_sequence,
pc_error_type      =&gt; 'LOG',
pc_error_text      =&gt; 'AUD' ||
' Team updates in Manage Audit is Successful');
END IF;
EXCEPTION
WHEN OTHERS THEN
ms_apps_mdf_errors_pkg.insert_log(pn_error_handle_id =&gt; xn_error_handle_id,
pn_error_sequence  =&gt; xn_error_sequence,
pc_error_type      =&gt; 'ERROR',
pc_error_text      =&gt; lc_modulename ||
SQLCODE || '-' ||
' Error in Resource updation in Audit' ||
SQLERRM);
RAISE;
END proc_rsrc_alloc_rsm_to_manage;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE_FLAG" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="3576" LINES="208" START_COLUMN="13" START_LINE="3369"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ENABLE_LINKS">
      <ARGUMENT MODE="IN" NAME="LV_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="LV_PUBLISHED_BY" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="3639" LINES="63" START_COLUMN="13" START_LINE="3577"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_CREATION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="3951" LINES="311" START_COLUMN="13" START_LINE="3641"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AE_AUDIT_DATE">
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="6" END_LINE="4118" LINES="166" START_COLUMN="13" START_LINE="3953"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_SCHEDULER">
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="4351" LINES="232" START_COLUMN="13" START_LINE="4120"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_PID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[FROM DUAL;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FROM DUAL;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="4494" LINES="137" START_COLUMN="13" START_LINE="4358"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_SCHED_UPCOM_EMAIL">
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="4519" LINES="24" START_COLUMN="11" START_LINE="4496"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S021_S020_A036">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="4813" LINES="293" START_COLUMN="14" START_LINE="4521"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S021_S022_A036">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="5005" LINES="191" START_COLUMN="14" START_LINE="4815"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="5223" LINES="217" START_COLUMN="14" START_LINE="5007"/>
    </PROCEDURE>
    <PROCEDURE NAME="AUD_S022_S021_A009_AS51">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="5385" LINES="161" START_COLUMN="14" START_LINE="5225"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="5459" LINES="73" START_COLUMN="11" START_LINE="5387"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="5461" LINES="5461" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F004_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S030_S031_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="52" LINES="52" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F004_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S030_S031_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="1105" LINES="1094" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="1109" LINES="1109" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F004_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F004_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1217" LINES="1207" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1220" LINES="1220" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F004_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ MS_AUD_F004_HELPER
 This package consists of list of hooks procedure used in Create Task form.
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TASK_S030_S031_A010">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Create Task stage to End Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Create Task stage to End Task stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="33" LINES="9" START_COLUMN="13" START_LINE="25"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_GENERATE_TASKS">
      <COMMENT_FIRST_LINE><![CDATA[ Creation of 3 types of tasks i.e.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Creation of 3 types of tasks i.e. Checklist, Other and Control on submission of create task form .Called in transition proc: task_s030_s031_a010.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="65" END_LINE="46" LINES="4" START_COLUMN="13" START_LINE="43"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_GET_CHECKLIST">
      <COMMENT_FIRST_LINE><![CDATA[ Retrieving checklist related data during creation of checklist task from create task form.Called in  proc proc_generate_tasks
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Retrieving checklist related data during creation of checklist task from create task form.Called in  proc proc_generate_tasks
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_INST_NUM" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_IID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="MS_AUD_TASK_TSK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="64" END_LINE="64" LINES="9" START_COLUMN="13" START_LINE="56"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_CHKLST_TSK_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ Retrieving header details of tasks created.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Retrieving header details of tasks created. Called in proc  proc_generate_tasks
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[CONTAINS  PROCESS INSTANCE ID.]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id CONTAINS  PROCESS INSTANCE ID.]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="73" LINES="2" START_COLUMN="12" START_LINE="72"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="75" LINES="75" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F004_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S030_S031_A010">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="152" LINES="150" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_GENERATE_TASKS">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1463" LINES="1310" START_COLUMN="12" START_LINE="154"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_GET_CHECKLIST">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_INST_NUM" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_IID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="MS_AUD_TASK_TSK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1986" LINES="522" START_COLUMN="12" START_LINE="1465"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_CHKLST_TSK_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="4" END_LINE="2066" LINES="77" START_COLUMN="10" START_LINE="1990"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="2068" LINES="2068" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S040_S041_A012">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S042_A011">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S043_A002">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S042_S040_A013">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S043_S040_A004">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S040_S041_A012">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S042_A011">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S043_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S042_S040_A013">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S043_S040_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_7">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_7">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S046_A012">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S046_S040_A033">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S046_A012">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S046_S040_A033">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_4_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S046_S041_A032">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_RT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AF">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_4_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TASK_S046_S041_A032">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_RT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AF">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_5_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="REV_QUE_TRANS_FA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CA">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S044_S040_A010">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="100" LINES="100" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_5_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="REV_QUE_TRANS_FA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S044_S040_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="3749" LINES="3749" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="3467" LINES="3457" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="3470" LINES="3470" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F005_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ MS_AUD_F005_HELPER
 This package consists of list of hooks procedure used in Audit Task form.
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TASK_S040_S041_A012">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Field Work stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Field Work stage to Cancel Task stage. This procedure is invoked when a task is Cancelled.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="38" LINES="11" START_COLUMN="14" START_LINE="28"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S042_A011">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Fieldwork stage to Review Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Fieldwork stage to Review Task stage. This procedure is invoked when task is sent for Review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="67" LINES="11" START_COLUMN="14" START_LINE="57"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S043_A002">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Fieldwork stage to Approve Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Fieldwork stage to Approve Task stage. This procedure is invoked when task is sent for approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="95" LINES="11" START_COLUMN="14" START_LINE="85"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S042_S040_A013">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Review Task stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Review Task stage to Fieldwork stage. This procedure is invoked when task review is complete.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="123" LINES="11" START_COLUMN="14" START_LINE="113"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S043_S040_A004">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Fieldwork stage. This procedure is invoked when approver sends task for clarification.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="151" LINES="11" START_COLUMN="14" START_LINE="141"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_7">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Cancel Task stage. This procedure is invoked when pending approval Task is cancelled.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="179" LINES="11" START_COLUMN="14" START_LINE="169"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure self transition call from Field Work stage to Field Work stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure self transition call from Field Work stage to Field Work stage. This procedure is invoked when the task is updated.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="207" LINES="11" START_COLUMN="14" START_LINE="197"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to End Field Work stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to End Field Work stage. This procedure is invoked when Task is approved.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="235" LINES="11" START_COLUMN="14" START_LINE="225"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Field Work stage to End Field Work stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Field Work stage to End Field Work stage. This procedure is invoked when a task is complete.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="263" LINES="11" START_COLUMN="14" START_LINE="253"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Final Approver stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Final Approver stage. This procedure id invoked when approver sends task for final approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="291" LINES="11" START_COLUMN="14" START_LINE="281"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to End Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to End Fieldwork stage. This procedure is invoked when final approver approves the task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="319" LINES="11" START_COLUMN="14" START_LINE="309"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Fieldwork stage. This procedure is invoked when final approver sends the task for clarification.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="347" LINES="11" START_COLUMN="14" START_LINE="337"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Cancel Task stage. This procedure is invoked when final approver cancels the task at pending final approval stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="375" LINES="11" START_COLUMN="14" START_LINE="365"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_17">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is called in hook procedure task_s043_s040_a004.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is called in hook procedure task_s043_s040_a004.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="403" LINES="11" START_COLUMN="14" START_LINE="393"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is called in hook procedure TRANSITION_14.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is called in hook procedure TRANSITION_14.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="431" LINES="11" START_COLUMN="14" START_LINE="421"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_19">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is called in hook procedure transition_8.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is called in hook procedure transition_8.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="459" LINES="11" START_COLUMN="14" START_LINE="449"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_SAVE_AND_CONTINUE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure self transition call in the following stages of Audit Task workflow:
i)Cancel Task
ii)Review Task
iii)Approve Task
iv)Fieldwork End Stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure self transition call in the following stages of Audit Task workflow:
i)Cancel Task
ii)Review Task
iii)Approve Task
iv)Fieldwork End Stage.
v)Final Approval Stage
vi)Cancel Final Approval
This procedure is invoked when task is updated.

]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="495" LINES="11" START_COLUMN="14" START_LINE="485"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S046_A012">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Field Work stage to Approve Cancellation of task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Field Work stage to Approve Cancellation of task stage. This procedure is invoked when a task cancellation is sent for approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="523" LINES="11" START_COLUMN="14" START_LINE="513"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S046_S040_A033">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Cancellation stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Cancellation stage to Fieldwork stage. This procedure is invoked when cancellation of task is sent for clarification.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="551" LINES="11" START_COLUMN="14" START_LINE="541"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S046_S041_A032">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Cancellation stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Cancellation stage to Cancel Task stage. This procedure is invoked when cancellation of task is approved.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="579" LINES="11" START_COLUMN="14" START_LINE="569"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S044_S040_A010">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from End Fieldwork stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from End Fieldwork stage to Fieldwork stage. This procedure is invoked when task is re-opened.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="607" LINES="11" START_COLUMN="14" START_LINE="597"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is post hook procedure for updation of instance id in base table during transitions.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is post hook procedure for updation of instance id in base table during transitions.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="635" LINES="10" START_COLUMN="11" START_LINE="626"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_HEADER_DETAILS_UPDATES">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is defined to update header details of Audit task
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is defined to update header details of Audit task
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="I_IN_DATA" TYPE="XMLTYPE"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="66" END_LINE="653" LINES="1" START_COLUMN="11" START_LINE="653"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="655" LINES="655" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F005_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="240" LINES="238" START_COLUMN="12" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="387" LINES="146" START_COLUMN="14" START_LINE="242"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S041_A012">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="564" LINES="176" START_COLUMN="14" START_LINE="389"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S042_A011">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="750" LINES="185" START_COLUMN="14" START_LINE="566"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S043_A002">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="977" LINES="226" START_COLUMN="14" START_LINE="752"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S042_S040_A013">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1155" LINES="177" START_COLUMN="14" START_LINE="979"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S043_S040_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1367" LINES="211" START_COLUMN="14" START_LINE="1157"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_7">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1543" LINES="175" START_COLUMN="14" START_LINE="1369"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1948" LINES="404" START_COLUMN="14" START_LINE="1545"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="2162" LINES="213" START_COLUMN="14" START_LINE="1950"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2388" LINES="225" START_COLUMN="14" START_LINE="2164"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2571" LINES="182" START_COLUMN="14" START_LINE="2390"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2780" LINES="208" START_COLUMN="14" START_LINE="2573"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2991" LINES="210" START_COLUMN="14" START_LINE="2782"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3167" LINES="175" START_COLUMN="14" START_LINE="2993"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_17">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3354" LINES="186" START_COLUMN="14" START_LINE="3169"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3541" LINES="186" START_COLUMN="14" START_LINE="3356"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_19">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3717" LINES="175" START_COLUMN="14" START_LINE="3543"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_SAVE_AND_CONTINUE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="3925" LINES="207" START_COLUMN="14" START_LINE="3719"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S040_S046_A012">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="4100" LINES="174" START_COLUMN="14" START_LINE="3927"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S046_S040_A033">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="4276" LINES="175" START_COLUMN="14" START_LINE="4102"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S046_S041_A032">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="4440" LINES="163" START_COLUMN="14" START_LINE="4278"/>
    </PROCEDURE>
    <PROCEDURE NAME="TASK_S044_S040_A010">
      <COMMENT_FIRST_LINE><![CDATA[Added for re-opening of work papers start
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for re-opening of work papers start
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="4744" LINES="301" START_COLUMN="12" START_LINE="4444"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[Added for re-opening of work papers End
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for re-opening of work papers End
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="4796" LINES="49" START_COLUMN="11" START_LINE="4748"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_HEADER_DETAILS_UPDATES">
      <ARGUMENT MODE="IN OUT" NAME="I_IN_DATA" TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="32" END_LINE="4876" LINES="78" START_COLUMN="12" START_LINE="4799"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="4879" LINES="4879" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F006_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_5">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="SAVE_AND_CONTINUE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="76" LINES="76" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F006_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_5">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1105" LINES="1094" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="SAVE_AND_CONTINUE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2209" LINES="1094" START_COLUMN="15" START_LINE="1116"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="2213" LINES="2213" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F006_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F006_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1308" LINES="1298" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1311" LINES="1311" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F006_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: AUD<br>
 Description: This package contains all the transition procedures and other procedures and functions related to MileStone Creation<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TRANSITION_5">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is used while creating the MileStone
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is used while creating the MileStone
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="34" LINES="11" START_COLUMN="14" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="SAVE_AND_CONTINUE">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked while creating the MileStone
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked while creating the MileStone
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="58" LINES="11" START_COLUMN="14" START_LINE="48"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F006_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_5">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="44" LINES="42" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="SAVE_AND_CONTINUE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="154" LINES="109" START_COLUMN="14" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="155" LINES="155" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TCT_S060_S060_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S062_A011">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S063_A002">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S064_A003">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S061_A012">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TCT_S060_S060_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S062_A011">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S063_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S064_A003">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S061_A012">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TCT_S063_S060_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S062_S060_A013">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S061_A012">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S064_A005">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TCT_S063_S060_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S062_S060_A013">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S061_A012">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S064_A005">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_15">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S066_A012">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S066_S060_A033">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_15">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S066_A012">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S066_S060_A033">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_4_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TCT_S066_S061_A032">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_EF">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_RT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_4_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TCT_S066_S061_A032">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_EF">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_RT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_5_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="REV_QUE_TRANS_FA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CA">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S064_S060_A010">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="100" LINES="100" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_5_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="REV_QUE_TRANS_FA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S064_S060_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="3749" LINES="3749" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="3467" LINES="3457" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="3470" LINES="3470" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F007_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: AUD<br>
 Description: This package consists of list of hooks procedure used in Control Test Task form<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TCT_S060_S060_A010">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure self transition call from Field Work stage to Field Work stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure self transition call from Field Work stage to Field Work stage.
This procedure is invoked when the task is updated.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="37" LINES="11" START_COLUMN="14" START_LINE="27"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S062_A011">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Field Work stage to Review Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Field Work stage to Review Task stage.
This procedure is invoked when a task is sent for review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="61" LINES="11" START_COLUMN="14" START_LINE="51"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S063_A002">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Field Work stage to Approve Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Field Work stage to Approve Task stage.
This procedure is invoked when a task is sent for approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="85" LINES="11" START_COLUMN="14" START_LINE="75"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S064_A003">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Approve Task stage to End field work stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Approve Task stage to End field work stage.
This procedure is invoked when a task is approved.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="109" LINES="11" START_COLUMN="14" START_LINE="99"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S061_A012">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="121" LINES="11" START_COLUMN="14" START_LINE="111"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S060_A004">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Approve TasK stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Approve TasK stage to Fieldwork stage.
This procedure is invoked when approver sends for clarification.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="145" LINES="11" START_COLUMN="14" START_LINE="135"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S062_S060_A013">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Review Task stage to Field Work stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Review Task stage to Field Work stage.
This procedure is invoked when Task is reviewed.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="169" LINES="11" START_COLUMN="14" START_LINE="159"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S061_A012">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Fiedlwork stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Fiedlwork stage to Cancel Task stage.
This procedure is invoked when Task is cancelled.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="194" LINES="11" START_COLUMN="14" START_LINE="184"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S064_A005">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Fieldwork stage to End Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Fieldwork stage to End Fieldwork stage.
This procedure is invoked when task is complete .
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="219" LINES="11" START_COLUMN="14" START_LINE="209"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Final Approved stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Final Approved stage to Fieldwork stage.
This procedure id invoked when final approver sends task for clarification.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="244" LINES="11" START_COLUMN="14" START_LINE="234"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is called in hook procedure transition_10.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is called in hook procedure transition_10.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="268" LINES="11" START_COLUMN="14" START_LINE="258"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_12">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="281" LINES="11" START_COLUMN="14" START_LINE="271"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Final Approver stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Final Approver stage to Cancel Task stage.
This procedure is invoked when final approver cancels the task at pending final approval stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="306" LINES="11" START_COLUMN="14" START_LINE="296"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Final Approver stage to End Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Final Approver stage to End Fieldwork stage.
This procedure is invoked when final approver completes the task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="331" LINES="11" START_COLUMN="14" START_LINE="321"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_15">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Approve TasK stage to Final Approver stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Approve TasK stage to Final Approver stage.
This procedure is invoked when task approver send the task for final approver.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="356" LINES="11" START_COLUMN="14" START_LINE="346"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when the task is updated when explicit call to this procedure is made.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when the task is updated when explicit call to this procedure is made.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="380" LINES="11" START_COLUMN="14" START_LINE="370"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S066_A012">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Fieldwork stage to Approve cancellation Task stage
This procedure is invoked when task is sent for approval of cancellation of task.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Fieldwork stage to Approve cancellation Task stage
This procedure is invoked when task is sent for approval of cancellation of task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="405" LINES="11" START_COLUMN="14" START_LINE="395"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S066_S060_A033">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Cancel Approve stage to Field Work stage
This procedure is invoked when task is sent for Clarification before approval of cancellation of task
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Cancel Approve stage to Field Work stage
This procedure is invoked when task is sent for Clarification before approval of cancellation of task
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="429" LINES="11" START_COLUMN="14" START_LINE="419"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S066_S061_A032">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from Cancel Approve stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from Cancel Approve stage to Cancel Task stage.
This procedure is invoked when task in pending cancellation approval  is cancelled.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="454" LINES="11" START_COLUMN="14" START_LINE="444"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_SAVE_AND_CONTINUE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="467" LINES="11" START_COLUMN="15" START_LINE="457"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S064_S060_A010">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is a hook procedure transition call from End Fieldwork stage to Fieldwork stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is a hook procedure transition call from End Fieldwork stage to Fieldwork stage.
This procedure is invoked when task is re-opened.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="492" LINES="11" START_COLUMN="14" START_LINE="482"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is post hook procedure for updation of instance id in base table during transitions.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is post hook procedure for updation of instance id in base table during transitions.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="515" LINES="10" START_COLUMN="14" START_LINE="506"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_TASK_HEADER_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function is defined to update header details of Audit task.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function is defined to update header details of Audit task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_ERROR_SEQ" TYPE="NUMBER"/>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="533" LINES="5" START_COLUMN="13" START_LINE="529"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is to achieve data correction of control task.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is to achieve data correction of control task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="557" LINES="11" START_COLUMN="11" START_LINE="547"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="559" LINES="559" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F007_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="149" LINES="147" START_COLUMN="11" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="521" LINES="372" START_COLUMN="11" START_LINE="150"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S060_A010">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="920" LINES="399" START_COLUMN="14" START_LINE="522"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S062_A011">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1123" LINES="202" START_COLUMN="14" START_LINE="922"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S063_A002">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1386" LINES="263" START_COLUMN="11" START_LINE="1124"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S064_A003">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1617" LINES="231" START_COLUMN="11" START_LINE="1387"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S061_A012">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1812" LINES="195" START_COLUMN="11" START_LINE="1618"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S063_S060_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2058" LINES="246" START_COLUMN="11" START_LINE="1813"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S062_S060_A013">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2279" LINES="221" START_COLUMN="11" START_LINE="2059"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S061_A012">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2475" LINES="196" START_COLUMN="11" START_LINE="2280"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S064_A005">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2722" LINES="247" START_COLUMN="11" START_LINE="2476"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2980" LINES="258" START_COLUMN="11" START_LINE="2723"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3202" LINES="222" START_COLUMN="11" START_LINE="2981"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_12">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3435" LINES="233" START_COLUMN="11" START_LINE="3203"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3632" LINES="197" START_COLUMN="11" START_LINE="3436"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3862" LINES="230" START_COLUMN="11" START_LINE="3633"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_15">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4091" LINES="229" START_COLUMN="11" START_LINE="3863"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4311" LINES="220" START_COLUMN="11" START_LINE="4092"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S060_S066_A012">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="4532" LINES="221" START_COLUMN="11" START_LINE="4312"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S066_S060_A033">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="4752" LINES="220" START_COLUMN="11" START_LINE="4533"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S066_S061_A032">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="4936" LINES="184" START_COLUMN="11" START_LINE="4753"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_SAVE_AND_CONTINUE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="5114" LINES="176" START_COLUMN="14" START_LINE="4939"/>
    </PROCEDURE>
    <PROCEDURE NAME="TCT_S064_S060_A010">
      <COMMENT_FIRST_LINE><![CDATA[Added for re-opening of workpapers start
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for re-opening of workpapers start
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="5429" LINES="312" START_COLUMN="12" START_LINE="5118"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[Added for re-opening of workpapers End
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for re-opening of workpapers End
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="5490" LINES="58" START_COLUMN="11" START_LINE="5433"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_TASK_HEADER_DETAILS">
      <ARGUMENT MODE="IN" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_ERROR_SEQ" TYPE="NUMBER"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="35" END_LINE="5556" LINES="66" START_COLUMN="14" START_LINE="5491"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="5730" LINES="173" START_COLUMN="11" START_LINE="5558"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="5731" LINES="5731" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F008_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A027">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F008_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A027">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F008_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F008_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1667" LINES="1657" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1670" LINES="1670" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F008_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: AUD<br>
 Description: This package contains all the transition procedures and other procedures and functions related to Issues for review flow<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when Issues are sent for Internal /Auditee review
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when Issues are sent for Internal /Auditee review
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="36" LINES="11" START_COLUMN="14" START_LINE="26"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when response is provided for Internal/Auditee review.Review Issue to Review Response stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when response is provided for Internal/Auditee review.Review Issue to Review Response stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="60" LINES="11" START_COLUMN="14" START_LINE="50"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when reviewer sends for Internal/Auditee review again after response is provided from Internal/Auditee review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when reviewer sends for Internal/Auditee review again after response is provided from Internal/Auditee review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="84" LINES="11" START_COLUMN="14" START_LINE="74"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when review form is approved from review response stage [Review response to Close Stage].]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when review form is approved from review response stage [Review response to Close Stage].
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="108" LINES="11" START_COLUMN="14" START_LINE="98"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A024">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when Issues are sent to delegatee Review Issue to Review Issue Stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when Issues are sent to delegatee Review Issue to Review Issue Stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="132" LINES="11" START_COLUMN="14" START_LINE="122"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A026">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when delegatee is updated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when delegatee is updated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="156" LINES="11" START_COLUMN="14" START_LINE="146"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A027">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when delegatee is removed.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when delegatee is removed.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="180" LINES="11" START_COLUMN="14" START_LINE="170"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when Issues are sent to review to get the issues and actions from draft and display in Issues for review form..]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when Issues are sent to review to get the issues and actions from draft and display in Issues for review form..
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_STATUS" TYPE="NUMBER"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_pid Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="196" LINES="8" START_COLUMN="14" START_LINE="189"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_CALL_ISSUE_POPULATOR">
      <COMMENT_FIRST_LINE><![CDATA[This function is used to invoke issue populator
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function is used to invoke issue populator
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="X_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="X_PROCESS_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="X_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PRE_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[previous stage]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="X_CUR_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[current stage]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[x_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[x_process_id Process identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[x_pre_stage previous stage]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[x_cur_stage current stage]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="211" LINES="8" START_COLUMN="13" START_LINE="204"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_PROCESS_DATA_TO_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when Issues are sent to review to get the issues and actions from draft and display in Issues for review form..]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when Issues are sent to review to get the issues and actions from draft and display in Issues for review form..
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="225" LINES="6" START_COLUMN="14" START_LINE="220"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_TO_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to merge data from Issues for review to Draft.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to merge data from Issues for review to Draft.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="239" LINES="6" START_COLUMN="14" START_LINE="234"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_IN_TRANS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to merge data available in data queue to Draft.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to merge data available in data queue to Draft.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="256" LINES="8" START_COLUMN="14" START_LINE="249"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_STATUS_TO_DRAFT_ISS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure updates the status of Issues in Draft form based on the flow in Issues for review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure updates the status of Issues in Draft form based on the flow in Issues for review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="270" LINES="6" START_COLUMN="14" START_LINE="265"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_FROM_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure takes the Issue and actions related information from draft and add it in Issues for review form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure takes the Issue and actions related information from draft and add it in Issues for review form.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[@param lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="282" LINES="5" START_COLUMN="12" START_LINE="278"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[This procedure updates max(instance_id) in the base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure updates max(instance_id) in the base table.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="305" LINES="10" START_COLUMN="11" START_LINE="296"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="306" LINES="306" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F008_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_DATA_FROM_DRAFT">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="392" LINES="389" START_COLUMN="13" START_LINE="4"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_TO_DRAFT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="469" LINES="75" START_COLUMN="12" START_LINE="395"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_IN_TRANS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="738" LINES="268" START_COLUMN="12" START_LINE="471"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_TO_DRAFT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="1039" LINES="299" START_COLUMN="12" START_LINE="741"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_DRAFT">
      <ARGUMENT MODE="IN" NAME="P_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_STATUS" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="34" END_LINE="1437" LINES="397" START_COLUMN="12" START_LINE="1041"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_CALL_ISSUE_POPULATOR">
      <ARGUMENT MODE="IN" NAME="X_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="X_PROCESS_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PRE_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_CUR_STAGE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="29" END_LINE="1478" LINES="40" START_COLUMN="11" START_LINE="1439"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1631" LINES="152" START_COLUMN="12" START_LINE="1480"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_13">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="1969" LINES="337" START_COLUMN="14" START_LINE="1633"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="2156" LINES="186" START_COLUMN="14" START_LINE="1971"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2303" LINES="146" START_COLUMN="14" START_LINE="2158"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2430" LINES="126" START_COLUMN="14" START_LINE="2305"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A024">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2533" LINES="102" START_COLUMN="14" START_LINE="2432"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A026">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2670" LINES="135" START_COLUMN="14" START_LINE="2536"/>
    </PROCEDURE>
    <PROCEDURE NAME="SIR_S071_S071_A027">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2800" LINES="129" START_COLUMN="14" START_LINE="2672"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_STATUS_TO_DRAFT_ISS">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="2879" LINES="78" START_COLUMN="13" START_LINE="2802"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="2923" LINES="43" START_COLUMN="12" START_LINE="2881"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="2925" LINES="2925" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F009_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AR_S080_S081_A0011">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S082_A002">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S083_A020">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S084_A022">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S085_A021">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F009_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AR_S080_S081_A0011">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S082_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S083_A020">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S084_A022">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S085_A021">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F009_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AR_S084_S085_A021">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S081_S080_A013">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S082_S080_A004">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S083_S080_A013">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S084_S080_A004">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F009_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AR_S084_S085_A021">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S081_S080_A013">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S082_S080_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S083_S080_A013">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S084_S080_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F009_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AR_S085_S085_A038">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="52" LINES="52" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F009_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AR_S085_S085_A038">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="1253" LINES="1253" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F009_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F009_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="2267" LINES="2257" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="2270" LINES="2270" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F009_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: AUD<br>
 Description: This package contains all the transition procedures and other procedures 		and functions related to Audit Report flow.<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="AR_S080_S081_A0011">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when issues are sent for review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when issues are sent for review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="35" LINES="11" START_COLUMN="14" START_LINE="25"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S082_A002">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when issues are sent for approval.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when issues are sent for approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="59" LINES="11" START_COLUMN="14" START_LINE="49"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S083_A020">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when issues are sent for Auditee review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when issues are sent for Auditee review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="83" LINES="11" START_COLUMN="14" START_LINE="73"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S084_A022">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when issues are sent for Management Support.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when issues are sent for Management Support.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="107" LINES="11" START_COLUMN="14" START_LINE="97"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S085_A021">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user publishes final report in the initial stage, CREATE_REPORT to PUBLISH_REPORT
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user publishes final report in the initial stage, CREATE_REPORT to PUBLISH_REPORT
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="131" LINES="11" START_COLUMN="14" START_LINE="121"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S084_S085_A021">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user publishes final report in the initial stage [CREATE_REPORT to PUBLISH_REPORT].]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user publishes final report in the initial stage [CREATE_REPORT to PUBLISH_REPORT].
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="155" LINES="11" START_COLUMN="14" START_LINE="145"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S081_S080_A013">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user completes review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user completes review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="179" LINES="11" START_COLUMN="14" START_LINE="169"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S082_S080_A004">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user completes review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user completes review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="203" LINES="11" START_COLUMN="14" START_LINE="193"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S082_S080_A003">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user approves the audit report in pending approval stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user approves the audit report in pending approval stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="227" LINES="11" START_COLUMN="14" START_LINE="217"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S083_S080_A013">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user completes auditee review.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user completes auditee review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="251" LINES="11" START_COLUMN="14" START_LINE="241"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S084_S080_A004">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user requests clarification form pending management support stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user requests clarification form pending management support stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="275" LINES="11" START_COLUMN="14" START_LINE="265"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_STATUS_TO_DRAFT_ISS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure updates the issue status in draft based on the audit report flow.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure updates the issue status in draft based on the audit report flow.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="289" LINES="6" START_COLUMN="14" START_LINE="284"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ISM_API_CALLER">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user publishes final report to trigger reportable issues to ISM.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user publishes final report to trigger reportable issues to ISM.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_OUT_XML" TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="54" END_LINE="294" LINES="1" START_COLUMN="14" START_LINE="294"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_FINAL_REPORT_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to enter the final report details into ms_aud_audit_published_reports.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to enter the final report details into ms_aud_audit_published_reports.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TASK_ID" TYPE="MS_AUD_AUDIT_REPORT.TASK_ID%TYPE">
        <COMMENT><![CDATA[task identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_URL_LINK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_PUBLISHED_BY" TYPE="VARCHAR2">
        <COMMENT><![CDATA[published by]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_task_id task identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_url_link]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_published_by published by]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="308" LINES="6" START_COLUMN="14" START_LINE="303"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to get the Issue and action details from draft to populate in Audit report form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to get the Issue and action details from draft to populate in Audit report form.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[process identification number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_STATUS" TYPE="NUMBER"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_pid process identification number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="324" LINES="8" START_COLUMN="14" START_LINE="317"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_CALL_ISSUE_POPULATOR">
      <ARGUMENT MODE="IN" NAME="X_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="X_PROCESS_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PRE_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_CUR_STAGE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="333" LINES="8" START_COLUMN="13" START_LINE="326"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_DATA_FROM_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to get the Issue and action details from draft to populate in Audit report form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to get the Issue and action details from draft to populate in Audit report form.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_pid process identification number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="345" LINES="5" START_COLUMN="14" START_LINE="341"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_TO_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to update the data from audit report to draft
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to update the data from audit report to draft
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_pid process identification number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="359" LINES="6" START_COLUMN="14" START_LINE="354"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_TO_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to merge the Issues and actions from audit report to draft.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to merge the Issues and actions from audit report to draft.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="6" END_LINE="374" LINES="6" START_COLUMN="14" START_LINE="369"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AR_DATA_MERGE_IN_TRANS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked to merge the audit report data available in data queue to draft
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked to merge the audit report data available in data queue to draft
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="392" LINES="8" START_COLUMN="15" START_LINE="385"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked on all transitions to update max(instance_id) in base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked on all transitions to update max(instance_id) in base table.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="412" LINES="10" START_COLUMN="14" START_LINE="403"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when user performs data correction of audit report for closed audits.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when user performs data correction of audit report for closed audits.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="436" LINES="11" START_COLUMN="14" START_LINE="426"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="438" LINES="438" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F009_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_DATA_FROM_DRAFT">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="406" LINES="404" START_COLUMN="13" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_DRAFT">
      <ARGUMENT MODE="IN" NAME="P_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_STATUS" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="34" END_LINE="958" LINES="551" START_COLUMN="12" START_LINE="408"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_CALL_ISSUE_POPULATOR">
      <ARGUMENT MODE="IN" NAME="X_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="X_PROCESS_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="X_FN_IDS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_PRE_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="X_CUR_STAGE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="29" END_LINE="999" LINES="40" START_COLUMN="11" START_LINE="960"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1142" LINES="142" START_COLUMN="12" START_LINE="1001"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S081_A0011">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1578" LINES="435" START_COLUMN="14" START_LINE="1144"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S082_A002">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1906" LINES="327" START_COLUMN="14" START_LINE="1580"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S083_A020">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2266" LINES="359" START_COLUMN="14" START_LINE="1908"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S084_A022">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2728" LINES="461" START_COLUMN="14" START_LINE="2268"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S080_S085_A021">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="3358" LINES="629" START_COLUMN="14" START_LINE="2730"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S084_S085_A021">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="3764" LINES="405" START_COLUMN="14" START_LINE="3360"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S081_S080_A013">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="3953" LINES="188" START_COLUMN="14" START_LINE="3766"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S082_S080_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="4157" LINES="203" START_COLUMN="14" START_LINE="3955"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S082_S080_A003">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="4326" LINES="168" START_COLUMN="14" START_LINE="4159"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S083_S080_A013">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="4486" LINES="159" START_COLUMN="14" START_LINE="4328"/>
    </PROCEDURE>
    <PROCEDURE NAME="AR_S084_S080_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="4657" LINES="170" START_COLUMN="14" START_LINE="4488"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_STATUS_TO_DRAFT_ISS">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="4741" LINES="83" START_COLUMN="13" START_LINE="4659"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ISM_API_CALLER">
      <ARGUMENT MODE="IN" NAME="LC_OUT_XML" TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="27" END_LINE="4805" LINES="63" START_COLUMN="14" START_LINE="4743"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_FINAL_REPORT_DETAILS">
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="LC_TASK_ID" TYPE="MS_AUD_AUDIT_REPORT.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="LC_URL_LINK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_PUBLISHED_BY" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="4861" LINES="55" START_COLUMN="14" START_LINE="4807"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_TO_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[- Editable Issues &amp; Action API Start
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[- Editable Issues &amp; Action API Start
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="4939" LINES="75" START_COLUMN="14" START_LINE="4865"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_TO_DRAFT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="5226" LINES="286" START_COLUMN="16" START_LINE="4941"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AR_DATA_MERGE_IN_TRANS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="5473" LINES="246" START_COLUMN="11" START_LINE="5228"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="5517" LINES="43" START_COLUMN="11" START_LINE="5475"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="5751" LINES="232" START_COLUMN="14" START_LINE="5520"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="5753" LINES="5753" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F010_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="76" LINES="76" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F010_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="2501" LINES="2501" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F010_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F010_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1367" LINES="1357" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1370" LINES="1370" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F010_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: AUD<br>
 Description:This package contains all the transition procedures and other    procedures and functions related to Draft Issues flow <br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[This procedure gets invoked when we submits draft Issues form
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure gets invoked when we submits draft Issues form
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="33" LINES="10" START_COLUMN="11" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <COMMENT_FIRST_LINE><![CDATA[This procedure
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="56" LINES="10" START_COLUMN="11" START_LINE="47"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_FROM_TASKS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure gets invoked when we approve the tasks [ Audit task, Checklist task and Control Test Task]
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure gets invoked when we approve the tasks [ Audit task, Checklist task and Control Test Task]
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="69" LINES="5" START_COLUMN="11" START_LINE="65"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_API">
      <COMMENT_FIRST_LINE><![CDATA[This procedure merges the Issues and Actions added/updated  in draft ,tasks, Issues for review and Audit report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure merges the Issues and Actions added/updated  in draft ,tasks, Issues for review and Audit report.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_WF_FLAG" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="31" END_LINE="83" LINES="6" START_COLUMN="11" START_LINE="78"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_IN_TRANS">
      <COMMENT_FIRST_LINE><![CDATA[This procedure which gets invoked on submission of Draft Issues form for merging the data from tasks, audit report, issues for review and draft by taking the data from data queue if available.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure which gets invoked on submission of Draft Issues form for merging the data from tasks, audit report, issues for review and draft by taking the data from data queue if available.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="100" LINES="7" START_COLUMN="11" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_FROM_MANAGE_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure gets invoked when we creates an audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure gets invoked when we creates an audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="113" LINES="5" START_COLUMN="11" START_LINE="109"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is used to update the scope related field [ AE/Process, Related Risks and Organizations ] for different scopes.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is used to update the scope related field [ AE/Process, Related Risks and Organizations ] for different scopes.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="126" LINES="5" START_COLUMN="11" START_LINE="122"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is used to generate IDs for Issues ,actions and documents.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is used to generate IDs for Issues ,actions and documents.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="32" END_LINE="139" LINES="5" START_COLUMN="11" START_LINE="135"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_FND_ACT_MERGE">
      <COMMENT_FIRST_LINE><![CDATA[This procedure updates the issues and actions updated from Audit report form and Re-opened tasks.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure updates the issues and actions updated from Audit report form and Re-opened tasks.
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LC_OUT_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="LT_INPUT_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="21" END_LINE="151" LINES="4" START_COLUMN="11" START_LINE="148"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_REOPEN_STATUS_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[This procedure updates the Issue Status in Draft Issues when the tasks are reopened and approved.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure updates the Issue Status in Draft Issues when the tasks are reopened and approved.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[function id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_fn_id function id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="163" LINES="5" START_COLUMN="11" START_LINE="159"/>
    </PROCEDURE>
    <FUNCTION NAME="FUNC_TS_MERGE_CANCEL">
      <COMMENT_FIRST_LINE><![CDATA[This function merges the data in the draft with data available in ms_aud_data_queue on cancellation of draft form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function merges the data in the draft with data available in ms_aud_data_queue on cancellation of draft form.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="172" LINES="4" START_COLUMN="10" START_LINE="169"/>
    </FUNCTION>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[Post hook which updates the max(instance_id) in the base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Post hook which updates the max(instance_id) in the base table.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="53" END_LINE="194" LINES="9" START_COLUMN="11" START_LINE="186"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function gets the header details of draft Issues form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function gets the header details of draft Issues form.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="201" LINES="2" START_COLUMN="10" START_LINE="200"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_DRAFT_TO_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[This procedure
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="LC_OUT_DATA" TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="55" END_LINE="207" LINES="1" START_COLUMN="11" START_LINE="207"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <COMMENT_FIRST_LINE><![CDATA[This procedure is invoked when data correction is performed for closed audits.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This procedure is invoked when data correction is performed for closed audits.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[contain input xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[return updated xml data in clob format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain workflow process code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain source stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[contain destination stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[return error number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[return error sequence number]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[return error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig contain input xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data return updated xml data in clob format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code contain workflow process code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage contain source stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage contain destination stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id return error number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Seq return error sequence number]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Xn_Error_Code return error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="231" LINES="11" START_COLUMN="14" START_LINE="221"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="232" LINES="232" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F010_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_DATA_FROM_TASKS">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="78" LINES="77" START_COLUMN="13" START_LINE="2"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_IN_TRANS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="173" LINES="94" START_COLUMN="13" START_LINE="80"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_MERGE_API">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_WF_FLAG" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="862" LINES="688" START_COLUMN="13" START_LINE="175"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1055" LINES="192" START_COLUMN="13" START_LINE="864"/>
    </PROCEDURE>
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="1179" LINES="123" START_COLUMN="13" START_LINE="1057"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_1">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="1656" LINES="476" START_COLUMN="13" START_LINE="1181"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="1773" LINES="116" START_COLUMN="13" START_LINE="1658"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_FROM_MANAGE_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="2033" LINES="259" START_COLUMN="13" START_LINE="1775"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_FND_ACT_MERGE">
      <ARGUMENT MODE="IN OUT" NAME="LC_OUT_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="LT_INPUT_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2383" LINES="349" START_COLUMN="13" START_LINE="2035"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_REOPEN_STATUS_UPDATE">
      <ARGUMENT MODE="IN" NAME="I_FN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="2425" LINES="41" START_COLUMN="13" START_LINE="2385"/>
    </PROCEDURE>
    <FUNCTION NAME="FUNC_TS_MERGE_CANCEL">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="2493" LINES="67" START_COLUMN="12" START_LINE="2427"/>
    </FUNCTION>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="2550" LINES="56" START_COLUMN="13" START_LINE="2495"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="27" END_LINE="2578" LINES="27" START_COLUMN="12" START_LINE="2552"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_DRAFT_TO_DRAFT">
      <ARGUMENT MODE="IN OUT" NAME="LC_OUT_DATA" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="24" END_LINE="2995" LINES="416" START_COLUMN="11" START_LINE="2580"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="3263" LINES="267" START_COLUMN="14" START_LINE="2997"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="3265" LINES="3265" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F011_HELPER" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: AUD<br>
 Description:This package consists of a list of hook procedures that are used for Export Audit Project Details.<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <FUNCTION NAME="FN_GET_CURRENT_AUDIT_URLS_MOD">
      <COMMENT_FIRST_LINE><![CDATA[This function returns url for any one of the forms Manage Audit, APS, Draft Issues based on the input parameter.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns url for any one of the forms Manage Audit, APS, Draft Issues based on the input parameter.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identificaiton]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[process instance id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id audit identificaiton]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_title audit title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id process instance id]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="26" LINES="8" START_COLUMN="10" START_LINE="19"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ATTACHMENT_COUNT">
      <COMMENT_FIRST_LINE><![CDATA[This function returns the count of all the attachments related to a particular audit across all forms.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns the count of all the attachments related to a particular audit across all forms.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id audit identificaiton]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="35" LINES="4" START_COLUMN="10" START_LINE="32"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ATTACHMENT_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function returns an XML as clob which contains all the attachments (attachment name and id as stored in the database) related to a particular audit across all forms: audit, task, aps, closure, audit report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns an XML as clob which contains all the attachments (attachment name and id as stored in the database) related to a particular audit across all forms: audit, task, aps, closure, audit report.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identificaiton]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id audit identificaiton]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="44" LINES="4" START_COLUMN="10" START_LINE="41"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_VIEW_TASKS_URL">
      <COMMENT_FIRST_LINE><![CDATA[This function returns url for task form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns url for task form.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[login id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id audit identificaiton]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id login id]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="55" LINES="5" START_COLUMN="10" START_LINE="51"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ISSUE_ACTION_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function returns a clob which contains details of all the issues and actions related to the audit in a format that renders as Rich Text in Open office.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns a clob which contains details of all the issues and actions related to the audit in a format that renders as Rich Text in Open office.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="62" LINES="2" START_COLUMN="10" START_LINE="61"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LOV_DISP_VAL">
      <COMMENT_FIRST_LINE><![CDATA[This function returns display value for the given LOV and its stored value.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns display value for the given LOV and its stored value.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STORE_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[stored value]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOV_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[list of values name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_store_val stored value]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_lov_name list of values name]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="70" LINES="2" START_COLUMN="10" START_LINE="69"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OTHER_TASK_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function returns a clob which contains details of all audit tasks related to the audit in a format that renders as Rich Text in Open office.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns a clob which contains details of all audit tasks related to the audit in a format that renders as Rich Text in Open office.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="77" LINES="2" START_COLUMN="10" START_LINE="76"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_CONTROLS_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function returns a clob which contains details of all control test tasks related to the audit in a format that renders as Rich Text in Open office.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns a clob which contains details of all control test tasks related to the audit in a format that renders as Rich Text in Open office.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="84" LINES="2" START_COLUMN="10" START_LINE="83"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CHK_TASK_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[This function returns a clob which contains details of all checklist tasks related to the audit in a format that renders as Rich Text in Open office.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns a clob which contains details of all checklist tasks related to the audit in a format that renders as Rich Text in Open office.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="91" LINES="2" START_COLUMN="10" START_LINE="90"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_STORED_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[: This function returns all control id in comma separated format for the audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[: This function returns all control id in comma separated format for the audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="98" LINES="2" START_COLUMN="10" START_LINE="97"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_DISP_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[This function returns all control display values in comma separated format for the audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns all control display values in comma separated format for the audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="105" LINES="2" START_COLUMN="10" START_LINE="104"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_DISP_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[This function returns all Tests display values in comma separated format for the audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns all Tests display values in comma separated format for the audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="112" LINES="2" START_COLUMN="10" START_LINE="111"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REF_DATA">
      <COMMENT_FIRST_LINE><![CDATA[This function returns the control and test reference in control test task and question reference in checklist task in the audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns the control and test reference in control test task and question reference in checklist task in the audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_REF_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[reference id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_REF_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[reference task id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_KEY_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Key Value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_FN_REF_ID reference id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_FN_REF_TASK_ID reference task id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_AUDIT_ID audit identification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_KEY_VAL Key Value]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="122" LINES="2" START_COLUMN="10" START_LINE="121"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE_NO_SCORING">
      <COMMENT_FIRST_LINE><![CDATA[This function returns response for question in checklist task for no scoring option.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns response for question in checklist task for no scoring option.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_QS_RESPONSE_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qs response type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk qst pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qs_response_type qs response type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="131" LINES="2" START_COLUMN="10" START_LINE="130"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE_ATTR_SCORING">
      <COMMENT_FIRST_LINE><![CDATA[This function returns response for question in checklist task for attribute scoring option.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns response for question in checklist task for attribute scoring option.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_QS_RESPONSE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[audit identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk qst pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qs_response_type qs response type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id audit identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="140" LINES="2" START_COLUMN="10" START_LINE="139"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DMS_ATTACHMENT">
      <COMMENT_FIRST_LINE><![CDATA[This function returns the document that is attached from DMS module for the given document id.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[This function returns the document that is attached from DMS module for the given document id.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_DOC_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[document identification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_doc_id document identification]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="147" LINES="2" START_COLUMN="10" START_LINE="146"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F011_HELPER" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_CURRENT_AUDIT_URLS_MOD">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="133" LINES="131" START_COLUMN="10" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ATTACHMENT_DETAILS">
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="30" END_LINE="238" LINES="105" START_COLUMN="10" START_LINE="134"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ATTACHMENT_COUNT">
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="354" LINES="116" START_COLUMN="10" START_LINE="239"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_VIEW_TASKS_URL">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="368" LINES="14" START_COLUMN="10" START_LINE="355"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ISSUE_ACTION_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="32" END_LINE="516" LINES="147" START_COLUMN="10" START_LINE="370"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LOV_DISP_VAL">
      <ARGUMENT MODE="IN" NAME="I_STORE_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOV_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="553" LINES="36" START_COLUMN="10" START_LINE="518"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OTHER_TASK_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="30" END_LINE="669" LINES="115" START_COLUMN="10" START_LINE="555"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_CONTROLS_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="33" END_LINE="851" LINES="181" START_COLUMN="10" START_LINE="671"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CHK_TASK_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="28" END_LINE="1213" LINES="361" START_COLUMN="10" START_LINE="853"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_STORED_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="1270" LINES="56" START_COLUMN="10" START_LINE="1215"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_DISP_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1327" LINES="56" START_COLUMN="10" START_LINE="1272"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_DISP_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="1372" LINES="44" START_COLUMN="10" START_LINE="1329"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REF_DATA">
      <ARGUMENT MODE="IN" NAME="I_FN_REF_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FN_REF_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_KEY_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1407" LINES="34" START_COLUMN="10" START_LINE="1374"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE_NO_SCORING">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_QS_RESPONSE_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="1457" LINES="49" START_COLUMN="10" START_LINE="1409"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE_ATTR_SCORING">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_QS_RESPONSE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="1479" LINES="21" START_COLUMN="10" START_LINE="1459"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DMS_ATTACHMENT">
      <ARGUMENT MODE="IN" NAME="I_DOC_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="1497" LINES="17" START_COLUMN="10" START_LINE="1481"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="1499" LINES="1499" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F012_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="S110_S111_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S112_A005">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S110_A025">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S110_A003">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S111_DC">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F012_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="S110_S111_A002">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S112_A005">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S110_A025">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S110_A003">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S111_DC">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F012_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="S110_S112_UPLOAD">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="52" LINES="52" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F012_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="S110_S112_UPLOAD">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="1253" LINES="1253" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F012_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F012_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="1767" LINES="1757" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="1770" LINES="1770" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F012_HELPER" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F012_HELPER<br/>
 Description: This package consists of a list of hook procedures that are<br/>
used in Audit Plan-Scope flow<br/>
 ======================================================================<br/>
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F012_HELPER<br/>
 Description: This package consists of a list of hook procedures that are<br/>
used in Audit Plan-Scope flow<br/>
 ======================================================================<br/>
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="S110_S111_A002">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Send For Approval action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Send For Approval action.
 This is invoked in S110_S111_A002 transition from S110 to S111 stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="35" LINES="11" START_COLUMN="14" START_LINE="25"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S112_A005">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is deprecated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is deprecated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="50" LINES="11" START_COLUMN="14" START_LINE="40"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S110_A025">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Update Audit Plan-Scope action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Update Audit Plan-Scope action.
 This is invoked in S110_S110_A025 self-transition from S110 to S110 stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="75" LINES="11" START_COLUMN="14" START_LINE="65"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S110_A003">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Approve action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Approve action.
 This is invoked in S111_S110_A003 transition from S111 to S110 stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="100" LINES="11" START_COLUMN="14" START_LINE="90"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S110_A004">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Request Clarification action.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form with Request Clarification action.
 This is invoked in s111_s110_a003 procedure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="125" LINES="11" START_COLUMN="14" START_LINE="115"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to get Auditable Entity, Related Risks and Organizations values based on
 Scope Based On field from Audit form and to display these data in Audit Plan-Scope form in the
 form of tree hierarchy.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to get Auditable Entity, Related Risks and Organizations values based on
 Scope Based On field from Audit form and to display these data in Audit Plan-Scope form in the
 form of tree hierarchy. It is also used to get the controls and tests related to the risks from
 GRC library if Auto_Populate_Related_Controls_And_Tests parameter is set to Y.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="142" LINES="6" START_COLUMN="14" START_LINE="137"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_TO_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to update the approved scope details from APS to Audit form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to update the approved scope details from APS to Audit form.
 GRC library if Auto_Populate_Related_Controls_And_Tests parameter is set to Y.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="157" LINES="6" START_COLUMN="14" START_LINE="152"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_PID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_PLAN_SCOPE_V and
 update it in the MS_AUD_PLAN_SCOPE base table.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This post hook procedure is used to retrieve the max instance_id from MS_AUD_PLAN_SCOPE_V and
 update it in the MS_AUD_PLAN_SCOPE base table.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_orig_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="180" LINES="10" START_COLUMN="13" START_LINE="171"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ This function is used to get the header details from Audit form
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function is used to get the header details from Audit form
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns header details for an audit_id as a CLOB datatype]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns header details for an audit_id as a CLOB datatype]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="188" LINES="2" START_COLUMN="12" START_LINE="187"/>
    </FUNCTION>
    <PROCEDURE NAME="S110_S110_RG_2">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form from Re-open Audits report for data correction.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the Audit Plan-Scope form from Re-open Audits report for data correction.
 This is invoked in s110_s110_a025 procedure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="213" LINES="11" START_COLUMN="14" START_LINE="203"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S112_UPLOAD">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on uploading Audit Plan-Scope data.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on uploading Audit Plan-Scope data.
 This is invoked in S110_S112_UPLOAD transition from S110 to S112 stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="238" LINES="11" START_COLUMN="15" START_LINE="228"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="241" LINES="241" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F012_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="898" LINES="896" START_COLUMN="12" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_PROCESS_DATA_TO_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="1523" LINES="624" START_COLUMN="12" START_LINE="900"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1753" LINES="229" START_COLUMN="12" START_LINE="1525"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S111_A002">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="1888" LINES="134" START_COLUMN="11" START_LINE="1755"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S112_A005">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="1926" LINES="38" START_COLUMN="11" START_LINE="1889"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S110_A025">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="2101" LINES="174" START_COLUMN="11" START_LINE="1928"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S110_A003">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="2357" LINES="255" START_COLUMN="11" START_LINE="2103"/>
    </PROCEDURE>
    <PROCEDURE NAME="S111_S110_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="2479" LINES="122" START_COLUMN="11" START_LINE="2358"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_PID_UPDATE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="2559" LINES="79" START_COLUMN="11" START_LINE="2481"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="27" END_LINE="2587" LINES="27" START_COLUMN="10" START_LINE="2561"/>
    </FUNCTION>
    <PROCEDURE NAME="S110_S110_RG_2">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2719" LINES="131" START_COLUMN="11" START_LINE="2589"/>
    </PROCEDURE>
    <PROCEDURE NAME="S110_S112_UPLOAD">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3502" LINES="782" START_COLUMN="13" START_LINE="2721"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="3506" LINES="3506" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F013_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AC_S120_S121_A028">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S122_A029">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S123_A030">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S123_A003">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S122_S123_A028">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F013_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AC_S120_S121_A028">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S122_A029">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S123_A030">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S123_A003">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S122_S123_A028">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F013_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AC_S122_S120_A031">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S120_A001">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S120_A004">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S123_S123_A030">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S123_S121_A028">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F013_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AC_S122_S120_A031">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S120_A001">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S120_A004">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S123_S123_A030">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S123_S121_A028">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F013_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AC_S123_S122_A029">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="52" LINES="52" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F013_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="AC_S123_S122_A029">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="1253" LINES="1253" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F013_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F013_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="2267" LINES="2257" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="2270" LINES="2270" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F013_HELPER" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F013_HELPER<br/>
 Description: This package contains all the transition procedures and other
procedures and functions related to Audit Closure flow<br/>
 ======================================================================<br/>
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F013_HELPER<br/>
 Description: This package contains all the transition procedures and other
procedures and functions related to Audit Closure flow<br/>
 ======================================================================<br/>
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <FUNCTION NAME="FN_LOAD_AUDIT_CLOSURE">
      <COMMENT_FIRST_LINE><![CDATA[ This function invokes the audit closure flow when user publishes the final report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function invokes the audit closure flow when user publishes the final report.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Audit Closure forms Infolet ID and Process Instance ID as a concatenated VARCHAR2 datatype]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Audit Closure forms Infolet ID and Process Instance ID as a concatenated VARCHAR2 datatype]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="18" LINES="2" START_COLUMN="13" START_LINE="17"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure gets the data from manage audit to audit closure.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure gets the data from manage audit to audit closure.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LC_O_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[holds the newly generated Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_o_pid holds the newly generated Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="34" LINES="7" START_COLUMN="14" START_LINE="28"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S121_A028">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user closes the audit i.e when Close Audit action is selected
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user closes the audit i.e when Close Audit action is selected
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="58" LINES="11" START_COLUMN="14" START_LINE="48"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S122_A029">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does follow-up audit i.e when Follow Up action is selected
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does follow-up audit i.e when Follow Up action is selected
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="82" LINES="11" START_COLUMN="14" START_LINE="72"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S123_A030">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does Re-audit i.e when Re-audit action is selected
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does Re-audit i.e when Re-audit action is selected
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="106" LINES="11" START_COLUMN="14" START_LINE="96"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S123_A003">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user approves the closure when the form is in pending approval stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user approves the closure when the form is in pending approval stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="130" LINES="11" START_COLUMN="14" START_LINE="120"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S122_S123_A028">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user closes the audit from follow up stage i.e Follow Up Stage to Close Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user closes the audit from follow up stage i.e Follow Up Stage to Close Audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="154" LINES="11" START_COLUMN="14" START_LINE="144"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S120_A004">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does request clarification in pending approval stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does request clarification in pending approval stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="178" LINES="11" START_COLUMN="14" START_LINE="168"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S122_S120_A031">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does submit for review in follow-up stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does submit for review in follow-up stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="202" LINES="11" START_COLUMN="14" START_LINE="192"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S120_A001">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does a save-and-continue at the initial stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does a save-and-continue at the initial stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="226" LINES="11" START_COLUMN="14" START_LINE="216"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_CLOSE_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does Close Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does Close Audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="250" LINES="11" START_COLUMN="14" START_LINE="240"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_RE_AUDIT_CREATION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when user does Re-Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when user does Re-Audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="264" LINES="6" START_COLUMN="16" START_LINE="259"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AE_AUDIT_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked to insert data into ms_aud_ae_audit_dates (Auditable entity information)
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked to insert data into ms_aud_ae_audit_dates (Auditable entity information)
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="276" LINES="5" START_COLUMN="14" START_LINE="272"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="277" LINES="277" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F013_HELPER" SCHEMA="Schema_objects">
    <VARIABLE NAME="LC_RSM_INTEGRATED_WITH_AUDITS">
      <RETURN TYPE="VARCHAR2(1)"/>
    </VARIABLE>
    <FUNCTION NAME="FN_LOAD_AUDIT_CLOSURE">
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="60" LINES="57" START_COLUMN="13" START_LINE="4"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_PROCESS_DATA_FROM_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LC_O_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="511" LINES="450" START_COLUMN="14" START_LINE="62"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_RE_AUDIT_CREATION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="892" LINES="380" START_COLUMN="14" START_LINE="513"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S121_A028">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1020" LINES="127" START_COLUMN="14" START_LINE="894"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S122_A029">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1149" LINES="128" START_COLUMN="14" START_LINE="1022"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S123_A030">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1403" LINES="253" START_COLUMN="14" START_LINE="1151"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_CLOSE_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1571" LINES="167" START_COLUMN="14" START_LINE="1405"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S123_A003">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1717" LINES="145" START_COLUMN="14" START_LINE="1573"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S122_S123_A028">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1847" LINES="129" START_COLUMN="14" START_LINE="1719"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S121_S120_A004">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1958" LINES="110" START_COLUMN="14" START_LINE="1849"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S122_S120_A031">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2057" LINES="98" START_COLUMN="14" START_LINE="1960"/>
    </PROCEDURE>
    <PROCEDURE NAME="AC_S120_S120_A001">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2145" LINES="87" START_COLUMN="14" START_LINE="2059"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AE_AUDIT_DATE">
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="7" END_LINE="2286" LINES="141" START_COLUMN="14" START_LINE="2146"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="2287" LINES="2287" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F014_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_4">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_5">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_6">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F014_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_1">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_2">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_4">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_5">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_6">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F014_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_8">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_12">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F014_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_8">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_12">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F014_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_501">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_502">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F014_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_13">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_501">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_502">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F014_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F014_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="2667" LINES="2657" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="2670" LINES="2670" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F014_HELPER" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F014_HELPER<br/>
 Description: Package being used for Auditable Entity related tasks <br/>
 ======================================================================<br/>
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F014_HELPER<br/>
 Description: Package being used for Auditable Entity related tasks <br/>
 ======================================================================<br/>
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'http://www.metricstream.com/appstudio/msa'" NAME="GC_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="UPDATE_OUT_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked when to update the auditable entity in all stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked when to update the auditable entity in all stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="68" END_LINE="35" LINES="9" START_COLUMN="14" START_LINE="27"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_AE_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is invoked while reopening of auditable entity and set status
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is invoked while reopening of auditable entity and set status
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error message]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_message XML error message]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="6" END_LINE="47" LINES="5" START_COLUMN="15" START_LINE="43"/>
    </PROCEDURE>
    <CONSTANT DEFAULT="'MS_GRC_HELPER'" NAME="GC_PACKAGE_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="23" END_LINE="51" LINES="51" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F014_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_OUT_DATA">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="1002" LINES="1000" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPD_AE_STATUS">
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="1071" LINES="68" START_COLUMN="11" START_LINE="1004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="1073" LINES="1073" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="START_TO_END">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_5">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_6">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_7">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_1_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="START_TO_END">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_5">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_6">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_7">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S150_S150_A010">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_2_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S150_S150_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_15">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_17">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_22">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_3_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_15">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_17">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_22">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_4_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_23">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_RT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CA">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="115" LINES="22" START_COLUMN="15" START_LINE="94"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="139" LINES="22" START_COLUMN="15" START_LINE="118"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="148" LINES="148" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_4_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="TRANSITION_23">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_RT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_AT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="4993" LINES="1238" START_COLUMN="15" START_LINE="3756"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_CT">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="6241" LINES="1238" START_COLUMN="15" START_LINE="5004"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="6245" LINES="6245" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_5_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="REV_QUE_TRANS_FA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="43" LINES="22" START_COLUMN="15" START_LINE="22"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_EF">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="67" LINES="22" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S154_S150_A010">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="91" LINES="22" START_COLUMN="15" START_LINE="70"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="22" END_LINE="100" LINES="100" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_5_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="REV_QUE_TRANS_FA">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="1249" LINES="1238" START_COLUMN="15" START_LINE="12"/>
    </PROCEDURE>
    <PROCEDURE NAME="REV_QUE_TRANS_EF">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="2497" LINES="1238" START_COLUMN="15" START_LINE="1260"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S154_S150_A010">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_FLOW_VERSION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PT_PID" TYPE="MS_APPS_MDF_ENGINE_PKG.DATAPACKET_TABLE"/>
      <ARGUMENT MODE="IN" NAME="PN_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ORIG_TARGET_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="XT_PARAMETERS" TYPE="MS_APPS_MDF_ENGINE_PKG.PARAMETER_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_RULES" TYPE="MS_APPS_MDF_ENGINE_PKG.RULE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="XT_ASSIGNEES" TYPE="MS_APPS_MDF_ENGINE_PKG.ASSIGNEE_LOOKUP_TABLETYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TEMPLATES" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_STAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TOSTAGE" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PX_TRANSITION_PROCESS" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="PN_ENTERPRISE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XB_TRANSITION_STATUS" TYPE="BOOLEAN"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="3745" LINES="1238" START_COLUMN="15" START_LINE="2508"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="22" END_LINE="3749" LINES="3749" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="26" LINES="8" START_COLUMN="15" START_LINE="19"/>
    </PROCEDURE>
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/mdf&quot;'" NAME="GC_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="28" END_LINE="33" LINES="33" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_CONTROL_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MAKE_TRANSITION">
      <COMMENT_FIRST_LINE><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[--------------------------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_MAX_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="3467" LINES="3457" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="3470" LINES="3470" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F016_HELPER" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F016_HELPER<br/>
 Description: This package consists of list of hooks procedure used in
Control Test Task form<br/>
 ======================================================================<br/>
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F016_HELPER<br/>
 Description: This package consists of list of hooks procedure used in
Control Test Task form<br/>
 ======================================================================<br/>
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="START_TO_END">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage stage to End Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage stage to End Task stage.
 This procedure is invoked when the task completed in the first stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="36" LINES="11" START_COLUMN="14" START_LINE="26"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_5">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Review Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Review Task stage.
 This procedure is invoked when a task is sent for review.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="61" LINES="11" START_COLUMN="14" START_LINE="51"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_6">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Approve Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Approve Task stage.
 This procedure is invoked when a task is sent for approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="86" LINES="11" START_COLUMN="14" START_LINE="76"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_7">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Cancel Task stage.
 This procedure is invoked when a task is cancelled in the initial stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="111" LINES="11" START_COLUMN="14" START_LINE="101"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Approve cancellation of task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Checklist start stage to Approve cancellation of task stage.
 This procedure is invoked when task is cancelled and initiator and owner are different.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="136" LINES="11" START_COLUMN="14" START_LINE="126"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from ApproveTask stage to Final approve stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from ApproveTask stage to Final approve stage.
 This procedure is invoked when approver sends task for final approval.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="161" LINES="11" START_COLUMN="14" START_LINE="151"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to End Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to End Task stage.
 This procedure is invoked when Task is completed in pending approval stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="186" LINES="11" START_COLUMN="14" START_LINE="176"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Cancel Approve  stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Cancel Approve  stage to Cancel Task stage.
 This procedure is invoked when cancellation of task is approved.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="211" LINES="11" START_COLUMN="14" START_LINE="201"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S150_S150_A010">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Checklist start date stage to Checklist task start stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Checklist start date stage to Checklist task start stage.
 This procedure is invoked when task is updated.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="236" LINES="11" START_COLUMN="14" START_LINE="226"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Review Task stage to Checklist task start stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Review Task stage to Checklist task start stage.
 This procedure is invoked when task is reviewed
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="261" LINES="11" START_COLUMN="14" START_LINE="251"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_15">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Checklist task start stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Checklist task start stage.
 This procedure is invoked when final approver requests for clarification in pending approval stage.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="286" LINES="11" START_COLUMN="14" START_LINE="276"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to End task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to End task stage.
 This procedure is invoked when final approver completes the task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="311" LINES="11" START_COLUMN="14" START_LINE="301"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_17">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Checklist task start stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Checklist task start stage.
 This procedure is invoked when task approver sends the assignment requesting for clarification.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="336" LINES="11" START_COLUMN="14" START_LINE="326"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Cancel Approve stage to Checklist task start stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Cancel Approve stage to Checklist task start stage.
 This procedure is invoked when task is sent for clarification in pending approval of cancellation of task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="361" LINES="11" START_COLUMN="14" START_LINE="351"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_19">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a procedure in transition procedure chk_s150_s150_a010
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a procedure in transition procedure chk_s150_s150_a010
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="385" LINES="11" START_COLUMN="14" START_LINE="375"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_20">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a procedure in transition procedure transition_17
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a procedure in transition procedure transition_17
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="409" LINES="11" START_COLUMN="14" START_LINE="399"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_21">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a procedure in transition procedure transition_15
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a procedure in transition procedure transition_15
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="433" LINES="11" START_COLUMN="14" START_LINE="423"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_22">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Final Approver stage to Cancel Task stage.
 This procedure is invoked when final approver cancels task.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="458" LINES="11" START_COLUMN="14" START_LINE="448"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_23">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Cancel Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from Approve Task stage to Cancel Task stage.
 This procedure is invoked when approver cancels task
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="483" LINES="11" START_COLUMN="14" START_LINE="473"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_SAVE_AND_CONTINUE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure self transition called in the following stages of Audit Task workflow:
 Cancel Task,Review Task,Approve Task,End Stage,Final Approval Stage,Cancel Final Approval
 This procedure is invoked when task is updated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure self transition called in the following stages of Audit Task workflow:
 Cancel Task,Review Task,Approve Task,End Stage,Final Approval Stage,Cancel Final Approval
 This procedure is invoked when task is updated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="509" LINES="11" START_COLUMN="11" START_LINE="499"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S154_S150_A010">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is a hook procedure transition call from End Task stage to Checklist start Task stage.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is a hook procedure transition call from End Task stage to Checklist start Task stage.
 This procedure is invoked when task is re-opened
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_out_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="534" LINES="11" START_COLUMN="12" START_LINE="524"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is post hook procedure during transitions for updation of instance id in base table
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is post hook procedure during transitions for updation of instance id in base table
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_orig_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="556" LINES="10" START_COLUMN="11" START_LINE="547"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_HEADER_DETAILS_UPDATES">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is post hook procedure to update the header details
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is post hook procedure to update the header details
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="I_IN_DATA" TYPE="XMLTYPE">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="66" END_LINE="562" LINES="1" START_COLUMN="11" START_LINE="562"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is post hook procedure called during data correction process
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is post hook procedure called during data correction process
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_orig_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="585" LINES="11" START_COLUMN="11" START_LINE="575"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="587" LINES="587" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F016_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="ASSIGN_SCOPE_BASED_FIELD">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="149" LINES="147" START_COLUMN="11" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_KEY_GENERATION">
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="497" LINES="348" START_COLUMN="11" START_LINE="150"/>
    </PROCEDURE>
    <PROCEDURE NAME="START_TO_END">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="743" LINES="245" START_COLUMN="11" START_LINE="499"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_5">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="936" LINES="192" START_COLUMN="14" START_LINE="745"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_6">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1182" LINES="245" START_COLUMN="14" START_LINE="938"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_7">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1386" LINES="203" START_COLUMN="14" START_LINE="1184"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_8">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1603" LINES="216" START_COLUMN="14" START_LINE="1388"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_9">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="1794" LINES="190" START_COLUMN="14" START_LINE="1605"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_10">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2044" LINES="249" START_COLUMN="14" START_LINE="1796"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_11">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2248" LINES="203" START_COLUMN="14" START_LINE="2046"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S150_S150_A010">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2692" LINES="443" START_COLUMN="14" START_LINE="2250"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_14">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2895" LINES="202" START_COLUMN="14" START_LINE="2694"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_15">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3136" LINES="240" START_COLUMN="14" START_LINE="2897"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_16">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3376" LINES="239" START_COLUMN="14" START_LINE="3138"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_17">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3618" LINES="241" START_COLUMN="14" START_LINE="3378"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_18">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="3823" LINES="204" START_COLUMN="14" START_LINE="3620"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_19">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4039" LINES="215" START_COLUMN="14" START_LINE="3825"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_20">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4244" LINES="204" START_COLUMN="14" START_LINE="4041"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_21">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4448" LINES="203" START_COLUMN="14" START_LINE="4246"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_22">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4653" LINES="204" START_COLUMN="14" START_LINE="4450"/>
    </PROCEDURE>
    <PROCEDURE NAME="TRANSITION_23">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="4857" LINES="203" START_COLUMN="14" START_LINE="4655"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_SAVE_AND_CONTINUE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="5029" LINES="171" START_COLUMN="11" START_LINE="4859"/>
    </PROCEDURE>
    <PROCEDURE NAME="CHK_S154_S150_A010">
      <COMMENT_FIRST_LINE><![CDATA[Added for re-opening of work papers start
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for re-opening of work papers start
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="5335" LINES="303" START_COLUMN="12" START_LINE="5033"/>
    </PROCEDURE>
    <PROCEDURE NAME="POST_HOOK_INST_ID_UPDATE">
      <COMMENT_FIRST_LINE><![CDATA[Added for re-opening of work papers End
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for re-opening of work papers End
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="5393" LINES="54" START_COLUMN="11" START_LINE="5340"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_HEADER_DETAILS_UPDATES">
      <COMMENT_FIRST_LINE><![CDATA[function fn_get_chklst_tsk_details (i_process_instance_id in varchar2)
return clob
is
x_clob                    clob  := '12345';
x_chklst_tsk              varchar2(100);
x_task_owner              varchar2(4000);
x_lead_auditor            varchar2(4000);
x_lead_auditor_mlov       varchar2(4000);
x_audit_manager           varchar2(4000);
x_audit_manager_mlov      varchar2(4000);
x_approver                varchar2(4000);
x_final_approver          varchar2(4000);
x_conducted_by_org        varchar2(4000);
x_organizations           varchar2(4000);
x_tmp_organizations       varchar2(4000);
x_risks                   varchar2(4000);
x_tmp_risks               varchar2(4000);
x_ae                      varchar2(4000);
x_tmp_ae                  varchar2(4000);
x_audit_status            varchar2(4000);
x_purpose                 varchar2(4000);
x_error_handle_id         number;
x_error_sequence          number;
begin
   begin
select ms_apps_utilities.get_user_full_name(task_owner),
nvl(ms_apps_utilities.get_user_full_name(lead_auditor), 'NA'),
nvl(ms_aud_utilities.fn_get_mlov_lead_aud_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','lead_auditor_mlov','ms_aud_audit_alm')), 'NA'),
nvl(ms_apps_utilities.get_user_full_name(audit_manager), 'NA'),
nvl(ms_aud_utilities.fn_get_mlov_aud_man_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','audit_manager_mlov','ms_aud_audit_amm')), 'NA'),
ms_apps_utilities.get_user_full_name(approver),
ms_apps_utilities.get_user_full_name(final_approver)
into x_task_owner, x_lead_auditor, x_lead_auditor_mlov, x_audit_manager, x_audit_manager_mlov, x_approver, x_final_approver
from ms_aud_audit_task where audit_id = i_audit_id and task_id = i_task_id;
exception
when no_data_found then
x_task_owner := 'NA';
x_lead_auditor := 'NA';
x_lead_auditor_mlov := 'NA';
x_audit_manager := 'NA';
x_audit_manager_mlov := 'NA';
x_approver := 'NA';
x_final_approver := 'NA';
end;
begin
select ms_aud_utilities.fn_get_org_display_value(conducted_by_org),
ms_aud_utilities.fn_get_org_disp_val_rpt(decode(scope_based_on,1,tmp_organizations,manage_organizations)),
ms_aud_utilities.fn_get_risk_disp_val_rpt(decode(scope_based_on,1,tmp_related_risks,related_risks)),
ms_aud_utilities.fn_get_core_disp_val_rpt(decode(scope_based_on,1,tmp_core_objects,core_objects)),
ms_aud_utilities.fn_get_status_display_name(audit_status),
purpose
into x_conducted_by_org, x_organizations, x_risks, x_ae, x_audit_status, x_purpose
from ms_aud_manage_audit_v where audit_id = i_audit_id and rownum = 1;
exception
when no_data_found then
x_conducted_by_org := 'NA';
x_organizations := 'NA';
x_risks := 'NA';
x_ae := 'NA';
x_audit_status := 'NA';
x_purpose := 'NA';
end;
begin
select checklist_id into x_chklst_tsk
from ms_aud_checklist_task where task_id = i_task_id;
exception
when no_data_found then
x_chklst_tsk := null;
end;
begin
select ms_apps_utilities.get_user_full_name(task_owner),
ms_apps_utilities.get_user_full_name(lead_auditor),
nvl(ms_aud_utilities.fn_get_mlov_lead_aud_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','lead_auditor_mlov','ms_aud_audit_alm')), 'NA'),
ms_apps_utilities.get_user_full_name(audit_manager),
nvl(ms_aud_utilities.fn_get_mlov_aud_man_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','audit_manager_mlov','ms_aud_audit_amm')), 'NA'),
ms_apps_utilities.get_user_full_name(approver),
ms_apps_utilities.get_user_full_name(final_approver),
ms_aud_utilities.fn_get_org_display_value(conducted_by),
ms_aud_utilities.fn_get_org_disp_val_rpt(organizations),
ms_aud_utilities.fn_get_org_disp_val_rpt(organizations),
ms_aud_utilities.fn_get_risk_disp_val_rpt(related_risks),
ms_aud_utilities.fn_get_risk_disp_val_rpt(tmp_related_risks),
ms_aud_utilities.fn_get_core_disp_val_rpt(core_objects),
ms_aud_utilities.fn_get_core_disp_val_rpt(tmp_core_objects),
ms_aud_utilities.fn_get_status_display_name(status),
sec_sec_checklist_id
into x_task_owner, x_lead_auditor, x_lead_auditor_mlov, x_audit_manager, x_audit_manager_mlov, x_approver, x_final_approver,
x_conducted_by_org, x_organizations, x_tmp_organizations, x_risks, x_tmp_risks, x_ae, x_tmp_ae, x_audit_status, x_chklst_tsk
from ms_aud_checklist_task_v
where process_instance_id = to_number(i_process_instance_id)
and instance_id = (select max(instance_id) from ms_aud_checklist_task_v where process_instance_id = to_number(i_process_instance_id))
and rownum =1;
exception
when no_data_found then
x_task_owner := 'NA';
x_lead_auditor := 'NA';
x_lead_auditor_mlov := 'NA';
x_audit_manager := 'NA';
x_audit_manager_mlov := 'NA';
x_approver := 'NA';
x_final_approver := 'NA';
x_conducted_by_org := 'NA';
x_organizations := 'NA';
x_tmp_organizations := 'NA';
x_risks := 'NA';
x_tmp_risks := 'NA';
x_ae := 'NA';
x_tmp_ae := 'NA';
x_audit_status := 'NA';
end;
dbms_lob.write(x_clob, length(nvl(x_task_owner,'NA')) + 1, 1, nvl(x_task_owner,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_lead_auditor,'NA')) + 1, nvl(x_lead_auditor,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_lead_auditor_mlov,'NA')) + 1, nvl(x_lead_auditor_mlov,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_audit_manager,'NA')) + 1, nvl(x_audit_manager,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_audit_manager_mlov,'NA')) + 1, nvl(x_audit_manager_mlov,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_approver,'NA')) + 1, nvl(x_approver,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_final_approver,'NA')) + 1, nvl(x_final_approver,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_conducted_by_org,'NA')) + 1, nvl(x_conducted_by_org,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_organizations,'NA')) + 1, nvl(x_organizations,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_tmp_organizations,'NA')) + 1, nvl(x_tmp_organizations,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_risks,'NA')) + 1, nvl(x_risks,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_tmp_risks,'NA')) + 1, nvl(x_tmp_risks,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_ae,'NA')) + 1, nvl(x_ae,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_tmp_ae,'NA')) + 1, nvl(x_tmp_ae,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_audit_status,'NA')) + 1, nvl(x_audit_status,'NA') || ';');
for rec_sec in (select sec_section_name from ms_chk_section_sec where sec_checklist_id = x_chklst_tsk) -- 13
loop
dbms_lob.writeappend(x_clob, length(nvl(rec_sec.sec_section_name,'NA')) + 1, REGEXP_REPLACE(REGEXP_REPLACE(nvl(rec_sec.sec_section_name,'NA'),'''','\'''), '"','\"') || ',');
end loop;
return x_clob;
exception
WHEN OTHERS
then
ms_apps_mdf_errors_pkg.insert_log (pn_error_handle_id      =&gt; x_error_handle_id,
pn_error_sequence       =&gt; x_error_sequence,
pc_error_type           =&gt; 'ERROR',
pc_error_text           =&gt; 'AUD' || ':' || substr (sqlerrm, 1, 3500) || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
);
RAISE;
END;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[function fn_get_chklst_tsk_details (i_process_instance_id in varchar2)
return clob
is
x_clob                    clob  := '12345';
x_chklst_tsk              varchar2(100);
x_task_owner              varchar2(4000);
x_lead_auditor            varchar2(4000);
x_lead_auditor_mlov       varchar2(4000);
x_audit_manager           varchar2(4000);
x_audit_manager_mlov      varchar2(4000);
x_approver                varchar2(4000);
x_final_approver          varchar2(4000);
x_conducted_by_org        varchar2(4000);
x_organizations           varchar2(4000);
x_tmp_organizations       varchar2(4000);
x_risks                   varchar2(4000);
x_tmp_risks               varchar2(4000);
x_ae                      varchar2(4000);
x_tmp_ae                  varchar2(4000);
x_audit_status            varchar2(4000);
x_purpose                 varchar2(4000);
x_error_handle_id         number;
x_error_sequence          number;
begin
   begin
select ms_apps_utilities.get_user_full_name(task_owner),
nvl(ms_apps_utilities.get_user_full_name(lead_auditor), 'NA'),
nvl(ms_aud_utilities.fn_get_mlov_lead_aud_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','lead_auditor_mlov','ms_aud_audit_alm')), 'NA'),
nvl(ms_apps_utilities.get_user_full_name(audit_manager), 'NA'),
nvl(ms_aud_utilities.fn_get_mlov_aud_man_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','audit_manager_mlov','ms_aud_audit_amm')), 'NA'),
ms_apps_utilities.get_user_full_name(approver),
ms_apps_utilities.get_user_full_name(final_approver)
into x_task_owner, x_lead_auditor, x_lead_auditor_mlov, x_audit_manager, x_audit_manager_mlov, x_approver, x_final_approver
from ms_aud_audit_task where audit_id = i_audit_id and task_id = i_task_id;
exception
when no_data_found then
x_task_owner := 'NA';
x_lead_auditor := 'NA';
x_lead_auditor_mlov := 'NA';
x_audit_manager := 'NA';
x_audit_manager_mlov := 'NA';
x_approver := 'NA';
x_final_approver := 'NA';
end;
begin
select ms_aud_utilities.fn_get_org_display_value(conducted_by_org),
ms_aud_utilities.fn_get_org_disp_val_rpt(decode(scope_based_on,1,tmp_organizations,manage_organizations)),
ms_aud_utilities.fn_get_risk_disp_val_rpt(decode(scope_based_on,1,tmp_related_risks,related_risks)),
ms_aud_utilities.fn_get_core_disp_val_rpt(decode(scope_based_on,1,tmp_core_objects,core_objects)),
ms_aud_utilities.fn_get_status_display_name(audit_status),
purpose
into x_conducted_by_org, x_organizations, x_risks, x_ae, x_audit_status, x_purpose
from ms_aud_manage_audit_v where audit_id = i_audit_id and rownum = 1;
exception
when no_data_found then
x_conducted_by_org := 'NA';
x_organizations := 'NA';
x_risks := 'NA';
x_ae := 'NA';
x_audit_status := 'NA';
x_purpose := 'NA';
end;
begin
select checklist_id into x_chklst_tsk
from ms_aud_checklist_task where task_id = i_task_id;
exception
when no_data_found then
x_chklst_tsk := null;
end;
begin
select ms_apps_utilities.get_user_full_name(task_owner),
ms_apps_utilities.get_user_full_name(lead_auditor),
nvl(ms_aud_utilities.fn_get_mlov_lead_aud_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','lead_auditor_mlov','ms_aud_audit_alm')), 'NA'),
ms_apps_utilities.get_user_full_name(audit_manager),
nvl(ms_aud_utilities.fn_get_mlov_aud_man_disp(ms_aud_utilities.mlov_values (audit_id,'audit_id','audit_manager_mlov','ms_aud_audit_amm')), 'NA'),
ms_apps_utilities.get_user_full_name(approver),
ms_apps_utilities.get_user_full_name(final_approver),
ms_aud_utilities.fn_get_org_display_value(conducted_by),
ms_aud_utilities.fn_get_org_disp_val_rpt(organizations),
ms_aud_utilities.fn_get_org_disp_val_rpt(organizations),
ms_aud_utilities.fn_get_risk_disp_val_rpt(related_risks),
ms_aud_utilities.fn_get_risk_disp_val_rpt(tmp_related_risks),
ms_aud_utilities.fn_get_core_disp_val_rpt(core_objects),
ms_aud_utilities.fn_get_core_disp_val_rpt(tmp_core_objects),
ms_aud_utilities.fn_get_status_display_name(status),
sec_sec_checklist_id
into x_task_owner, x_lead_auditor, x_lead_auditor_mlov, x_audit_manager, x_audit_manager_mlov, x_approver, x_final_approver,
x_conducted_by_org, x_organizations, x_tmp_organizations, x_risks, x_tmp_risks, x_ae, x_tmp_ae, x_audit_status, x_chklst_tsk
from ms_aud_checklist_task_v
where process_instance_id = to_number(i_process_instance_id)
and instance_id = (select max(instance_id) from ms_aud_checklist_task_v where process_instance_id = to_number(i_process_instance_id))
and rownum =1;
exception
when no_data_found then
x_task_owner := 'NA';
x_lead_auditor := 'NA';
x_lead_auditor_mlov := 'NA';
x_audit_manager := 'NA';
x_audit_manager_mlov := 'NA';
x_approver := 'NA';
x_final_approver := 'NA';
x_conducted_by_org := 'NA';
x_organizations := 'NA';
x_tmp_organizations := 'NA';
x_risks := 'NA';
x_tmp_risks := 'NA';
x_ae := 'NA';
x_tmp_ae := 'NA';
x_audit_status := 'NA';
end;
dbms_lob.write(x_clob, length(nvl(x_task_owner,'NA')) + 1, 1, nvl(x_task_owner,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_lead_auditor,'NA')) + 1, nvl(x_lead_auditor,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_lead_auditor_mlov,'NA')) + 1, nvl(x_lead_auditor_mlov,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_audit_manager,'NA')) + 1, nvl(x_audit_manager,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_audit_manager_mlov,'NA')) + 1, nvl(x_audit_manager_mlov,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_approver,'NA')) + 1, nvl(x_approver,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_final_approver,'NA')) + 1, nvl(x_final_approver,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_conducted_by_org,'NA')) + 1, nvl(x_conducted_by_org,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_organizations,'NA')) + 1, nvl(x_organizations,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_tmp_organizations,'NA')) + 1, nvl(x_tmp_organizations,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_risks,'NA')) + 1, nvl(x_risks,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_tmp_risks,'NA')) + 1, nvl(x_tmp_risks,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_ae,'NA')) + 1, nvl(x_ae,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_tmp_ae,'NA')) + 1, nvl(x_tmp_ae,'NA') || ';');
dbms_lob.writeappend(x_clob, length(nvl(x_audit_status,'NA')) + 1, nvl(x_audit_status,'NA') || ';');
for rec_sec in (select sec_section_name from ms_chk_section_sec where sec_checklist_id = x_chklst_tsk) -- 13
loop
dbms_lob.writeappend(x_clob, length(nvl(rec_sec.sec_section_name,'NA')) + 1, REGEXP_REPLACE(REGEXP_REPLACE(nvl(rec_sec.sec_section_name,'NA'),'''','\'''), '"','\"') || ',');
end loop;
return x_clob;
exception
WHEN OTHERS
then
ms_apps_mdf_errors_pkg.insert_log (pn_error_handle_id      =&gt; x_error_handle_id,
pn_error_sequence       =&gt; x_error_sequence,
pc_error_type           =&gt; 'ERROR',
pc_error_text           =&gt; 'AUD' || ':' || substr (sqlerrm, 1, 3500) || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
);
RAISE;
END;
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="I_IN_DATA" TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="32" END_LINE="5630" LINES="88" START_COLUMN="12" START_LINE="5543"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_CORRECTION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_OUT_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="5777" LINES="146" START_COLUMN="14" START_LINE="5632"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="5779" LINES="5779" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_F017_HELPER" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <COMMENT_FIRST_LINE><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F017_HELPER<br/>
 Description: This package consists of a list of hook procedures that are
used in Copy Audit flow<br/>
 ======================================================================<br/>
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_F017_HELPER<br/>
 Description: This package consists of a list of hook procedures that are
used in Copy Audit flow<br/>
 ======================================================================<br/>
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="COPY_AUDIT_PROC">
      <COMMENT_FIRST_LINE><![CDATA[ This hook procedure is invoked on submitting the Copy Audit form.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This hook procedure is invoked on submitting the Copy Audit form. This is invoked in T001
 self-transition from S001 to S001 stage. It picks up the details of new audit from the copy
 audit xml, generates an xml for the old audit whose information is to be copied to form new
 audit and updates the xml for old audit with the new data from copy audit xml. After the
 enrichment of xml it triggers the F003 flow which eventually creates the new audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB">
        <COMMENT><![CDATA[holds the input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data holds the manipulated input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_process_code Workflow code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_orig_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process_instance_id Process Instance ID to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="34" END_LINE="35" LINES="9" START_COLUMN="13" START_LINE="27"/>
    </PROCEDURE>
    <PROCEDURE NAME="COPY_AUDIT_TASK">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to copy the tasks created in the source audit to the copied audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to copy the tasks created in the source audit to the copied audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="33" END_LINE="48" LINES="5" START_COLUMN="13" START_LINE="44"/>
    </PROCEDURE>
    <PROCEDURE NAME="COPY_AUDIT_PLAN_SCOPE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure is used to copy the Audit Plan-Scope data(latest approved;initial in-progress data)
 created in the source audit to the copied audit.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure is used to copy the Audit Plan-Scope data(latest approved;initial in-progress data)
 created in the source audit to the copied audit.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error handle id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[XML error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML error code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id XML error handle id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq XML error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code XML error code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="33" END_LINE="62" LINES="5" START_COLUMN="13" START_LINE="58"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ This function is used to get the header details from Audit form
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function is used to get the header details from Audit form
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns the header details for the given audit id as VARCHAR2 datatype]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns the header details for the given audit id as VARCHAR2 datatype]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="70" LINES="2" START_COLUMN="12" START_LINE="69"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ This function is used to get task details from Create task multirow
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function is used to get task details from Create task multirow
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="TASK_COPY_REQUEST" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Yes or No]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns the task details from Create task multirow for the given audit id as CLOB datatype]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[task_copy_request Yes or No]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns the task details from Create task multirow for the given audit id as CLOB datatype]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="79" LINES="2" START_COLUMN="12" START_LINE="78"/>
    </FUNCTION>
    <FUNCTION NAME="FN_DEFAULT_SETUPAPPROVAL">
      <COMMENT_FIRST_LINE><![CDATA[ This function to check Audit Classification selected is Cross Functional or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function to check Audit Classification selected is Cross Functional or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 1 if Audit Classification selected as Cross Functional else returns 2 as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Lt_Audit_Classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 if Audit Classification selected as Cross Functional else returns 2 as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="87" LINES="2" START_COLUMN="12" START_LINE="86"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_INSTRUCTION">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns html content of Instructions RTF field from Create Task form
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns html content of Instructions RTF field from Create Task form
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns html content of Instructions RTF field from Create Task form as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[LT_TASK_ID Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns html content of Instructions RTF field from Create Task form as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="15" END_LINE="95" LINES="2" START_COLUMN="12" START_LINE="94"/>
    </FUNCTION>
    <FUNCTION NAME="FN_REMOVE_HTML_TAGS">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns the string after removing HTML tags.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns the string after removing HTML tags.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_STRING" TYPE="CLOB">
        <COMMENT><![CDATA[Input data]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns the string after removing HTML tags as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_string Input data]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns the string after removing HTML tags as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="103" LINES="2" START_COLUMN="12" START_LINE="102"/>
    </FUNCTION>
    <FUNCTION NAME="FN_COPY_AUDIT_CHK_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ This function to check if the user has AUD - Leads the Audit
 or AUD - Manages the Audit activities
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function to check if the user has AUD - Leads the Audit
 or AUD - Manages the Audit activities
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LT_IN_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 1 if the user name has AUD - Leads the Audit or AUD - Manages the Audit activities else 0 as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_user_name User Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 if the user name has AUD - Leads the Audit or AUD - Manages the Audit activities else 0 as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="112" LINES="2" START_COLUMN="12" START_LINE="111"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="114" LINES="114" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_F017_HELPER" SCHEMA="Schema_objects">
    <PROCEDURE NAME="COPY_AUDIT_PROC">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA_ORIG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PC_PROCESS_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORIG_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="LN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="343" LINES="341" START_COLUMN="11" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="COPY_AUDIT_TASK">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="692" LINES="348" START_COLUMN="11" START_LINE="345"/>
    </PROCEDURE>
    <PROCEDURE NAME="COPY_AUDIT_PLAN_SCOPE">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="926" LINES="233" START_COLUMN="11" START_LINE="694"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS">
      <ARGUMENT MODE="IN" NAME="LT_IN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1000" LINES="73" START_COLUMN="10" START_LINE="928"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_DETAILS">
      <ARGUMENT MODE="IN" NAME="LT_IN_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="TASK_COPY_REQUEST" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="24" END_LINE="1086" LINES="85" START_COLUMN="10" START_LINE="1002"/>
    </FUNCTION>
    <FUNCTION NAME="FN_DEFAULT_SETUPAPPROVAL">
      <ARGUMENT MODE="IN" NAME="LT_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="1104" LINES="16" START_COLUMN="12" START_LINE="1089"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_INSTRUCTION">
      <ARGUMENT MODE="IN" NAME="LT_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="4" END_LINE="1120" LINES="15" START_COLUMN="10" START_LINE="1106"/>
    </FUNCTION>
    <FUNCTION NAME="FN_REMOVE_HTML_TAGS">
      <ARGUMENT MODE="IN" NAME="P_STRING" TYPE="CLOB"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="24" END_LINE="1135" LINES="15" START_COLUMN="10" START_LINE="1121"/>
    </FUNCTION>
    <FUNCTION NAME="FN_COPY_AUDIT_CHK_ACCESS">
      <ARGUMENT MODE="IN" NAME="LT_IN_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="1153" LINES="17" START_COLUMN="10" START_LINE="1137"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="1155" LINES="1155" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_GET_OVERACHING_DETAILS" SCHEMA="Schema_objects">
    <VARIABLE NAME="PLAN_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="CONDUCTED_ORG" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="LEAD_AUDITOR" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_MANAGER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_CLASSIFICATION" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="ACTUAL_EFFORT" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="15" LINES="15" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_GET_OVERACHING_RECORD" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_GET_OVERACHING_DETAILS">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_GET_OVERACHING_DETAILS" TYPE="TABLE OF MS_AUD_GET_OVERACHING_DETAILS">
        <COMMENT><![CDATA[Collection Type : table OF MS_AUD_Get_Overaching_Details]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_INTEGRATION" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="TRIGGER_AUDIT">
      <ARGUMENT MODE="IN" NAME="I_EVENT_LOG_ID" TYPE="MS_APPS_EVENT_LOGS.EVENT_LOG_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_EVENT_NAME" TYPE="MS_APPS_EVENTS.EVENT_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_SUBSCRIPTION_NAME" TYPE="MS_APPS_EVENT_SUBSCRIPTIONS.SUBSCRIPTION_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="PLS_INTEGER"/>
      <ARGUMENT MODE="IN" NAME="I_ACTION_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_CLOSE_SUBSCRIPTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_NOTIFY_EVENT_OWNER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="75" END_LINE="14" LINES="9" START_COLUMN="14" START_LINE="6"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_TRIGGER_API">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="21" LINES="6" START_COLUMN="14" START_LINE="16"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_VALIDATE_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="28" LINES="6" START_COLUMN="14" START_LINE="23"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_VALIDATION_LOG">
      <ARGUMENT MODE="IN" NAME="COLUMN_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="COLUMN_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ERROR_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="37" LINES="8" START_COLUMN="14" START_LINE="30"/>
    </PROCEDURE>
    <FUNCTION NAME="VALIDATE_DATE">
      <ARGUMENT MODE="IN" NAME="LC_DATE" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="21" END_LINE="40" LINES="2" START_COLUMN="13" START_LINE="39"/>
    </FUNCTION>
    <FUNCTION NAME="VALID_AE">
      <ARGUMENT MODE="IN" NAME="LC_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_CURRENT_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_SCOPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_ORGANIZATION" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="21" END_LINE="46" LINES="5" START_COLUMN="13" START_LINE="42"/>
    </FUNCTION>
    <FUNCTION NAME="VALID_ORGANIZATION">
      <ARGUMENT MODE="IN" NAME="LC_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_SCOPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_ORGANIZATION" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="23" END_LINE="51" LINES="4" START_COLUMN="13" START_LINE="48"/>
    </FUNCTION>
    <FUNCTION NAME="VALID_RISK">
      <ARGUMENT MODE="IN" NAME="LC_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_SCOPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_CURRENT_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_RISK" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="22" END_LINE="58" LINES="6" START_COLUMN="13" START_LINE="53"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_INTEGRATION" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="0" NAME="XN_PROCESS_INSTANCE_ID">
      <RETURN TYPE="NUMBER(10)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'0'" NAME="XN_REFERENCE_ID">
      <RETURN TYPE="VARCHAR2(2000)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="'NAN'" NAME="XN_MODULE_NAME">
      <RETURN TYPE="VARCHAR2(2000)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="0" NAME="LC_ERROR_COUNT">
      <RETURN TYPE="NUMBER(10)"/>
    </VARIABLE>
    <VARIABLE DEFAULT="NULL" NAME="LC_ERROR_MSG">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <PROCEDURE NAME="TRIGGER_AUDIT">
      <ARGUMENT MODE="IN" NAME="I_EVENT_LOG_ID" TYPE="MS_APPS_EVENT_LOGS.EVENT_LOG_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_EVENT_NAME" TYPE="MS_APPS_EVENTS.EVENT_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_SUBSCRIPTION_NAME" TYPE="MS_APPS_EVENT_SUBSCRIPTIONS.SUBSCRIPTION_NAME%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="PLS_INTEGER"/>
      <ARGUMENT MODE="IN" NAME="I_ACTION_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_CLOSE_SUBSCRIPTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_NOTIFY_EVENT_OWNER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="46" LINES="38" START_COLUMN="14" START_LINE="9"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUDIT_TRIGGER_API">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="528" LINES="482" START_COLUMN="11" START_LINE="47"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_VALIDATE_AUDIT">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1085" LINES="556" START_COLUMN="11" START_LINE="530"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_DATA_VALIDATION_LOG">
      <ARGUMENT MODE="IN" NAME="COLUMN_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="COLUMN_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ERROR_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="1108" LINES="22" START_COLUMN="11" START_LINE="1087"/>
    </PROCEDURE>
    <FUNCTION NAME="VALIDATE_DATE">
      <ARGUMENT MODE="IN" NAME="LC_DATE" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="18" END_LINE="1123" LINES="14" START_COLUMN="10" START_LINE="1110"/>
    </FUNCTION>
    <FUNCTION NAME="VALID_AE">
      <ARGUMENT MODE="IN" NAME="LC_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_CURRENT_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_SCOPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_ORGANIZATION" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="13" END_LINE="1166" LINES="42" START_COLUMN="10" START_LINE="1125"/>
    </FUNCTION>
    <FUNCTION NAME="VALID_ORGANIZATION">
      <ARGUMENT MODE="IN" NAME="LC_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_SCOPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_ORGANIZATION" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="23" END_LINE="1208" LINES="41" START_COLUMN="10" START_LINE="1168"/>
    </FUNCTION>
    <FUNCTION NAME="VALID_RISK">
      <ARGUMENT MODE="IN" NAME="LC_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_SCOPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_CURRENT_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_RISK" TYPE="VARCHAR2"/>
      <RETURN TYPE="BOOLEAN"/>
      <SUMMARY END_COLUMN="15" END_LINE="1268" LINES="59" START_COLUMN="10" START_LINE="1210"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="23" END_LINE="1270" LINES="1270" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_INT_DMS_OBJECT" SCHEMA="Schema_objects">
    <VARIABLE NAME="DOCUMENT_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="PURPOSE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="DOCUMENT_NUMBER" VERSION="1">
      <RETURN TYPE="VARCHAR2(400 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="DOCUMENT_ATTACHMENT" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="REVISION_NUMBER" VERSION="1">
      <RETURN TYPE="VARCHAR2(100 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="CATEGORY" VERSION="1">
      <RETURN TYPE="VARCHAR2(100 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="SUB_CATEGORY1" VERSION="1">
      <RETURN TYPE="VARCHAR2(100 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="SUB_CATEGORY2" VERSION="1">
      <RETURN TYPE="VARCHAR2(100 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="SUB_CATEGORY3" VERSION="1">
      <RETURN TYPE="VARCHAR2(100 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="SUB_CATEGORY4" VERSION="1">
      <RETURN TYPE="VARCHAR2(100 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="AUTHOR_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="OWNER_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="EFFECTIVE_DATE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="CUSTOM_FIELD1" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="CUSTOM_FIELD2" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="CUSTOM_FIELD3" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <VARIABLE NAME="CUSTOM_FIELD4" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000 CHAR)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="22" LINES="22" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_ISM_INTERFACE" SCHEMA="Schema_objects">
    <VARIABLE DEFAULT="'xmlns=&quot;http://www.metricstream.com/appstudio/msa&quot;'" NAME="GC_DATA_NAMESPACE">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <PROCEDURE NAME="PROC_AUD_ISM_API">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="11" LINES="6" START_COLUMN="14" START_LINE="6"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ISSUE_CREATION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="51" END_LINE="13" LINES="1" START_COLUMN="14" START_LINE="13"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="14" LINES="14" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_ISM_INTERFACE" SCHEMA="Schema_objects">
    <PROCEDURE NAME="PROC_AUD_ISM_API">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="363" LINES="361" START_COLUMN="14" START_LINE="3"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_ISSUE_CREATION">
      <ARGUMENT MODE="IN" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="28" END_LINE="398" LINES="34" START_COLUMN="15" START_LINE="365"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="399" LINES="399" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_ISSUE_DATA" SCHEMA="Schema_objects">
    <VARIABLE NAME="AUDIT_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_OWNER" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_RATING" VERSION="1">
      <RETURN TYPE="VARCHAR2(200)"/>
    </VARIABLE>
    <VARIABLE NAME="PRIORITY" VERSION="1">
      <RETURN TYPE="VARCHAR2(200)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_DUE_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_CREATED_BY" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_DISPOSITION" VERSION="1">
      <RETURN TYPE="VARCHAR2(400)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(400)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_PROGRESS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="NO_OF_ACTIONS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDITABLE_ENTITIES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RISKS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AREA_COMPLIANCE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="COMPLIANCE_CNTRL" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RELATED_TO_ORG" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="FN_ORGANIZATION" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_CLASSIFICATION" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_MANAGER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="LEAD_AUDITOR" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="30" LINES="30" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_ISSUE_DATA_CROSS" SCHEMA="Schema_objects">
    <VARIABLE NAME="FIND_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_OWNER" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_DUE_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(400)"/>
    </VARIABLE>
    <VARIABLE NAME="OWNER_ORG" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_OWNER" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="ISSUE_TITLE_DISP" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="DRAFT_TASK_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="19" LINES="19" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_ISSUE_RECORD" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_ISSUE_DATA">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_ISSUE_DATA" TYPE="TABLE OF MS_AUD_ISSUE_DATA">
        <COMMENT><![CDATA[Collection Type : TABLE OF ms_aud_issue_data]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_ISSUE_RECORD_CROSS" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_ISSUE_DATA_CROSS">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_ISSUE_DATA_CROSS" TYPE="TABLE OF MS_AUD_ISSUE_DATA_CROSS">
        <COMMENT><![CDATA[Collection Type : TABLE OF ms_aud_issue_data_cross]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_ISSUE_REV_TASK_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_ISSUE_REV_TASK_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_ISSUE_REV_TASK_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_ISSUE_STATUS" SCHEMA="Schema_objects">
    <VARIABLE NAME="STATUS_ID" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="STATUS_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="5" LINES="5" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_ISSUE_STATUS_REC" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_ISSUE_STATUS">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_ISSUE_STATUS" TYPE="TABLE OF MS_AUD_ISSUE_STATUS">
        <COMMENT><![CDATA[Collection Type : TABLE OF ms_aud_issue_status]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_LOCKING_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_LOCK_STATUS_CHECK">
      <ARGUMENT MODE="IN" NAME="I_LOCAL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="4" LINES="2" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OBJ_LOCK_STATUS_CHECK">
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="7" LINES="2" START_COLUMN="13" START_LINE="6"/>
    </FUNCTION>
    <FUNCTION NAME="FN_LOCK_DATA_CHECK">
      <ARGUMENT MODE="IN" NAME="I_LOCAL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_QU_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="11" LINES="2" START_COLUMN="13" START_LINE="10"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_INSERT_TO_DATA_QUEUE">
      <ARGUMENT MODE="IN" NAME="I_LOCAL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLOB" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="5" END_LINE="17" LINES="5" START_COLUMN="14" START_LINE="13"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_INSERT_TO_TRANS_STATUS">
      <ARGUMENT MODE="IN" NAME="I_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SECONDARY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="23" LINES="5" START_COLUMN="14" START_LINE="19"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUD_STATUS_INS_TO_TRANS">
      <ARGUMENT MODE="IN" NAME="I_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SECONDARY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="28" LINES="5" START_COLUMN="17" START_LINE="24"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_STATUS_FROM_TRANS">
      <ARGUMENT MODE="IN" NAME="I_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SECONDARY_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="34" LINES="5" START_COLUMN="13" START_LINE="30"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_METRIC_ID">
      <ARGUMENT MODE="IN" NAME="I_METRIC_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="37" LINES="2" START_COLUMN="13" START_LINE="36"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_LOCK_FOR_COA_CONFIG_VALUE">
      <ARGUMENT MODE="OUT" NAME="I_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="70" END_LINE="39" LINES="1" START_COLUMN="14" START_LINE="39"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="40" LINES="40" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_LOCKING_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_LOCK_STATUS_CHECK">
      <ARGUMENT MODE="IN" NAME="I_LOCAL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="32" LINES="30" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OBJ_LOCK_STATUS_CHECK">
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="59" LINES="25" START_COLUMN="13" START_LINE="35"/>
    </FUNCTION>
    <FUNCTION NAME="FN_LOCK_DATA_CHECK">
      <ARGUMENT MODE="IN" NAME="I_LOCAL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_QU_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="82" LINES="21" START_COLUMN="13" START_LINE="62"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_INSERT_TO_DATA_QUEUE">
      <ARGUMENT MODE="IN" NAME="I_LOCAL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLOB" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="33" END_LINE="108" LINES="25" START_COLUMN="14" START_LINE="84"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_INSERT_TO_TRANS_STATUS">
      <ARGUMENT MODE="IN" NAME="I_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SECONDARY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="145" LINES="36" START_COLUMN="14" START_LINE="110"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_AUD_STATUS_INS_TO_TRANS">
      <ARGUMENT MODE="IN" NAME="I_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SECONDARY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="179" LINES="33" START_COLUMN="14" START_LINE="147"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_STATUS_FROM_TRANS">
      <ARGUMENT MODE="IN" NAME="I_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SECONDARY_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="196" LINES="16" START_COLUMN="13" START_LINE="181"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_METRIC_ID">
      <ARGUMENT MODE="IN" NAME="I_METRIC_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="213" LINES="16" START_COLUMN="13" START_LINE="198"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_LOCK_FOR_COA_CONFIG_VALUE">
      <ARGUMENT MODE="OUT" NAME="I_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="38" END_LINE="272" LINES="58" START_COLUMN="14" START_LINE="215"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="273" LINES="273" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="_AUDDEVSP3" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MS_AUD_LOG_ACTIVITY">
      <ARGUMENT MODE="IN" NAME="IP_LOG_MSG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_LOG_CLOB" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="24" END_LINE="35" LINES="35" START_COLUMN="43" START_LINE="1"/>
    </PROCEDURE>
  </PACKAGE>
  <OBJECT_TYPE NAME="MS_AUD_MAM_USR_ROW" SCHEMA="Schema_objects">
    <VARIABLE NAME="OUT_USER_ID" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="OUT_USER_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <VARIABLE NAME="OUT_USER_FULLNAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="OUT_ROLES" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="OUT_ORGS" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="10" LINES="10" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_MAM_USR_TAB" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_MAM_USR_ROW">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_MAM_USR_ROW" TYPE="TABLE OF MS_AUD_MAM_USR_ROW">
        <COMMENT><![CDATA[Collection Type : Table OF Ms_Aud_Mam_Usr_Row]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="5" LINES="5" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_MANAGE_AUDIT_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_MANAGE_AUDIT_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_MANAGE_AUDIT_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="314" LINES="291" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="399" LINES="81" START_COLUMN="15" START_LINE="319"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="1977" LINES="1564" START_COLUMN="15" START_LINE="414"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="1978" LINES="1978" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_MILESTONE_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_MILESTONE_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TEMPLATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TEMPLATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_MILESTONE_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TEMPLATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_TEMPLATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="23" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_MNG_AUD_TRAIL_RPT_OBJ" SCHEMA="Schema_objects">
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="PLAN_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CONDUCTED_BY_ORG" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="PURPOSE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="LEAD_AUDITOR" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_MANAGER" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <VARIABLE NAME="STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="DATE_TIME" VERSION="1">
      <RETURN TYPE="VARCHAR2(50)"/>
    </VARIABLE>
    <VARIABLE NAME="USER_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <VARIABLE NAME="COMMENTS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="ELECTRONIC_SIGNATURES" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(255)"/>
    </VARIABLE>
    <VARIABLE NAME="PROCESS_INSTANCE_ID" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="INSTANCE_ID" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="20" LINES="20" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_MNG_AUD_TRAIL_RPT_TBL" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_MNG_AUD_TRAIL_RPT_OBJ">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_MNG_AUD_TRAIL_RPT_OBJ" TYPE="TABLE OF MS_AUD_MNG_AUD_TRAIL_RPT_OBJ">
        <COMMENT><![CDATA[Collection Type : table OF MS_AUD_MNG_AUD_TRAIL_RPT_OBJ]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_MY_AUDIT_RPT_OBJ" SCHEMA="Schema_objects">
    <VARIABLE NAME="AUDIT_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(50)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(1000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(50)"/>
    </VARIABLE>
    <VARIABLE NAME="LEAD_AUDITOR" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_MANAGER" VERSION="1">
      <RETURN TYPE="CLOB"/>
    </VARIABLE>
    <VARIABLE NAME="MANAGE_TEAM" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_PLAN_SCOPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="VIEW_TASKS" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="DRAFT_ISSUE" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="ACTION" VERSION="1">
      <RETURN TYPE="VARCHAR2(300)"/>
    </VARIABLE>
    <VARIABLE NAME="CREATE_TASKS" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="SEND_ISSUES_FOR_RVW" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_REPORT" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(50)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_CLASSIFICATION" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_CLOSURE" VERSION="1">
      <RETURN TYPE="VARCHAR2(500)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="24" LINES="24" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_MY_AUDIT_RPT_T" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_MY_AUDIT_RPT_OBJ">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_MY_AUDIT_RPT_OBJ" TYPE="TABLE OF MS_AUD_MY_AUDIT_RPT_OBJ">
        <COMMENT><![CDATA[Collection Type : table OF ms_aud_my_audit_rpt_obj]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_NOTIFICATION_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="GET_PROCESS_INSTANCE_ID">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="9" LINES="7" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PURPOSE_RATIONALE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="17" LINES="7" START_COLUMN="13" START_LINE="11"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASKPURPOSE_RATIONALE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="18" END_LINE="25" LINES="7" START_COLUMN="13" START_LINE="19"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASK_INSTRUCTIONS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="33" LINES="7" START_COLUMN="13" START_LINE="27"/>
    </FUNCTION>
    <FUNCTION NAME="GET_REM_NOTIFY_STATUS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="41" LINES="7" START_COLUMN="13" START_LINE="35"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASK_OWNER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="49" LINES="7" START_COLUMN="13" START_LINE="43"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ORG_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="57" LINES="7" START_COLUMN="13" START_LINE="51"/>
    </FUNCTION>
    <FUNCTION NAME="GET_LEAD_AUDITOR_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="65" LINES="7" START_COLUMN="13" START_LINE="59"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_MANAGER_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="73" LINES="7" START_COLUMN="13" START_LINE="67"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_TITLE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="81" LINES="7" START_COLUMN="13" START_LINE="75"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_START_DATE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="DATE"/>
      <SUMMARY END_COLUMN="18" END_LINE="89" LINES="7" START_COLUMN="13" START_LINE="83"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RISKS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="97" LINES="7" START_COLUMN="13" START_LINE="91"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_TITLE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="105" LINES="7" START_COLUMN="13" START_LINE="99"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="113" LINES="7" START_COLUMN="13" START_LINE="107"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_APPROVER_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="121" LINES="7" START_COLUMN="13" START_LINE="115"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_TYPE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="129" LINES="7" START_COLUMN="13" START_LINE="123"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_ORG_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="137" LINES="7" START_COLUMN="13" START_LINE="131"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_COMMENTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="145" LINES="7" START_COLUMN="13" START_LINE="139"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_REVIEWER_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="153" LINES="7" START_COLUMN="13" START_LINE="147"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SEND_NOTIFICATION">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="161" LINES="7" START_COLUMN="13" START_LINE="155"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_CON_NAME">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="164" LINES="2" START_COLUMN="13" START_LINE="163"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_CREATOR">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="172" LINES="7" START_COLUMN="13" START_LINE="166"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COMMENTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="180" LINES="7" START_COLUMN="13" START_LINE="174"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUD_MANAGER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="188" LINES="7" START_COLUMN="13" START_LINE="182"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AC_WITH_SA">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="196" LINES="7" START_COLUMN="13" START_LINE="190"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALL_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="204" LINES="7" START_COLUMN="13" START_LINE="198"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_IN_SYS_YES">
      <COMMENT_FIRST_LINE><![CDATA[RETURN VARCHAR2;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[RETURN VARCHAR2;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="209" LINES="2" START_COLUMN="13" START_LINE="208"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_IN_SYS_NO">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="212" LINES="2" START_COLUMN="13" START_LINE="211"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ISSUE_TITLE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="220" LINES="7" START_COLUMN="13" START_LINE="214"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PURPOSE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="227" LINES="7" START_COLUMN="13" START_LINE="221"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REPORT_PURPOSE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="234" LINES="7" START_COLUMN="13" START_LINE="228"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CLOSURE_EMAIL_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="241" LINES="7" START_COLUMN="13" START_LINE="235"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_MANAGER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="248" LINES="7" START_COLUMN="13" START_LINE="242"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_LEAD">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="255" LINES="7" START_COLUMN="13" START_LINE="249"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_MANAGER_DISPLAY">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="262" LINES="7" START_COLUMN="13" START_LINE="256"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_LEAD_DISPLAY">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="269" LINES="7" START_COLUMN="13" START_LINE="263"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ASSIGNEE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="277" LINES="7" START_COLUMN="13" START_LINE="271"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ASSIGN_TEXT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="285" LINES="7" START_COLUMN="13" START_LINE="279"/>
    </FUNCTION>
    <FUNCTION NAME="GET_UPDATE_FLAG">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="292" LINES="7" START_COLUMN="15" START_LINE="286"/>
    </FUNCTION>
    <FUNCTION NAME="LEVEL_APPROVER_FOR_AE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="299" LINES="7" START_COLUMN="14" START_LINE="293"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TEST">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="306" LINES="7" START_COLUMN="16" START_LINE="300"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CONTROL">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="313" LINES="7" START_COLUMN="12" START_LINE="307"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="34" END_LINE="314" LINES="314" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_NOTIFICATION_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="GET_PROCESS_INSTANCE_ID">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="29" LINES="27" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASK_INSTRUCTIONS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="70" LINES="40" START_COLUMN="13" START_LINE="31"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PURPOSE_RATIONALE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="107" LINES="36" START_COLUMN="13" START_LINE="72"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASKPURPOSE_RATIONALE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="7" END_LINE="135" LINES="27" START_COLUMN="13" START_LINE="109"/>
    </FUNCTION>
    <FUNCTION NAME="GET_REM_NOTIFY_STATUS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="7" END_LINE="174" LINES="38" START_COLUMN="13" START_LINE="137"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASK_OWNER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="207" LINES="32" START_COLUMN="13" START_LINE="176"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ORG_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="235" LINES="27" START_COLUMN="13" START_LINE="209"/>
    </FUNCTION>
    <FUNCTION NAME="GET_LEAD_AUDITOR_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="264" LINES="28" START_COLUMN="13" START_LINE="237"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_MANAGER_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="293" LINES="28" START_COLUMN="13" START_LINE="266"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_TITLE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="321" LINES="27" START_COLUMN="13" START_LINE="295"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_START_DATE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="DATE"/>
      <SUMMARY END_COLUMN="7" END_LINE="349" LINES="27" START_COLUMN="13" START_LINE="323"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RISKS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="380" LINES="30" START_COLUMN="13" START_LINE="351"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_TITLE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="408" LINES="27" START_COLUMN="13" START_LINE="382"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="454" LINES="45" START_COLUMN="13" START_LINE="410"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_APPROVER_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="484" LINES="29" START_COLUMN="13" START_LINE="456"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_TYPE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="519" LINES="34" START_COLUMN="13" START_LINE="486"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_ORG_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="547" LINES="27" START_COLUMN="13" START_LINE="521"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_COMMENTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="575" LINES="27" START_COLUMN="13" START_LINE="549"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_REVIEWER_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="604" LINES="28" START_COLUMN="13" START_LINE="577"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SEND_NOTIFICATION">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="632" LINES="27" START_COLUMN="13" START_LINE="606"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_CON_NAME">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="673" LINES="40" START_COLUMN="13" START_LINE="634"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_CREATOR">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="699" LINES="25" START_COLUMN="13" START_LINE="675"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COMMENTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="733" LINES="33" START_COLUMN="13" START_LINE="701"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUD_MANAGER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="761" LINES="27" START_COLUMN="13" START_LINE="735"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AC_WITH_SA">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="808" LINES="46" START_COLUMN="13" START_LINE="763"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALL_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="844" LINES="35" START_COLUMN="13" START_LINE="810"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_IN_SYS_YES">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="892" LINES="47" START_COLUMN="13" START_LINE="846"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_IN_SYS_NO">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="941" LINES="48" START_COLUMN="13" START_LINE="894"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ISSUE_TITLE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="983" LINES="41" START_COLUMN="13" START_LINE="943"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PURPOSE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="1027" LINES="43" START_COLUMN="13" START_LINE="985"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REPORT_PURPOSE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="1070" LINES="43" START_COLUMN="13" START_LINE="1028"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CLOSURE_EMAIL_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="1111" LINES="40" START_COLUMN="13" START_LINE="1072"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_MANAGER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1138" LINES="26" START_COLUMN="13" START_LINE="1113"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_LEAD">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="1164" LINES="26" START_COLUMN="13" START_LINE="1139"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_MANAGER_DISPLAY">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1238" LINES="74" START_COLUMN="13" START_LINE="1165"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_LEAD_DISPLAY">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="1312" LINES="74" START_COLUMN="13" START_LINE="1239"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ASSIGNEE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="1334" LINES="21" START_COLUMN="13" START_LINE="1314"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ASSIGN_TEXT">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1356" LINES="21" START_COLUMN="13" START_LINE="1336"/>
    </FUNCTION>
    <FUNCTION NAME="GET_UPDATE_FLAG">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="1384" LINES="27" START_COLUMN="15" START_LINE="1358"/>
    </FUNCTION>
    <FUNCTION NAME="LEVEL_APPROVER_FOR_AE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="1428" LINES="44" START_COLUMN="14" START_LINE="1385"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TEST">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="14" END_LINE="1459" LINES="31" START_COLUMN="12" START_LINE="1429"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CONTROL">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="17" END_LINE="1487" LINES="28" START_COLUMN="12" START_LINE="1460"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="34" END_LINE="1488" LINES="1488" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_ORB_RELATIONS_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_ORB_RELATIONS_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_REL_SOURCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="38" LINES="7" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_REL_SOURCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="52" LINES="7" START_COLUMN="15" START_LINE="46"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="28" END_LINE="53" LINES="53" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_ORB_RELATIONS_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_REL_SOURCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="87" LINES="73" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_REL_SOURCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="167" LINES="73" START_COLUMN="15" START_LINE="95"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="27" END_LINE="169" LINES="169" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_PLAN_AUDIT_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_PLAN_AUDIT_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_PLAN_AUDIT_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="149" LINES="126" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="234" LINES="81" START_COLUMN="15" START_LINE="154"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="1583" LINES="1335" START_COLUMN="15" START_LINE="249"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="1584" LINES="1584" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_PLAN_SCOPE_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_PLAN_SCOPE_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_PLAN_SCOPE_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_FORM_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="24" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_PLAN_SCOPE_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_PLAN_SCOPE_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_PLAN_SCOPE_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="272" LINES="249" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="357" LINES="81" START_COLUMN="15" START_LINE="277"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="1821" LINES="1450" START_COLUMN="15" START_LINE="372"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="25" END_LINE="1822" LINES="1822" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="_AUDDEVSP3" SCHEMA="Schema_objects">
    <PROCEDURE NAME="MS_AUD_PROC_PIS_LOG">
      <ARGUMENT DEFAULT="'I'" MODE="IN" NAME="I_LOG_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOG_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="1" MODE="IN" NAME="I_LOG_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_LOG_COMMENT" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="22" LINES="22" START_COLUMN="43" START_LINE="1"/>
    </PROCEDURE>
  </PACKAGE>
  <PACKAGE NAME="MS_AUD_REASSGN_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_MAM_NEW_USERS">
      <ARGUMENT MODE="IN" NAME="P_ORG_USER_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_ASSIGNMENT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_FORM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_ACTIVITY_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_MAM_USR_TAB"/>
      <SUMMARY END_COLUMN="39" END_LINE="8" LINES="6" START_COLUMN="12" START_LINE="3"/>
    </FUNCTION>
    <PROCEDURE NAME="MS_AUD_BULK_REASSIGNMENT_HOOK">
      <ARGUMENT MODE="IN" NAME="LCB_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PN_MAM_RUN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_LOG_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="68" END_LINE="13" LINES="4" START_COLUMN="13" START_LINE="10"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="15" LINES="15" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_REASSGN_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_MAM_NEW_USERS">
      <ARGUMENT MODE="IN" NAME="P_ORG_USER_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_ASSIGNMENT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_FORM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_ACTIVITY_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_MAM_USR_TAB"/>
      <SUMMARY END_COLUMN="27" END_LINE="367" LINES="365" START_COLUMN="12" START_LINE="3"/>
    </FUNCTION>
    <PROCEDURE NAME="MS_AUD_BULK_REASSIGNMENT_HOOK">
      <COMMENT_FIRST_LINE><![CDATA[------------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[------------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LCB_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="PN_MAM_RUN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="PN_LOG_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="34" END_LINE="1318" LINES="949" START_COLUMN="13" START_LINE="370"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="29" END_LINE="1320" LINES="1320" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_RPL_OBJ" SCHEMA="Schema_objects">
    <VARIABLE NAME="RPL_ID" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="RPL_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(2000 CHAR)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="7" LINES="7" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_RPL_OBJECT" SCHEMA="Schema_objects">
    <VARIABLE NAME="RESOURCE_POOL_ID" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="RESOURCE_POOL_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(2000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="8" LINES="8" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_RSM_RESOURCES" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_RPL_OBJECT">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_RPL_OBJECT" TYPE="TABLE OF MS_AUD_RPL_OBJECT">
        <COMMENT><![CDATA[Collection Type : TABLE OF ms_aud_rpl_object]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_SCENARIOS" SCHEMA="Schema_objects">
    <VARIABLE NAME="SCENARIO_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <VARIABLE NAME="SCENARIO_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(2000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="5" LINES="5" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_SCENARIO_ASSESSMENT" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_SCENARIOS">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_SCENARIOS" TYPE="TABLE OF MS_AUD_SCENARIOS">
        <COMMENT><![CDATA[Collection Type : TABLE OF MS_AUD_SCENARIOS]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_SECURITY_EMAIL_PKG" SCHEMA="Schema_objects">
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="18" END_LINE="5" LINES="4" START_COLUMN="10" START_LINE="2"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="8" END_LINE="6" LINES="6" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_SECURITY_EMAIL_PKG" SCHEMA="Schema_objects">
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="174" LINES="172" START_COLUMN="10" START_LINE="3"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="4" END_LINE="175" LINES="175" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_SECURITY_PKG" SCHEMA="Schema_objects">
    <VARIABLE NAME="ERROR_CODE">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="ERROR_MESSAGE">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CODE_POS">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <FUNCTION NAME="CHECK_OBJECT_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_OBJECT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_RESTRICT_ACCESS_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_OWNERS_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ACTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="15" LINES="9" START_COLUMN="14" START_LINE="7"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="18" END_LINE="23" LINES="7" START_COLUMN="14" START_LINE="17"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_WFTS_CHECK">
      <ARGUMENT MODE="IN" NAME="INFOLET_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="USER_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="COL_SEQ" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ACCESS_MODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="30" LINES="6" START_COLUMN="15" START_LINE="25"/>
    </PROCEDURE>
    <TYPE NAME="VIEW_SECURITY_INFO">
      <FIELD NAME="SECURITY_VIEW" TYPE="VARCHAR2(100)"/>
      <FIELD NAME="SECURITY_VIEW_ALL" TYPE="VARCHAR2(100)"/>
      <FIELD NAME="INFO_TIMESTAMP" TYPE="TIMESTAMP"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="VIEW_SECURITY_INFO_TBL">
      <RETURN TYPE="TABLE OF VIEW_SECURITY_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <VARIABLE NAME="VIEW_SECURITY">
      <RETURN TYPE="VIEW_SECURITY_INFO_TBL"/>
    </VARIABLE>
    <TYPE NAME="EDIT_SECURITY_INFO">
      <FIELD NAME="SECURITY_EDIT" TYPE="VARCHAR2(100)"/>
      <FIELD NAME="SECURITY_EDIT_ALL" TYPE="VARCHAR2(100)"/>
      <FIELD NAME="INFO_TIMESTAMP" TYPE="TIMESTAMP"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="EDIT_SECURITY_INFO_TBL">
      <RETURN TYPE="TABLE OF EDIT_SECURITY_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <VARIABLE NAME="EDIT_SECURITY">
      <RETURN TYPE="EDIT_SECURITY_INFO_TBL"/>
    </VARIABLE>
    <TYPE NAME="VIEW_ALL_ACCESS_INFO">
      <FIELD NAME="ACCESS_FLAG" TYPE="VARCHAR2(100)"/>
      <FIELD NAME="INFO_TIMESTAMP" TYPE="TIMESTAMP"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="VIEW_ALL_ACCESS_INFO_TBL">
      <RETURN TYPE="TABLE OF VIEW_ALL_ACCESS_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <VARIABLE NAME="VIEW_ALL_ACCESS">
      <RETURN TYPE="VIEW_ALL_ACCESS_INFO_TBL"/>
    </VARIABLE>
    <TYPE NAME="EDIT_ALL_ACCESS_INFO">
      <FIELD NAME="ACCESS_FLAG" TYPE="VARCHAR2(100)"/>
      <FIELD NAME="INFO_TIMESTAMP" TYPE="TIMESTAMP"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="EDIT_ALL_ACCESS_INFO_TBL">
      <RETURN TYPE="TABLE OF EDIT_ALL_ACCESS_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <VARIABLE NAME="EDIT_ALL_ACCESS">
      <RETURN TYPE="EDIT_ALL_ACCESS_INFO_TBL"/>
    </VARIABLE>
    <TYPE NAME="ORG_INFO">
      <FIELD NAME="ORG_FLAG" TYPE="VARCHAR2(1)"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="ORG_INFO_TBL">
      <RETURN TYPE="TABLE OF ORG_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <TYPE NAME="ACT_ORG_INFO">
      <FIELD NAME="ORG_LIST" TYPE="ORG_INFO_TBL"/>
      <FIELD NAME="INFO_TIMESTAMP" TYPE="TIMESTAMP"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="ACT_ORG_INFO_TBL">
      <RETURN TYPE="TABLE OF ACT_ORG_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <TYPE NAME="USER_ACT_ORG_INFO">
      <FIELD NAME="ACT_LIST" TYPE="ACT_ORG_INFO_TBL"/>
      <RETURN TYPE="RECORD"/>
    </TYPE>
    <TYPE NAME="USER_ACT_ORG_INFO_TBL">
      <RETURN TYPE="TABLE OF USER_ACT_ORG_INFO INDEX BY VARCHAR2(100)"/>
    </TYPE>
    <VARIABLE NAME="USER_ACT_ORG">
      <RETURN TYPE="USER_ACT_ORG_INFO_TBL"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="24" END_LINE="95" LINES="95" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_SECURITY_PKG" SCHEMA="Schema_objects">
    <PROCEDURE NAME="FETCH_SECURITY_INFO">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
Private function declaration.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
Private function declaration.
------------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_OBJECT_NAME" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="9" LINES="4" START_COLUMN="15" START_LINE="6"/>
    </PROCEDURE>
    <PROCEDURE NAME="FETCH_USER_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_SECURITY_ALL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="16" LINES="6" START_COLUMN="15" START_LINE="11"/>
    </PROCEDURE>
    <PROCEDURE NAME="FETCH_ORGS">
      <ARGUMENT MODE="IN" NAME="IP_SECURITY_ALL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="5" START_COLUMN="15" START_LINE="18"/>
    </PROCEDURE>
    <PROCEDURE NAME="FETCH_USER_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
Private function definition.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
Private function definition.
------------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_SECURITY_ALL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="66" LINES="40" START_COLUMN="15" START_LINE="27"/>
    </PROCEDURE>
    <PROCEDURE NAME="FETCH_SECURITY_INFO">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
Private function definition.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
Private function definition.
------------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_OBJECT_NAME" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="94" LINES="24" START_COLUMN="15" START_LINE="71"/>
    </PROCEDURE>
    <PROCEDURE NAME="FETCH_ORGS">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
Private function definition.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
Private function definition.
------------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_SECURITY_ALL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="121" LINES="23" START_COLUMN="15" START_LINE="99"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_WFTS_CHECK">
      <ARGUMENT MODE="IN" NAME="INFOLET_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PROC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="USER_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="COL_SEQ" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="ACCESS_MODE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="138" LINES="16" START_COLUMN="18" START_LINE="123"/>
    </PROCEDURE>
    <FUNCTION NAME="CHECK_OBJECT_ACCESS">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
Public function definition.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
Public function definition.
------------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_OBJECT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_RESTRICT_ACCESS_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_OWNERS_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ACTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="259" LINES="112" START_COLUMN="14" START_LINE="148"/>
    </FUNCTION>
    <FUNCTION NAME="CHECK_FORM_ACCESS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="446" LINES="186" START_COLUMN="14" START_LINE="261"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="24" END_LINE="447" LINES="447" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_SETUP_MILESTONE_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_SETUP_MILESTONE_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_SETUP_MILESTONE_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="122" LINES="99" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="207" LINES="81" START_COLUMN="15" START_LINE="127"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="640" LINES="421" START_COLUMN="15" START_LINE="220"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="30" END_LINE="642" LINES="642" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_SPLIT_TBL" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="VARCHAR2(4000)">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="VARCHAR2(4000)" TYPE="TABLE OF VARCHAR2(4000)">
        <COMMENT><![CDATA[Collection Type : TABLE OF VARCHAR2(4000)]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="84" END_LINE="1" LINES="1" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_TASK_DETAIL_REC" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_VIEW_TASK_DETAIL">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_VIEW_TASK_DETAIL" TYPE="TABLE OF MS_AUD_VIEW_TASK_DETAIL">
        <COMMENT><![CDATA[Collection Type : table OF MS_AUD_VIEW_TASK_DETAIL]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_TASK_O" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_TASK_O'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_CREATE_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="39" LINES="8" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_CREATE_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="54" LINES="8" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="19" END_LINE="55" LINES="55" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_TASK_O" SCHEMA="Schema_objects">
    <PROCEDURE NAME="LOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
LOCK_ENTRY : Procedure to lock the object in order to stop
any other transitions happening on the same object.
This routine will set the DD_EDIT_FLAG to N.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_CREATE_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="89" LINES="75" START_COLUMN="15" START_LINE="15"/>
    </PROCEDURE>
    <PROCEDURE NAME="UNLOCK_ENTRY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
UNLOCK_ENTRY : Procedure to unlock the object in order to allow
other transitions on the object.
This routine will set the DD_EDIT_FLAG to Y.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IOP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IOP_CREATE_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="171" LINES="75" START_COLUMN="15" START_LINE="97"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="18" END_LINE="173" LINES="173" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_TASK_P" SCHEMA="Schema_objects">
    <CONSTANT DEFAULT="'MS_AUD_TASK_P'" NAME="GC_PACKAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
Defining Global Variables
------------------------------------------------------------------------ 
]]></COMMENT>
      <RETURN TYPE="VARCHAR2(100)"/>
    </CONSTANT>
    <VARIABLE NAME="GV_PROGRAM_NAME">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="40" LINES="9" START_COLUMN="15" START_LINE="32"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="55" LINES="9" START_COLUMN="15" START_LINE="47"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="19" END_LINE="59" LINES="59" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_TASK_P" SCHEMA="Schema_objects">
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------------
GENERATE_UPDATE_HIERARCHY : Procedure to get the update the xml data hierarchy
---------------------------------------------------------------------------- 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="10" END_LINE="22" LINES="9" START_COLUMN="15" START_LINE="14"/>
    </PROCEDURE>
    <PROCEDURE NAME="UPDATE_HIERARCHY">
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="140" LINES="117" START_COLUMN="15" START_LINE="24"/>
    </PROCEDURE>
    <PROCEDURE NAME="GET_NEXT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
GET_NEXT_ID : Procedure to get the NEXT_ID of the Apps Infra ID
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_ATTRIBUTE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="225" LINES="81" START_COLUMN="15" START_LINE="145"/>
    </PROCEDURE>
    <PROCEDURE NAME="CALL_ETL">
      <COMMENT_FIRST_LINE><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ --------------------------------------------------------------------------
CALL_ETL : ETL Procedure, responsible to load the MS tables
with the data got from Process Designer DS.
------------------------------------------------------------------------ 
]]></COMMENT>
      <ARGUMENT MODE="IN OUT NOCOPY" NAME="IOP_XML_DATA" TYPE="CLOB"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_LOG_NO" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="OP_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="IOP_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_PID" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="17" END_LINE="1016" LINES="779" START_COLUMN="15" START_LINE="238"/>
    </PROCEDURE>
    <SUMMARY END_COLUMN="19" END_LINE="1018" LINES="1018" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_UPLOAD_DATA_INFO" SCHEMA="Schema_objects">
    <VARIABLE NAME="AUDIT_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_REPORT_TEMPLATE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_AUDITEE_RESP_REQUIRED" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_SINGLE_AUDITOR_PROCESS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_PLANNING_SCOPING" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_QUALITY_REVIEWER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_AUDTIORS_ADD_ADDITI_QUES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_ENABLE_AUDIT_SCORING" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_TASK_SPECIFIED_DATES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_AUDITORS_CREATE_TASKS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_ACTION_PLAN_CAN_CREATED" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_AUDITOR_SEND_ISSUES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_APPROVALS_REQUIRED" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SETUP_AUDITOR_TASK_REVIEW" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="SCOPE_BASED_ON" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="PERF_CONFIG_FLAG" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDIT_CLASSIFICATION" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CONDUCTED_BY_ORG" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="23" LINES="23" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_UPLOAD_DATA_INFO_REC" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="MS_AUD_UPLOAD_DATA_INFO">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="MS_AUD_UPLOAD_DATA_INFO" TYPE="TABLE OF MS_AUD_UPLOAD_DATA_INFO">
        <COMMENT><![CDATA[Collection Type : TABLE OF MS_AUD_UPLOAD_DATA_INFO]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="1" END_LINE="4" LINES="4" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <PACKAGE NAME="MS_AUD_UTILITIES" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_UTILITIES<br/>
 Description: This package consists assorted list of procedures and
functions related to Audits module<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="NULL" NAME="G_DEBUG">
      <RETURN TYPE="VARCHAR2(1)"/>
    </VARIABLE>
    <VARIABLE NAME="LV_STATUS">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <FUNCTION NAME="GET_CODE_DESCRIPTION">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return code description for the given code and code group
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return code description for the given code and code group
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CODE_GROUP" TYPE="VARCHAR2">
        <COMMENT><![CDATA[code group as in ms_aud_lov_config.code_group]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CODE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[code as in ms_aud_lov_config.code_code]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_code_group code group as in ms_aud_lov_config.code_group]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_code_code code as in ms_aud_lov_config.code_code]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="21" LINES="2" START_COLUMN="13" START_LINE="20"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APPROVE_ORG_FLOW_UP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return username for the given activity name and org id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return username for the given activity name and org id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="XN_ACTIVITY_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Activity name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="XN_ORG_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_activity_name Activity name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_org_id Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="33" LINES="5" START_COLUMN="13" START_LINE="29"/>
    </FUNCTION>
    <FUNCTION NAME="FN_HIGHLIGHT_AE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the current year is present in the list
 of suggested years given as input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the current year is present in the list
 of suggested years given as input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="SUGGESTED_YEARS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[List of years comma separated]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Y or N as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[suggested_years List of years comma separated]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Y or N as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="73" END_LINE="41" LINES="1" START_COLUMN="13" START_LINE="41"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ASSIGNEE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return list of users comma separated for the given activity name and org id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return list of users comma separated for the given activity name and org id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="XN_ACTIVITY_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Activity name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="XN_ORG_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_activity_name Activity name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_org_id Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="50" LINES="2" START_COLUMN="10" START_LINE="49"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLANYEARS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return list of Audit Plan time_window comma separated for the given core object
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return list of Audit Plan time_window comma separated for the given core object
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core object]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Core object]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="58" LINES="2" START_COLUMN="10" START_LINE="57"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACTITLE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return list of Audit Plan Title comma separated for the given core object
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return list of Audit Plan Title comma separated for the given core object
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core object]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Core object]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="66" LINES="2" START_COLUMN="14" START_LINE="65"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve the status id of the stage based on the workflow code
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve the status id of the stage based on the workflow code
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="XN_CURRENT_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Current stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="XN_PREVIOUS_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Previous stage code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="XN_ACTION_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Action ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_current_stage Current stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_previous_stage Previous stage code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_action_id Action ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="80" LINES="6" START_COLUMN="13" START_LINE="75"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CONFIG_PARAMETERS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to list the available configuration parameters from ms_aud_parameters
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to list the available configuration parameters from ms_aud_parameters
]]></COMMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns string separated by delimiters as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns string separated by delimiters as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="87" LINES="2" START_COLUMN="13" START_LINE="86"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SELECT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct and return URL based on the inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct and return URL based on the inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[String]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJ_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object Type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string String]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_id ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_obj_type Object Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="101" LINES="6" START_COLUMN="13" START_LINE="96"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SINGLE_AUDIT_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the count of Audit Task
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the count of Audit Task
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="109" LINES="2" START_COLUMN="13" START_LINE="108"/>
    </FUNCTION>
    <FUNCTION NAME="FN_FIELDWORK_CLOSE_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the count of Audit Task based on Task Status and Category
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the count of Audit Task based on Task Status and Category
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="117" LINES="2" START_COLUMN="13" START_LINE="116"/>
    </FUNCTION>
    <FUNCTION NAME="FN_ISSUE_FND_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use or deprecated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use or deprecated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="124" LINES="2" START_COLUMN="13" START_LINE="123"/>
    </FUNCTION>
    <FUNCTION NAME="CONFIG_PARAMETERS_ACTFILTER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if parameter IS_Plan_Reviewer_Required is set to Y or N
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if parameter IS_Plan_Reviewer_Required is set to Y or N
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_action Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="132" LINES="2" START_COLUMN="13" START_LINE="131"/>
    </FUNCTION>
    <FUNCTION NAME="CONFIG_PARAMETERS_ACTFILTER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if parameter IS_Plan_Reviewer_Required is set to Y or N
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if parameter IS_Plan_Reviewer_Required is set to Y or N
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="P_CURRENT_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_action Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_current_stage Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="144" LINES="5" START_COLUMN="13" START_LINE="140"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return parameter value for the given parameter name
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return parameter value for the given parameter name
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter name as in ms_aud_parameters.param_name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[param_name Parameter name as in ms_aud_parameters.param_name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="152" LINES="2" START_COLUMN="13" START_LINE="151"/>
    </FUNCTION>
    <FUNCTION NAME="FN_ACTFILTER_BY_AUDIT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_LOCAL_KEY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_CURR_STAGE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_PRE_STAGE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[param_name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="166" LINES="8" START_COLUMN="13" START_LINE="159"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_TEMPLATE_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to extract string from the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to extract string from the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[input string value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[param_name input string value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="174" LINES="2" START_COLUMN="13" START_LINE="173"/>
    </FUNCTION>
    <PROCEDURE NAME="PROCESS_COMMENTS_HISTORY">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to insert comments history into ms_aud_comments_history
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to insert comments history into ms_aud_comments_history
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_KEY_COL_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COMMENTS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_STEP" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_KEY_COL_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_RTF_ATTACH" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column in ms_aud_comments_history]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error message]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_key_col_value Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_comments Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_step Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_action Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_key_col_name Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rtf_attach Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_form_name Column in ms_aud_comments_history]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="203" LINES="13" START_COLUMN="14" START_LINE="191"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_TASK_OWNER_APPROVER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the Task Assignee and the initiator are same
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the Task Assignee and the initiator are same
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use or deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use or deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Param not in use or deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Param not in use or deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="219" LINES="7" START_COLUMN="13" START_LINE="213"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FINAL_APPROVAL_CK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if Final Approval is required for the Task or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if Final Approval is required for the Task or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Workflow Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use or deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Workflow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Param not in use or deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="235" LINES="7" START_COLUMN="13" START_LINE="229"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACTIONS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Action ID as comma separated value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Action ID as comma separated value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="X_FINDING_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Finding ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[x_finding_id Finding ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="243" LINES="2" START_COLUMN="13" START_LINE="242"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_DISPLAY_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Organization Name for the given Org ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Organization Name for the given Org ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_ord_id Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="251" LINES="2" START_COLUMN="13" START_LINE="250"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_EDIT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Organization Name for the given Org ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Organization Name for the given Org ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_ord_id Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="263" LINES="6" START_COLUMN="13" START_LINE="258"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Risk names comma separated for the given Risk IDs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Risk names comma separated for the given Risk IDs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RISK_STORE_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID as comma separated values]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk_store_val Risk ID as comma separated values]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="271" LINES="2" START_COLUMN="13" START_LINE="270"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Core Object names comma separated for the given Core Object IDs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Core Object names comma separated for the given Core Object IDs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CORE_STORE_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Object ID as comma separated values]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_core_store_val Core Object ID as comma separated values]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="279" LINES="2" START_COLUMN="13" START_LINE="278"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Organization names comma separated for the given Organization IDs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Organization names comma separated for the given Organization IDs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID as comma separated values]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_ord_id Organization ID as comma separated values]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="287" LINES="2" START_COLUMN="13" START_LINE="286"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FLOW_DOWN_ORG">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Organization names for the given user
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Organization names for the given user
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="295" LINES="2" START_COLUMN="13" START_LINE="294"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_ST_DT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return start date end date per the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return start date end date per the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ST_DATE" TYPE="DATE">
        <COMMENT><![CDATA[Plan Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_YEAR" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Yead]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCH_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Schedule Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_SCH_START_DT" TYPE="DATE">
        <COMMENT><![CDATA[Schedule Start date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_SCH_TIME_WIN" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Schedule Time Window]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="DATE">
        <COMMENT><![CDATA[Returns a DATE]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_type Plan Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_st_date Plan Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_year Plan Yead]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sch_type Schedule Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sch_start_dt Schedule Start date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sch_time_win Schedule Time Window]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a DATE]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="315" LINES="9" START_COLUMN="13" START_LINE="307"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STAGE_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Stage name for the given Stage ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Stage name for the given Stage ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STAGE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stage ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_stage_id Stage ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="323" LINES="2" START_COLUMN="13" START_LINE="322"/>
    </FUNCTION>
    <FUNCTION NAME="PRFN_RETURN_OWNERS">
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="'OWNERS'" MODE="IN" NAME="LC_ATTRIBUTE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="330" LINES="6" START_COLUMN="13" START_LINE="325"/>
    </FUNCTION>
    <FUNCTION NAME="PRFN_RETURN_OBJECT_NAMES">
      <ARGUMENT MODE="IN" NAME="LV_VALUES" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_TABLE_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="336" LINES="5" START_COLUMN="13" START_LINE="332"/>
    </FUNCTION>
    <FUNCTION NAME="PRFN_RETURN_OWNER_ORGS">
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="LC_ATTRIBUTE" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="18" END_LINE="343" LINES="6" START_COLUMN="13" START_LINE="338"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_TYPE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get description for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get description for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="STORED_VALUE" TYPE="NUMBER">
        <COMMENT><![CDATA[Stored Value as in ms_aud_lov_config.code_code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="GROUP_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Group Name as in ms_aud_lov_config.code_group]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[stored_value Stored Value as in ms_aud_lov_config.code_code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[group_name Group Name as in ms_aud_lov_config.code_group]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="352" LINES="2" START_COLUMN="13" START_LINE="351"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_CLOSURE_APPROVER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get list of users who has activity AUD - Approve Audit Closure
 for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get list of users who has activity AUD - Approve Audit Closure
 for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Param not in use]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Param not in use]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="369" LINES="7" START_COLUMN="13" START_LINE="363"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REPORT_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the Audit Status Name for the given Status ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the Audit Status Name for the given Status ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="STATUS" TYPE="NUMBER">
        <COMMENT><![CDATA[Status ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[status Status ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="377" LINES="2" START_COLUMN="13" START_LINE="376"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALL_CONTACTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get all the Lead Auditors,Managers and Team members
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get all the Lead Auditors,Managers and Team members
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="385" LINES="2" START_COLUMN="13" START_LINE="384"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AC_WITH_SA">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get co_user and co_email from ms_aud_manage_audit_v
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get co_user and co_email from ms_aud_manage_audit_v
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="393" LINES="2" START_COLUMN="13" START_LINE="392"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse the incoming string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse the incoming string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CONTROL_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Input String]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_control_val Input String]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="401" LINES="2" START_COLUMN="13" START_LINE="400"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse the incoming string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse the incoming string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TEST_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_control_val Input String]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="409" LINES="2" START_COLUMN="13" START_LINE="408"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Control Test Task name as comma separated from the given
 ct_control_id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Control Test Task name as comma separated from the given
 ct_control_id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CON_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[ct_control_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_con_val ct_control_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="418" LINES="2" START_COLUMN="13" START_LINE="417"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Control Test Task name as comma separated from the given
 ct_control_id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Control Test Task name as comma separated from the given
 ct_control_id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TEST_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Test ID as in ms_aud_ctrl_test_task_tst.ts_test_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_test_val Test ID as in ms_aud_ctrl_test_task_tst.ts_test_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="427" LINES="2" START_COLUMN="13" START_LINE="426"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SCOPE_DISP_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get display value of LOV MS AUD Audit Based On
 based on the given PID and Stored Value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get display value of LOV MS AUD Audit Based On
 based on the given PID and Stored Value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="SCOPE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stored Value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[scope_id Stored Value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="437" LINES="2" START_COLUMN="13" START_LINE="436"/>
    </FUNCTION>
    <FUNCTION NAME="GET_EDIT_USER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Lead Auditor as comma separated for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Lead Auditor as comma separated for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="445" LINES="2" START_COLUMN="13" START_LINE="444"/>
    </FUNCTION>
    <FUNCTION NAME="GET_NON_EDIT_USER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Team Members as comma separated for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Team Members as comma separated for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="453" LINES="2" START_COLUMN="13" START_LINE="452"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CLOSE_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to trigger workflow F003 of MS_AUD_MANAGE_AUDIT
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to trigger workflow F003 of MS_AUD_MANAGE_AUDIT
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="461" LINES="2" START_COLUMN="16" START_LINE="460"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CHK_EXIST_TASK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if any task exists for the given set of inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if any task exists for the given set of inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJ_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant AUE,RSK etc]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJ_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[core_objects,fn_related_risks etc]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_obj_type Constant AUE,RSK etc]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_obj_value core_objects,fn_related_risks etc]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="475" LINES="6" START_COLUMN="13" START_LINE="470"/>
    </FUNCTION>
    <FUNCTION NAME="GET_APPROVE_USER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get list of users as comma separated for the activity AUD - Manages the Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get list of users as comma separated for the activity AUD - Manages the Audit
]]></COMMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="482" LINES="2" START_COLUMN="13" START_LINE="481"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use or deprecated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use or deprecated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="489" LINES="2" START_COLUMN="13" START_LINE="488"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS_DISPLAY_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Status name for the given Status ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Status name for the given Status ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="S_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Status ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[s_id Status ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="497" LINES="2" START_COLUMN="13" START_LINE="496"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDITOR_AVAILABILITY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check the availability of an Auditor for the given time period
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check the availability of an Auditor for the given time period
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DT" TYPE="DATE">
        <COMMENT><![CDATA[Start date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_END_DT" TYPE="DATE">
        <COMMENT><![CDATA[End date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDITOR_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Auditor Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_start_dt Start date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_end_dt End date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_auditor_user_name Auditor Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="511" LINES="6" START_COLUMN="13" START_LINE="506"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get list of username as comma separated values
 who has activity AUD - Management Support
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get list of username as comma separated values
 who has activity AUD - Management Support
]]></COMMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="519" LINES="2" START_COLUMN="13" START_LINE="518"/>
    </FUNCTION>
    <PROCEDURE NAME="UPDATE_MILESTONE">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to udpate the milestone date in ms_aud_manage_audit_v
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to udpate the milestone date in ms_aud_manage_audit_v
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[End date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_EVENT_NO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[ms_aud_manage_audit_v.km_event_in_system]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_EVENT_DATE" TYPE="DATE">
        <COMMENT><![CDATA[date value to be updated with]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Error handle ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER">
        <COMMENT><![CDATA[Error sequence]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id End date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_event_no ms_aud_manage_audit_v.km_event_in_system]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_event_date date value to be updated with]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_handle_id Error handle ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_seq Error sequence]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[xn_error_code Error Code]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="537" LINES="8" START_COLUMN="14" START_LINE="530"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_ISSUE_TITLE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Issue Title
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Issue Title
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pi_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="545" LINES="2" START_COLUMN="13" START_LINE="544"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Task Name
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Task Name
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="553" LINES="2" START_COLUMN="13" START_LINE="552"/>
    </FUNCTION>
    <PROCEDURE NAME="CONFIGURE_LABEL">
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_AUDITABLE_ENTITY" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="561" LINES="7" START_COLUMN="14" START_LINE="555"/>
    </PROCEDURE>
    <PROCEDURE NAME="CREATE_INFOLET_TS_VIEW">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to create View for the given Infolet Name or Metric ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to create View for the given Infolet Name or Metric ID
]]></COMMENT>
      <ARGUMENT DEFAULT="'TABLE'" MODE="IN" NAME="I_OBJECT_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_INFOLET_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Metricname]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VIEW_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[View name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error Message]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_name Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_infolet_name Metricname]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_view_name View name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error Message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="577" LINES="7" START_COLUMN="14" START_LINE="571"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_CURRENT_AUDIT_URLS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_title Audit Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="595" LINES="8" START_COLUMN="13" START_LINE="588"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CURRENT_AUD_TEAM_LINK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="607" LINES="5" START_COLUMN="13" START_LINE="603"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SETUP_AUDITOR_CRT_TASKS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_SETUP_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_setup_value Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="621" LINES="6" START_COLUMN="13" START_LINE="616"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if an Audit contains any aps_controls
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if an Audit contains any aps_controls
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_RISK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk Param not in use]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="633" LINES="5" START_COLUMN="13" START_LINE="629"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_AE_FOR_RISKS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Auditable Entities for the given Risks
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Auditable Entities for the given Risks
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RISK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk Param not in use]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="647" LINES="7" START_COLUMN="13" START_LINE="641"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ORG_FOR_RISKS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Organization for the given Risks
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Organization for the given Risks
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RISK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER">
        <COMMENT><![CDATA[Scope]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_risk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_org Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_scope Scope]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="661" LINES="6" START_COLUMN="13" START_LINE="656"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_AE_FOR_ORGS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Auditable Entities for the given Org
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Auditable Entities for the given Org
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER">
        <COMMENT><![CDATA[Scope]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_org Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process Process ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_scope Scope]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="675" LINES="6" START_COLUMN="13" START_LINE="670"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ORG_FOR_AE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the Organization name for the Auditable Entities
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the Organization name for the Auditable Entities
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER">
        <COMMENT><![CDATA[Scope]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process Process ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_org Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_scope Scope]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="689" LINES="6" START_COLUMN="13" START_LINE="684"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_AE_FOR_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Auditable Entities for the given Risk
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Auditable Entities for the given Risk
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RISK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_risk Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="697" LINES="2" START_COLUMN="13" START_LINE="696"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_ORG_FOR_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Organization for the given Risk
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Organization for the given Risk
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RISK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_risk Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="705" LINES="2" START_COLUMN="13" START_LINE="704"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_AE_FOR_ORG">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Auditable Entities for the given Organization
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Auditable Entities for the given Organization
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="NUMBER">
        <COMMENT><![CDATA[Org ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_org Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="713" LINES="2" START_COLUMN="13" START_LINE="712"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_ORG_FOR_AE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Organization for the given Auditable Entities
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Organization for the given Auditable Entities
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[process_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_process process_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="721" LINES="2" START_COLUMN="13" START_LINE="720"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CTRL_ISSUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of findings for the given task_id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of findings for the given task_id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="V_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="68" END_LINE="728" LINES="1" START_COLUMN="16" START_LINE="728"/>
    </FUNCTION>
    <PROCEDURE NAME="REVOKE_OPEN_AUDIT_ASSIGNMENT">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="734" LINES="5" START_COLUMN="14" START_LINE="730"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPDATE_SETUP_KEYMILESTONE">
      <ARGUMENT MODE="IN" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="5" END_LINE="739" LINES="4" START_COLUMN="14" START_LINE="736"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_CONFIG">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Lead Auditor for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Lead Auditor for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param not in use]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="FORMNAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Formname]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[param_name Param not in use]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[formname Formname]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="753" LINES="6" START_COLUMN="13" START_LINE="748"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITOR_GROUP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Auditor Groups display value as comma separated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Auditor Groups display value as comma separated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AUDITOR_GROUP" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Auditor Group ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOV_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[LOV Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[auditor_group Auditor Group ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lov_name LOV Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="762" LINES="2" START_COLUMN="13" START_LINE="761"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_POPULATE_ASSESS_FROM_RISK">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MSG" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="5" END_LINE="767" LINES="4" START_COLUMN="14" START_LINE="764"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Auditor Status
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Auditor Status
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Auditor ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Auditor ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="775" LINES="2" START_COLUMN="13" START_LINE="774"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_INVOKE_SCHEDULES">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to invoke Risk Data Population scheduler
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to invoke Risk Data Population scheduler
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Error Message]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error Message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="785" LINES="4" START_COLUMN="14" START_LINE="782"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_AUDIT_TRAIL_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Status of the Audit based on its stage
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Status of the Audit based on its stage
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PROC_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[proc_inst_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="799" LINES="6" START_COLUMN="13" START_LINE="794"/>
    </FUNCTION>
    <FUNCTION NAME="PARSE_ORGANIZATIONS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check the org_from_core is same as org_from_plan
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check the org_from_core is same as org_from_plan
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="ORG_FROM_CORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID from Core]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ORG_FROM_PLAN" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID from Plan as commas seperated string]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[org_from_core Organization ID from Core]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[org_from_plan Organization ID from Plan as commas seperated string]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="811" LINES="5" START_COLUMN="13" START_LINE="807"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COUNT_SCENARIOS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to count of Risk Scenarios
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to count of Risk Scenarios
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="ORG_FROM_CORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[org_from_core Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="819" LINES="2" START_COLUMN="13" START_LINE="818"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_POPULATE_SCORE_FOR_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to insert data to the view MS_aud_risk_rollup_v when
 there is data in MS_rsk_risk_rollup
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to insert data to the view MS_aud_risk_rollup_v when
 there is data in MS_rsk_risk_rollup
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MSG" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error Message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="830" LINES="4" START_COLUMN="14" START_LINE="827"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_POPULATE_SCORE_FOR_PRC">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to insert data to the view ms_aud_rsk_core_object_rllp_v when
 there is data in ms_rsk_core_object_rollup
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to insert data to the view ms_aud_rsk_core_object_rllp_v when
 there is data in ms_rsk_core_object_rollup
]]></COMMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER">
        <COMMENT><![CDATA[Error Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MSG" TYPE="VARCHAR2"/>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_code Error Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[o_error_message Error Message]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="841" LINES="4" START_COLUMN="14" START_LINE="838"/>
    </PROCEDURE>
    <FUNCTION NAME="MS_AUD_SPLIT">
      <COMMENT_FIRST_LINE><![CDATA[ A pipelined function to convert a delimited string to separate rows
 based on the delimiter
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ A pipelined function to convert a delimited string to separate rows
 based on the delimiter
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_LIST" TYPE="VARCHAR2">
        <COMMENT><![CDATA[String to be split]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="','" MODE="IN" NAME="P_DEL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Delimiter contained in the String]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_SPLIT_TBL">
        <COMMENT><![CDATA[Returns data in ms_aud_split_tbl as pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_list String to be split]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_del Delimiter contained in the String]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data in ms_aud_split_tbl as pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="40" END_LINE="851" LINES="2" START_COLUMN="13" START_LINE="850"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RSRC_POOL_FROM_RSM">
      <COMMENT_FIRST_LINE><![CDATA[ A pipelined function to get Resource data from MS_RSM_RESOURCE_POOL
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ A pipelined function to get Resource data from MS_RSM_RESOURCE_POOL
]]></COMMENT>
      <RETURN TYPE="MS_AUD_RSM_RESOURCES">
        <COMMENT><![CDATA[Returns data in ms_aud_rsm_resources as pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data in ms_aud_rsm_resources as pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="44" END_LINE="858" LINES="2" START_COLUMN="13" START_LINE="857"/>
    </FUNCTION>
    <FUNCTION NAME="TRAIL_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get or compare the Status of the Audit based on given
 Audit ID and Status
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get or compare the Status of the Audit based on given
 Audit ID and Status
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aid Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="869" LINES="2" START_COLUMN="13" START_LINE="868"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SYS_PARAMETER_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit Parameter value for the given
 Parameter name from ms_aud_parameters
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit Parameter value for the given
 Parameter name from ms_aud_parameters
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[param_name Parameter Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="878" LINES="2" START_COLUMN="13" START_LINE="877"/>
    </FUNCTION>
    <FUNCTION NAME="MIN_INSTANCE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get minimum Instance ID value for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get minimum Instance ID value for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUBMER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aid Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUBMER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="886" LINES="2" START_COLUMN="13" START_LINE="885"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INT_PARAMETER_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit Parameter value for the given
 Parameter name from ms_aud_parameters
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit Parameter value for the given
 Parameter name from ms_aud_parameters
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[param_name Parameter Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="895" LINES="2" START_COLUMN="13" START_LINE="894"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get display values as comma separated
 for the given User ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get display values as comma separated
 for the given User ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id User ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="904" LINES="2" START_COLUMN="13" START_LINE="903"/>
    </FUNCTION>
    <FUNCTION NAME="COMPARE_COMMA_SEPARATED_STRING">
      <COMMENT_FIRST_LINE><![CDATA[ Function to compare two comma separated strings
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to compare two comma separated strings
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING_VALUES1" TYPE="VARCHAR2">
        <COMMENT><![CDATA[comma separated string]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING_VALUES2" TYPE="VARCHAR2">
        <COMMENT><![CDATA[comma separated string]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="PLS_INTEGER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string_values1 comma separated string]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string_values2 comma separated string]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="25" END_LINE="916" LINES="5" START_COLUMN="13" START_LINE="912"/>
    </FUNCTION>
    <FUNCTION NAME="TRAIL_USER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get User full name based on Audit Status and ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get User full name based on Audit Status and ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aid Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="926" LINES="2" START_COLUMN="13" START_LINE="925"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get User ID based on User name
 Added below functions by Susil on 10 07 2011 for Bug Id 35663 and Enhancement
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get User ID based on User name
 Added below functions by Susil on 10 07 2011 for Bug Id 35663 and Enhancement
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="935" LINES="2" START_COLUMN="13" START_LINE="934"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_NAME_BY_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get User full name based on Audit Status and ID
 Added below functions by Susil on 10 07 2011 for Bug Id 35663 and Enhancement
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get User full name based on Audit Status and ID
 Added below functions by Susil on 10 07 2011 for Bug Id 35663 and Enhancement
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_USER_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[User ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_user_id User ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="944" LINES="2" START_COLUMN="13" START_LINE="943"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to search the column perf_config_flag which is in Name,Value pair format and
 retrieve the Value for the given name
 Added below functions by Susil on 10 07 2011 for Bug Id 35663 and Enhancement
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to search the column perf_config_flag which is in Name,Value pair format and
 retrieve the Value for the given name
 Added below functions by Susil on 10 07 2011 for Bug Id 35663 and Enhancement
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_param_name Parameter Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="958" LINES="5" START_COLUMN="13" START_LINE="954"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CLOSURE_FLAG_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get number of records for the given Audit ID
 with closure flag as FREEZE from ms_aud_manage_audit_v
 Function added by susil on 13 07 2011 for Enable Link thru Data tables enhancement
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get number of records for the given Audit ID
 with closure flag as FREEZE from ms_aud_manage_audit_v
 Function added by susil on 13 07 2011 for Enable Link thru Data tables enhancement
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="970" LINES="4" START_COLUMN="13" START_LINE="967"/>
    </FUNCTION>
    <FUNCTION NAME="MIN_INSTANCE_PLAN">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get minimum Instance ID for the given Process Instance ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get minimum Instance ID for the given Process Instance ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="978" LINES="2" START_COLUMN="13" START_LINE="977"/>
    </FUNCTION>
    <FUNCTION NAME="TRAIL_STATUS_PLAN">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the Audit Status is same as the
 status passed as parameter to the function
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the Audit Status is same as the
 status passed as parameter to the function
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PLAN_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[plan_status Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="989" LINES="2" START_COLUMN="13" START_LINE="988"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_DISPLAY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get User full name for the given
 comma separated usernames
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get User full name for the given
 comma separated usernames
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="USER_NAME_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Usernames]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[user_name_value Usernames]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="998" LINES="2" START_COLUMN="13" START_LINE="997"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PARENT_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Risk IDs as comma separated that matches
 the given set of Risk IDs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Risk IDs as comma separated that matches
 the given set of Risk IDs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_PARENT_RISK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_LIST_OF_RISK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk IDs]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_parent_risk Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_list_of_risk Risk IDs]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1011" LINES="5" START_COLUMN="13" START_LINE="1007"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TSK_EXEC_RESULT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get display value of LOV
 MS AUD Audit Checklist task Execution Result and given stored value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get display value of LOV
 MS AUD Audit Checklist task Execution Result and given stored value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="ST_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stored Value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[st_val Stored Value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1020" LINES="2" START_COLUMN="13" START_LINE="1019"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ATTR_SCORE_VAL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get stored value of Score from ms_chk_default_attribute
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get stored value of Score from ms_chk_default_attribute
]]></COMMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1027" LINES="2" START_COLUMN="13" START_LINE="1026"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SECTIONS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Section Name for the given Section ID
 and Checklist ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Section Name for the given Section ID
 and Checklist ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SEC_SECTION_ID" TYPE="MS_CHK_SECTION_SEC.SEC_SECTION_ID%TYPE">
        <COMMENT><![CDATA[Section ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="MS_CHK_CHKLIST_MASTER.CHECKLIST_ID%TYPE">
        <COMMENT><![CDATA[Checklist ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sec_section_id Section ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_checklist_id Checklist ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1040" LINES="5" START_COLUMN="13" START_LINE="1036"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ROOT_CAUSE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get display value as comma separated of LOV
 MS AUD Root Cause and given stored value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get display value as comma separated of LOV
 MS AUD Root Cause and given stored value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STORED_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stored Value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_stored_value Stored Value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1049" LINES="2" START_COLUMN="13" START_LINE="1048"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONT_FACTORS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get display value as comma separated of LOV
 MS AUD Contributing Factors and given stored value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get display value as comma separated of LOV
 MS AUD Contributing Factors and given stored value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STORED_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stored Value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_stored_value Stored Value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1058" LINES="2" START_COLUMN="13" START_LINE="1057"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PARENT_SECTION">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Section Name for the given Section ID
 from ms_chk_section_sec
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Section Name for the given Section ID
 from ms_chk_section_sec
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SEC_FK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[sec_pk of ms_chk_section_sec]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sec_fk sec_pk of ms_chk_section_sec]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1067" LINES="2" START_COLUMN="13" START_LINE="1066"/>
    </FUNCTION>
    <FUNCTION NAME="EXCLUDE_EXPIRED">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return number 1 or 2 based on the inputs given
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return number 1 or 2 based on the inputs given
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_VALID_FROM" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Date value]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VALID_UNTIL" TYPE="VARCHAR2"/>
      <RETURN TYPE="PLS_INTEGER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_valid_from Date value]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_valid_from Date value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="25" END_LINE="1079" LINES="5" START_COLUMN="13" START_LINE="1075"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COMMENTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Plan Comments based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Plan Comments based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PLAN_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter deprecated]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[plan_action Parameter deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1089" LINES="2" START_COLUMN="13" START_LINE="1088"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COMMENTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Plan Comments based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Plan Comments based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1097" LINES="2" START_COLUMN="12" START_LINE="1096"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_COMMENTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Plan Comments for Audit Action 8
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Plan Comments for Audit Action 8
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="AUD_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant indicating Audit Action]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[aud_action Constant indicating Audit Action]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1107" LINES="2" START_COLUMN="12" START_LINE="1106"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_NEW_AUDIT_COMMENTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Plan Comments based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Plan Comments based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[inst Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1116" LINES="2" START_COLUMN="12" START_LINE="1115"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DISTRIBUTION_PREFERENCE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Yes or No based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Yes or No based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="CO_CON_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[co_con_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="OPT" TYPE="NUMBER">
        <COMMENT><![CDATA[Opt]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[co_con_id co_con_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[opt Opt]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1125" LINES="2" START_COLUMN="13" START_LINE="1124"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_SCORE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to calculate and return Audit Score for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to calculate and return Audit Score for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1133" LINES="2" START_COLUMN="13" START_LINE="1132"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_ENT_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse the given Risk Name and compare its Risk ID
 with the given Risk ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse the given Risk Name and compare its Risk ID
 with the given Risk ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="RISK_AUD_ENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk Name as comma separated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="RISK_CORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns success message as a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[risk_aud_ent Risk Name as comma separated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[risk_core Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns success message as a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="1146" LINES="5" START_COLUMN="13" START_LINE="1142"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_ENT_ORGS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse the given string org_core and compare
 it with the given org_aud_ent
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse the given string org_core and compare
 it with the given org_aud_ent
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="ORG_AUD_ENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Org]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ORG_CORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Org as comma separated]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns success message as a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[org_aud_ent Core Org]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[org_core Core Org as comma separated]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns success message as a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="1159" LINES="5" START_COLUMN="13" START_LINE="1155"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_ENT_PROCESS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse the given Core Object Name and compare its Object ID
 with the given Object ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse the given Core Object Name and compare its Object ID
 with the given Object ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PROCESS_AUD_ENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object Name as comma separated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PROCESS_CORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns success message as a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[process_aud_ent Object Name as comma separated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[process_core Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns success message as a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="1172" LINES="5" START_COLUMN="13" START_LINE="1168"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OFFLINE_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get offline status for an Process Instance ID
 from si_event_assignments
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get offline status for an Process Instance ID
 from si_event_assignments
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_PROC_ID" TYPE="SI_EVENT_ASSIGNMENTS.PROCESS_INSTANCE_ID%TYPE">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_proc_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1183" LINES="4" START_COLUMN="13" START_LINE="1180"/>
    </FUNCTION>
    <FUNCTION NAME="INCLUDE_EXPIRED">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns 1 or 2 based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns 1 or 2 based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_VALID_FROM" TYPE="DATE">
        <COMMENT><![CDATA[Date value]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VALID_UNTIL" TYPE="DATE">
        <COMMENT><![CDATA[Date value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="PLS_INTEGER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_valid_from  Date value]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_valid_until Date value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="25" END_LINE="1192" LINES="2" START_COLUMN="13" START_LINE="1191"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XSL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the XSL stylesheet for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the XSL stylesheet for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Source Flow Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Destination Flow Code]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_source_flow  Source Flow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dest_flow Destination Flow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1201" LINES="2" START_COLUMN="13" START_LINE="1200"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_STORED_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Risk IDs comma separated for the given Audit ID
 from ms_grc_risk
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Risk IDs comma separated for the given Audit ID
 from ms_grc_risk
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1210" LINES="2" START_COLUMN="13" START_LINE="1209"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_STORED_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Core Object IDs comma separated for the given Audit ID
 from ms_grc_core_object
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Core Object IDs comma separated for the given Audit ID
 from ms_grc_core_object
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1219" LINES="2" START_COLUMN="13" START_LINE="1218"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_STORED_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Org Entity IDs comma separated for the given Audit ID
 from si_org_entities_t
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Org Entity IDs comma separated for the given Audit ID
 from si_org_entities_t
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1228" LINES="2" START_COLUMN="13" START_LINE="1227"/>
    </FUNCTION>
    <PROCEDURE NAME="UPDATE_FIELDS">
      <COMMENT_FIRST_LINE><![CDATA[ Procedure to update the fields of the given XML data
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Procedure to update the fields of the given XML data
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[From Stage]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[To Stage]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML namespace]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB">
        <COMMENT><![CDATA[XML data to be updated]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_from_stage From Stage]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_to_stage To Stage]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[gc_data_namespace XML namespace]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data XML data to be updated]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="5" END_LINE="1242" LINES="6" START_COLUMN="14" START_LINE="1237"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_XML_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to extract value from XML fields from the given XML
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to extract value from XML fields from the given XML
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_VARIABLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Filed name whose value to be extracted]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_OUT_XML" TYPE="XMLTYPE">
        <COMMENT><![CDATA[XML data]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML namespace]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_variable Filed name whose value to be extracted]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_out_xml XML data]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[gc_data_namespace XML namespace]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1256" LINES="6" START_COLUMN="13" START_LINE="1251"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct dynamic sql from the given inputs
 and return value as comma separated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct dynamic sql from the given inputs
 and return value as comma separated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column Name part of dynamic sql]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Table name of the dynamic sql]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_column_name Column Name part of dynamic sql]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_table_name Table name of the dynamic sql]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1271" LINES="6" START_COLUMN="13" START_LINE="1266"/>
    </FUNCTION>
    <FUNCTION NAME="DELETENODE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to delete node from the gievn XML data
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to delete node from the gievn XML data
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_IN_XML" TYPE="XMLTYPE">
        <COMMENT><![CDATA[XML data]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="REGION_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Region Name of XML data]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="MANDATORY_FIELD" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Part of Extract XML syntax]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML Namespace]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="XMLTYPE">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_in_xml XML data]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[region_name Region Name of XML data]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[mandatory_field Part of Extract XML syntax]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[gc_data_namespace XML Namespace]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="21" END_LINE="1287" LINES="7" START_COLUMN="13" START_LINE="1281"/>
    </FUNCTION>
    <FUNCTION NAME="MLOV_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct dynamic sql from the given inputs
 and return value as comma separated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct dynamic sql from the given inputs
 and return value as comma separated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CONDITION_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Condition value of dynamic sql]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CONDITION_COLUMN" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Condition Column Name of dynamic sql]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column Name of dynamic sql]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Table name of the dynamic sql]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_condition_value Condition value of dynamic sql]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_condition_column Condition Column Name of dynamic sql]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_column_name Column Name of dynamic sql]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_table_name Table name of the dynamic sql]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1304" LINES="7" START_COLUMN="13" START_LINE="1298"/>
    </FUNCTION>
    <FUNCTION NAME="UPDATE_INSTANCE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to update the instance number of the incoming XML data
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to update the instance number of the incoming XML data
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_IN_XML" TYPE="XMLTYPE">
        <COMMENT><![CDATA[XML data]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[XML Namespace]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="XMLTYPE">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_in_xml XML data]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[gc_data_namespace XML Namespace]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="21" END_LINE="1313" LINES="2" START_COLUMN="13" START_LINE="1312"/>
    </FUNCTION>
    <FUNCTION NAME="PARSE_STRING">
      <COMMENT_FIRST_LINE><![CDATA[ Function to conver delimited string to table of records
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to conver delimited string to table of records
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="CLOB">
        <COMMENT><![CDATA[String to be parsed]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Delimiter]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_VARCHAR2_ARRAY">
        <COMMENT><![CDATA[Returns data as ms_varchar2_array]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string String to be parsed]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_delimiter Delimiter]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as ms_varchar2_array]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="31" END_LINE="1322" LINES="2" START_COLUMN="13" START_LINE="1321"/>
    </FUNCTION>
    <FUNCTION NAME="EDITOR_OWNERSHIP_CHECK">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="1330" LINES="7" START_COLUMN="16" START_LINE="1324"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USERS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to usernames as comma separated values for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to usernames as comma separated values for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Flow Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instanc ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Flow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_id Instanc ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="1345" LINES="6" START_COLUMN="10" START_LINE="1340"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INITIATOR">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct dynamic sql and get obj_modified_by or obj_Created_by
 from the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct dynamic sql and get obj_modified_by or obj_Created_by
 from the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Flow Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instanc ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Flow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_id Instanc ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="1361" LINES="6" START_COLUMN="10" START_LINE="1356"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INITIATOR_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to usernames from the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to usernames from the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Flow Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instanc ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Flow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_id Instanc ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="1376" LINES="6" START_COLUMN="10" START_LINE="1371"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUTO_APPROVE_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Y or N based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Y or N based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instanc ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Flow Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_id Instanc ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1392" LINES="7" START_COLUMN="13" START_LINE="1386"/>
    </FUNCTION>
    <FUNCTION NAME="GET_GRC_OBJECT_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct dynamic sql and return Object name
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct dynamic sql and return Object name
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID as in SI_ORG_ENTITIES.ORG_ENTITY_ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object Type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object ID as in SI_ORG_ENTITIES.ORG_ENTITY_ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_type Object Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="35" END_LINE="1404" LINES="5" START_COLUMN="10" START_LINE="1400"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHK_VALID_USR_AVLBLTY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check validity and availability of users in workflow.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check validity and availability of users in workflow.
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_CUR_STAGE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Current Stage Code]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ACTION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_ORG_ENTITY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org Entity ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_cur_stage Current Stage Code]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_action Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_type Object Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_org_entity_ID Org Entity ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="31" END_LINE="1424" LINES="9" START_COLUMN="10" START_LINE="1416"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_TEAM">
      <COMMENT_FIRST_LINE><![CDATA[ Function to extract parameter value of Team from ms_aud_audit.perf_config_flag
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to extract parameter value of Team from ms_aud_audit.perf_config_flag
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_param_name Parameter name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1436" LINES="5" START_COLUMN="10" START_LINE="1432"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_PLANID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to extract parameter value of Team from ms_aud_plan_audit_v.Temp_Config_Flag
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to extract parameter value of Team from ms_aud_plan_audit_v.Temp_Config_Flag
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PLAN_ID" TYPE="MS_AUD_AUDIT_PLAN.PLAN_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_param_name Parameter name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1448" LINES="5" START_COLUMN="10" START_LINE="1444"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DISPLAY_SECTIONS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Section Name as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Section Name as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Checklist ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SEC_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Section ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_chk_id Checklist ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_sec_id Section ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1460" LINES="5" START_COLUMN="11" START_LINE="1456"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MANAGE_AUDIT_COMMENT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to Audit Comments for the given PID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to Audit Comments for the given PID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="1468" LINES="2" START_COLUMN="11" START_LINE="1467"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_REL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Object Name as comma separated string for the given
 Object ID and Type
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Object Name as comma separated string for the given
 Object ID and Type
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_OBJ_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LV_TGT_OBJ_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object Type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_obj_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_tgt_obj_type Object Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1478" LINES="2" START_COLUMN="11" START_LINE="1477"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_CONF_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse given name,value pair string and extract
 a value based on the gievn parameter
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse given name,value pair string and extract
 a value based on the gievn parameter
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_CONF_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[String as name,value pair]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param Name whose value to be extracted]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_conf_flag String as name,value pair]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_param_name Param Name whose value to be extracted]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1488" LINES="2" START_COLUMN="11" START_LINE="1487"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_CLOSID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse ms_aud_audit.perf_config_flag in name,value pair string
 and extract a value based on the gievn parameter
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse ms_aud_audit.perf_config_flag in name,value pair string
 and extract a value based on the gievn parameter
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Param Name whose value to be extracted]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_param_name Param Name whose value to be extracted]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1501" LINES="5" START_COLUMN="10" START_LINE="1497"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LOCALE_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Locale ID from si_locales
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Locale ID from si_locales
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_LOCALE_STR" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Locale String]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_locale_str Locale String]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1508" LINES="2" START_COLUMN="10" START_LINE="1507"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LOCALE_STR">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Locale String from si_locales
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Locale String from si_locales
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_LOCALE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Locale ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_locale_id Locale ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1516" LINES="2" START_COLUMN="10" START_LINE="1515"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_LOCALE_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Locale ID based on the username
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Locale ID based on the username
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LV_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lv_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1524" LINES="2" START_COLUMN="10" START_LINE="1523"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_AUD_MAN_DISP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get User full name as comma separated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get User full name as comma separated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id User ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1532" LINES="2" START_COLUMN="13" START_LINE="1531"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_LEAD_AUD_DISP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get User full name as comma separated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get User full name as comma separated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_id User ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1540" LINES="2" START_COLUMN="13" START_LINE="1539"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_URL_BASEDON_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construnct URL from the given input
 Internally calls function ms_aud_utilities.fn_get_audit_url_overarching
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construnct URL from the given input
 Internally calls function ms_aud_utilities.fn_get_audit_url_overarching
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Login ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id Login ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_title Audit Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1556" LINES="6" START_COLUMN="10" START_LINE="1551"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REOPENED_PLAN_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Plan End date for the given Plan ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Plan End date for the given Plan ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_id Plan ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1564" LINES="2" START_COLUMN="10" START_LINE="1563"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FINDING_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Finding values from MS_AUD_DRAFT_ISSUES_V by
 constructing dynamic SQL
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Finding values from MS_AUD_DRAFT_ISSUES_V by
 constructing dynamic SQL
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COL_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column Name to be included in the SELECT statement]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_col_name Column Name to be included in the SELECT statement]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1574" LINES="2" START_COLUMN="10" START_LINE="1573"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COUNT_ACTIONS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Action count
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Action count
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="1582" LINES="2" START_COLUMN="10" START_LINE="1581"/>
    </FUNCTION>
    <FUNCTION NAME="PLAN_EDITABILITY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construnct URL based on the security the username has
 Internally calls function ms_aud_utilities.plan_edit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construnct URL based on the security the username has
 Internally calls function ms_aud_utilities.plan_edit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_EDIT_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit Flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_USER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_object_type Object Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_edit_flag Edit Flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_status Plan Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_user Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1601" LINES="7" START_COLUMN="10" START_LINE="1595"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COACHING_ICON">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Yes or No based in the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Yes or No based in the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1613" LINES="5" START_COLUMN="10" START_LINE="1609"/>
    </FUNCTION>
    <FUNCTION NAME="PLAN_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Plan status ID based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Plan status ID based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pramater deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Status ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_id Pramater deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_status Plan Status ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="1625" LINES="4" START_COLUMN="10" START_LINE="1622"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_OWNER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Task Owner from ms_aud_audit_task
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Task Owner from ms_aud_audit_task
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="V_FN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Finding ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_fn_id Finding ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="23" END_LINE="1633" LINES="2" START_COLUMN="10" START_LINE="1632"/>
    </FUNCTION>
    <FUNCTION NAME="COA_PARSE_STRING">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_VARCHAR2_ARRAY">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="35" END_LINE="1640" LINES="2" START_COLUMN="10" START_LINE="1639"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COA_PARAMETER_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_CONF_FLAG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="1647" LINES="2" START_COLUMN="10" START_LINE="1646"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COA_PARAMETER_CHAR_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_CONF_FLAG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="1654" LINES="2" START_COLUMN="10" START_LINE="1653"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APS_RSK_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the adhoc risk display value by passing risk id and audit_id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the adhoc risk display value by passing risk id and audit_id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RISK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1666" LINES="5" START_COLUMN="10" START_LINE="1662"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APS_CTL_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Control Object Name for the given Contorl ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Control Object Name for the given Contorl ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CONTROL_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Control ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_control_id Control ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1678" LINES="5" START_COLUMN="10" START_LINE="1674"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APS_TST_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Test Object Name for the given Test ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Test Object Name for the given Test ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TEST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_control_id Control ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1690" LINES="5" START_COLUMN="10" START_LINE="1686"/>
    </FUNCTION>
    <FUNCTION NAME="FN_OVERARCHING_PLAN_TITLE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL from the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL from the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_id Plan ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="1699" LINES="3" START_COLUMN="10" START_LINE="1697"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RISK_SCORE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Risk score
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Risk score
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Object ID as in ms_rsk_core_object_rollup.core_object_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="'NA'" MODE="IN" NAME="I_SCENARIO_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Core Object ID as in ms_rsk_core_object_rollup.core_object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_scenario_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1708" LINES="2" START_COLUMN="10" START_LINE="1707"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1715" LINES="2" START_COLUMN="10" START_LINE="1714"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_YEARS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Plan Years for the given Core Object ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Plan Years for the given Core Object ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Object ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Core Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1723" LINES="2" START_COLUMN="10" START_LINE="1722"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SCENARIO_FROM_RISK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to pipe out Scenario ID and Name from MS_RSK_SCENARIOS_SCN
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to pipe out Scenario ID and Name from MS_RSK_SCENARIOS_SCN
]]></COMMENT>
      <RETURN TYPE="MS_AUD_SCENARIO_ASSESSMENT">
        <COMMENT><![CDATA[Returns data as ms_aud_scenario_assessment]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as ms_aud_scenario_assessment]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="47" END_LINE="1730" LINES="2" START_COLUMN="10" START_LINE="1729"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_CLASSIFICATION1">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1746" LINES="6" START_COLUMN="14" START_LINE="1741"/>
    </FUNCTION>
    <FUNCTION NAME="FN_STATUS_COUNT_AUD_CLASS1">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="28" END_LINE="1764" LINES="7" START_COLUMN="13" START_LINE="1758"/>
    </FUNCTION>
    <FUNCTION NAME="FN_STATUS_COUNT_AUD_TYPE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_type Audit Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1781" LINES="7" START_COLUMN="10" START_LINE="1775"/>
    </FUNCTION>
    <FUNCTION NAME="FN_STATUS_COUNT_AUD_CLASS2">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1797" LINES="6" START_COLUMN="10" START_LINE="1792"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NON_COMPLAINT_CLASS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Rating]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_rating Audit Rating]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="28" END_LINE="1817" LINES="9" START_COLUMN="14" START_LINE="1809"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_ENTITY_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Org Entity ID as comma separated for the given username
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Org Entity ID as comma separated for the given username
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User anem]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name User anem]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="1825" LINES="2" START_COLUMN="10" START_LINE="1824"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NON_COMPLAINT_ORG">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="28" END_LINE="1842" LINES="7" START_COLUMN="12" START_LINE="1836"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_CLASSIFICATION2">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1858" LINES="6" START_COLUMN="10" START_LINE="1853"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_TYPESSCH">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_type Audit Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1874" LINES="6" START_COLUMN="10" START_LINE="1869"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_TYPESSTRT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_type Audit Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1890" LINES="6" START_COLUMN="10" START_LINE="1885"/>
    </FUNCTION>
    <FUNCTION NAME="FN_COMPLAINT_NONCOMPLAINT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Rating]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_rating Audit Rating]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="1908" LINES="8" START_COLUMN="10" START_LINE="1901"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_type Audit Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1925" LINES="7" START_COLUMN="11" START_LINE="1919"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPLCLASS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1944" LINES="8" START_COLUMN="10" START_LINE="1937"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPLINF">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RATING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Rating]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rating Audit Rating]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1963" LINES="8" START_COLUMN="10" START_LINE="1956"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPLON">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1979" LINES="7" START_COLUMN="10" START_LINE="1973"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPL_INEF">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Rating]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_rating Audit Rating]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="1996" LINES="7" START_COLUMN="10" START_LINE="1990"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPL_ONGO">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2011" LINES="6" START_COLUMN="10" START_LINE="2006"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NON_COMPLAINT_ORG_CLASS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get count of available Audits for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2031" LINES="9" START_COLUMN="10" START_LINE="2023"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MULTICOST">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return output of i_timespnt*i_cost
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return output of i_timespnt*i_cost
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TIMESPNT" TYPE="NUMBER">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COST" TYPE="NUMBER">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_timespnt Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_cost Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2043" LINES="5" START_COLUMN="10" START_LINE="2039"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COSTAUDITID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTART" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IEND" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istart Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[iend  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2062" LINES="9" START_COLUMN="10" START_LINE="2054"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_TIMESPENTID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2078" LINES="7" START_COLUMN="10" START_LINE="2072"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_BUDGETID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org  Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_class  Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2094" LINES="7" START_COLUMN="10" START_LINE="2088"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_MONTH_START">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Date in MON-YYYY format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="TO_DATE(ADD_MONTHS(SYSDATE,  -6), 'MM-DD-YYYY')" MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="TO_DATE(ADD_MONTHS(SYSDATE, 6), 'MM-DD-YYYY')" MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[year_mon Date in MON-YYYY format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2110" LINES="7" START_COLUMN="10" START_LINE="2104"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_MONTH_END">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Date in MON-YYYY format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[year_mon Date in MON-YYYY format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2126" LINES="7" START_COLUMN="11" START_LINE="2120"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITS_MONTH_START">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Date in MON-YYYY format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[year_mon Date in MON-YYYY format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2144" LINES="8" START_COLUMN="10" START_LINE="2137"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITS_MONTH_END">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Audit ID as comma separated for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Date in MON-YYYY format]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Start Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[End Date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[year_mon Date in MON-YYYY format]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Start Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate  End Date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2162" LINES="8" START_COLUMN="10" START_LINE="2155"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get data for List of Issues Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get data for List of Issues Report
]]></COMMENT>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD">
        <COMMENT><![CDATA[Returns data as ms_aud_issue_record pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as ms_aud_issue_record pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="40" END_LINE="2169" LINES="2" START_COLUMN="10" START_LINE="2168"/>
    </FUNCTION>
    <FUNCTION NAME="GET_STATUS_FOR_ISSUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Issue Status ID and Status Name from ISM
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Issue Status ID and Status Name from ISM
]]></COMMENT>
      <RETURN TYPE="MS_AUD_ISSUE_STATUS_REC">
        <COMMENT><![CDATA[Returns data as ms_aud_issue_status_rec pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data as ms_aud_issue_status_rec pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="41" END_LINE="2176" LINES="2" START_COLUMN="10" START_LINE="2175"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_INITIATOR_APPROVER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has activity AUD - Approve Audit Closure assigned
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has activity AUD - Approve Audit Closure assigned
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id User Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name User name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2188" LINES="5" START_COLUMN="10" START_LINE="2184"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_AUDIT_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return audit status id for the given audit id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return audit status id for the given audit id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Status ID a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Status ID a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2198" LINES="4" START_COLUMN="10" START_LINE="2195"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CANDIDATE_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return audit candidate status for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return audit candidate status for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CANDIDATE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Candidate ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Status ID a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_candidate_id Candidate ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Status ID a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2207" LINES="2" START_COLUMN="10" START_LINE="2206"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TIME_WINDOW_DAYS">
      <COMMENT_FIRST_LINE><![CDATA[ Function multiplies the input number with 45
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function multiplies the input number with 45
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ROWNUM" TYPE="NUMBER">
        <COMMENT><![CDATA[Incoming number]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a Number]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rownum Incoming number]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a Number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2215" LINES="2" START_COLUMN="10" START_LINE="2214"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TIME_WINDOW">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return the time window value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return the time window value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ROWNUM" TYPE="NUMBER">
        <COMMENT><![CDATA[Incoming number]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a Number]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_rownum Incoming number]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a Number]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2223" LINES="2" START_COLUMN="10" START_LINE="2222"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_OBJ_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return object name for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return object name for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJ_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object type as in ms_aud_ae_lib_conf]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_obj_type Object type as in ms_aud_ae_lib_conf]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2231" LINES="2" START_COLUMN="10" START_LINE="2230"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COUNT_AUDIT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return count audits for an username
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return count audits for an username
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="NUMBER">
        <COMMENT><![CDATA[Audit status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Audit status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2243" LINES="5" START_COLUMN="10" START_LINE="2239"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CURRENT_AUDIT_URLS_MOD">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_title Audit Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2261" LINES="8" START_COLUMN="10" START_LINE="2254"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_SCOPE_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Audit Plan Scope status
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Audit Plan Scope status
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2270" LINES="2" START_COLUMN="10" START_LINE="2269"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_COUNT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return count of Tasks available for the given user
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return count of Tasks available for the given user
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2280" LINES="3" START_COLUMN="10" START_LINE="2278"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DRAFT_ISSUE_COUNT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return count of Draft Issues available for the given audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return count of Draft Issues available for the given audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2288" LINES="2" START_COLUMN="10" START_LINE="2287"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHRT_MAX_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return max published date from ms_aud_audit_published_reports
 for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return max published date from ms_aud_audit_published_reports
 for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="DATE">
        <COMMENT><![CDATA[Returns a DATE]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a DATE]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2297" LINES="2" START_COLUMN="10" START_LINE="2296"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CAN_LATEST_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return candidate status as comma separated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return candidate status as comma separated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CAN_DETAILS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Candidate ID as comma separated string]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_can_details Candidate ID as comma separated string]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2305" LINES="2" START_COLUMN="10" START_LINE="2304"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MILESTONE_JSON_STR">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return milestone data for the given template
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return milestone data for the given template
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TEMPLATE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Template ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON formatted string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_template_id Template ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON formatted string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="15" END_LINE="2313" LINES="2" START_COLUMN="10" START_LINE="2312"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_TITLE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Plan title for the given Plan ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Plan title for the given Plan ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_id Plan ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2321" LINES="2" START_COLUMN="10" START_LINE="2320"/>
    </FUNCTION>
    <FUNCTION NAME="FN_TASK_EDIT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the task is editable or not by the user
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the task is editable or not by the user
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="V_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="V_TASKID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Yes or No as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_taskid Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Yes or No as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2330" LINES="2" START_COLUMN="10" START_LINE="2329"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CALL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Holds values like RSK,CTRL,TST etc]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_call Holds values like RSK,CTRL,TST etc]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2341" LINES="4" START_COLUMN="10" START_LINE="2338"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function deprecated in favour of fn_get_risk_url
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function deprecated in favour of fn_get_risk_url
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="2350" LINES="5" START_COLUMN="10" START_LINE="2346"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CTRL_TESTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return count of Control Test tasks
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return count of Control Test tasks
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="V_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBRE]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBRE]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2358" LINES="2" START_COLUMN="10" START_LINE="2357"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_MILESTONE_TEMPLATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given milestone template exists or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given milestone template exists or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TEMPLATE_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Template name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 0 or 1 as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_template_name Template name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2368" LINES="4" START_COLUMN="10" START_LINE="2365"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_DATA_WORKPAPER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to generate report for Workpaper Issues
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to generate report for Workpaper Issues
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD">
        <COMMENT><![CDATA[Returns set of data as MS_AUD_ISSUE_RECORD pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as MS_AUD_ISSUE_RECORD pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="40" END_LINE="2377" LINES="2" START_COLUMN="10" START_LINE="2376"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MILESTONES_AUDIT_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Audit status
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Audit status
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2385" LINES="2" START_COLUMN="10" START_LINE="2384"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MILESTONES_AUDIT_TITLE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL for the given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL for the given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2393" LINES="2" START_COLUMN="10" START_LINE="2392"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TEAM_MEMBER">
      <COMMENT_FIRST_LINE><![CDATA[ Function to list of team members for the given process instance id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to list of team members for the given process instance id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2401" LINES="2" START_COLUMN="10" START_LINE="2400"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FINDING_VALUES1">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct Findings related data
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct Findings related data
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PARAM" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter not in use or deprecated]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a delimiter concatenated string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_aud_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_param Parameter not in use or deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a delimiter concatenated string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2410" LINES="2" START_COLUMN="10" START_LINE="2409"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TOP_CHECKLIST_AUDIT_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return list of Audit ID associated with an Checklist ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return list of Audit ID associated with an Checklist ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Checklist ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Startdate]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[Enddate]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a comma delimited concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_checklist_id Checklist ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Startdate]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate Enddate]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a comma delimited concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2425" LINES="6" START_COLUMN="10" START_LINE="2420"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PAST_MONTHS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return system configured value for Audits_Conducted_In_Past_X_Months
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return system configured value for Audits_Conducted_In_Past_X_Months
]]></COMMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2432" LINES="2" START_COLUMN="10" START_LINE="2431"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FUTURE_MONTHS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return system configured value for Audits being conducted in next X months
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return system configured value for Audits being conducted in next X months
]]></COMMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2439" LINES="2" START_COLUMN="10" START_LINE="2438"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TOP_CHECKLIST">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return count of Audits associated with an Checklist ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return count of Audits associated with an Checklist ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Checklist ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE">
        <COMMENT><![CDATA[Startdate]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE">
        <COMMENT><![CDATA[Enddate]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_checklist_id Checklist ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[istartdate Startdate]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ienddate Enddate]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2453" LINES="5" START_COLUMN="10" START_LINE="2449"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DISPLAY_TITLE">
      <COMMENT_FIRST_LINE><![CDATA[ Function that constructs and executes dynamic sql based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that constructs and executes dynamic sql based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CONDITION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Condition value]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COND_COL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column name on which condition is to be applied]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TABLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Table name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DEST_COL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column name whose value to be returned]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_condition Condition value]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_cond_col Column name on which condition is to be applied]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_table Table name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dest_col Column name whose value to be returned]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2464" LINES="2" START_COLUMN="10" START_LINE="2463"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_STATUS_PIECHART">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return comma separated Audit ID based on the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return comma separated Audit ID based on the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Audit status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2473" LINES="2" START_COLUMN="10" START_LINE="2472"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LAST_ASSESSMENT_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get latest assessment date fot the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get latest assessment date fot the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_SCENARIO_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scenario ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID as in ms_rsk_risk_assessment.object_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_scenario_id Scenario ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Object ID as in ms_rsk_risk_assessment.object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2482" LINES="2" START_COLUMN="10" START_LINE="2481"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MANAGEMENT_RESPONSE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the management response for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the management response for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_REF_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[fn_ref_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_fn_ref_id fn_ref_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="15" END_LINE="2491" LINES="2" START_COLUMN="10" START_LINE="2490"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return task details based on the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return task details based on the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task type]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task type]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="15" END_LINE="2501" LINES="2" START_COLUMN="10" START_LINE="2500"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_START_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return audit start date
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return audit start date
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="AC_SCHEDULE_YEARS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Schedule years]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="AC_SCHEDULE_DATE" TYPE="DATE">
        <COMMENT><![CDATA[Schedule date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="AC_TIME_WINDOW" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Time window]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="DATE">
        <COMMENT><![CDATA[Returns a DATE]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ac_schedule_years Schedule years]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ac_schedule_date Schedule date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ac_time_window Time window]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a DATE]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2516" LINES="7" START_COLUMN="10" START_LINE="2510"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a Checklist task response based on the inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a Checklist task response based on the inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst_pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Response type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk qst_pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_response_type Response type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2528" LINES="4" START_COLUMN="10" START_LINE="2525"/>
    </FUNCTION>
    <FUNCTION NAME="GET_EDIT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Metric name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDIT_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit mode flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_push_infolet Metric name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_edit_flag Edit mode flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="35" END_LINE="2547" LINES="9" START_COLUMN="10" START_LINE="2539"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SELECT_ISSUE_MANDATORY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check for mandatory issues for the given audit id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check for mandatory issues for the given audit id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="2556" LINES="3" START_COLUMN="10" START_LINE="2554"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SCOPES_BY_JSON">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the risk JSON while creating task along with adhoc risks if selected
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the risk JSON while creating task along with adhoc risks if selected
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2">
        <COMMENT><![CDATA[String to be parsed]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[AUE,RSK,ORG etc]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_string String to be parsed]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_type AUE,RSK,ORG etc]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a JSON string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2570" LINES="6" START_COLUMN="11" START_LINE="2565"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACTIONS_FOR_AR">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get action id as comma separated value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get action id as comma separated value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2577" LINES="2" START_COLUMN="10" START_LINE="2576"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CREATION_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get Creation date of Planned Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get Creation date of Planned Audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_STATUS" TYPE="NUMBER">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="INSTID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pid Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[instid Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2590" LINES="5" START_COLUMN="10" START_LINE="2586"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TEAM_AUD_DETAILS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve team members of an Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve team members of an Audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns team members as comma separated VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns team members as comma separated VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2598" LINES="2" START_COLUMN="10" START_LINE="2597"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE1">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve Checklist response based in the input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve Checklist response based in the input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst_pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Response type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns team members as comma separated VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk qst_pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_response Response type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns team members as comma separated VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2610" LINES="4" START_COLUMN="11" START_LINE="2607"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ON_GOING_AUDIT_WINDOW">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve the value of Audit parameter MS_OnGoingAudits_window
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve the value of Audit parameter MS_OnGoingAudits_window
]]></COMMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="2617" LINES="2" START_COLUMN="10" START_LINE="2616"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_OWNER_BY_TASK_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve the task owner for the given task id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve the task owner for the given task id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2625" LINES="2" START_COLUMN="10" START_LINE="2624"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_ID_FROM_TASK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve the task id for the given finding id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve the task id for the given finding id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Finding ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_fn_id Finding ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2633" LINES="2" START_COLUMN="10" START_LINE="2632"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS_BY_TASK_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return the task statis for the given finding id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return the task statis for the given finding id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_fn_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2641" LINES="2" START_COLUMN="10" START_LINE="2640"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_INST_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return the task instance id for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return the task instance id for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2655" LINES="6" START_COLUMN="10" START_LINE="2650"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS_DISP_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return the Status name for the given Status ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return the Status name for the given Status ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Status ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status_id Status ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2664" LINES="2" START_COLUMN="10" START_LINE="2663"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_UPCM_RPT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_title Audit title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2682" LINES="8" START_COLUMN="10" START_LINE="2675"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_URL_OVERARCHING">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL from the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_title Audit title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_inst_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2702" LINES="9" START_COLUMN="10" START_LINE="2694"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_GROUP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to parse the given input based on the auditor group
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to parse the given input based on the auditor group
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="RISK_AUD_ENT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[risk_aud_ent]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="RISK_CORE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[risk_core]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 1 or NULL as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[risk_aud_ent risk_aud_ent]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[risk_core risk_core]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or NULL as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2714" LINES="5" START_COLUMN="10" START_LINE="2710"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CON_DISP_VAL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return display value of LOV MS AUD Yes No
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return display value of LOV MS AUD Yes No
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="ST_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Stored value]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns 1 or NULL as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[st_val Stored value]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 1 or NULL as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2722" LINES="2" START_COLUMN="10" START_LINE="2721"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_NOTIFY_DISP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return display value of LOV MS AUD Notify Send
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return display value of LOV MS AUD Notify Send
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="CO_CON_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Condition value passed to ms_aud_utilities.mlov_values]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[co_con_id Condition value passed to ms_aud_utilities.mlov_values]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2730" LINES="2" START_COLUMN="10" START_LINE="2729"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_DISP_VAL_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the adhoc risk display value by passing risk id and audit_id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the adhoc risk display value by passing risk id and audit_id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RISK_STORE_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns Adhoc Risk Name as concatenated string as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk_store_val Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Adhoc Risk Name as concatenated string as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2740" LINES="3" START_COLUMN="13" START_LINE="2738"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_DISP_VAL_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the core object name
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the core object name
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CORE_STORE_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[core object id as in ms_grc_core_object.object_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns core object name as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_core_store_val core object id as in ms_grc_core_object.object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns core object name as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2748" LINES="2" START_COLUMN="10" START_LINE="2747"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_DISP_VAL_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the Org entity name
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the Org entity name
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org id as in si_org_entities_t.org_entity_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns Org entity name as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org_id Org id as in si_org_entities_t.org_entity_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Org entity name as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2756" LINES="2" START_COLUMN="10" START_LINE="2755"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE2">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a Checklist task response based on the inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a Checklist task response based on the inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst_pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk qst_pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_response_type Response type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2768" LINES="4" START_COLUMN="10" START_LINE="2765"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE_CHK">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns a Checklist task response based on the inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns a Checklist task response based on the inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst_pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Response type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk qst_pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_response_type Response type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pid Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2780" LINES="4" START_COLUMN="11" START_LINE="2777"/>
    </FUNCTION>
    <FUNCTION NAME="GET_OVERACHING_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns data for Overarching Plan Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns data for Overarching Plan Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[qst_pk]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATION" TYPE="NUMBER">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_YEAR" TYPE="DATE">
        <COMMENT><![CDATA[Plan year]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CORE_OBJECT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core object]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RISK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_GET_OVERACHING_RECORD">
        <COMMENT><![CDATA[Returns set of data as ms_aud_get_overaching_record pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id qst_pk]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_organization Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_year Plan year]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_status Plan status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_type Plan type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_title Plan title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_core_object Core object]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk Risk]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as ms_aud_get_overaching_record pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="49" END_LINE="2804" LINES="11" START_COLUMN="10" START_LINE="2794"/>
    </FUNCTION>
    <FUNCTION NAME="FN_OFFLINE_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Offline status from si_ems_event_assignments_v
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Offline status from si_ems_event_assignments_v
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_PROC_ID" TYPE="SI_EMS_EVENT_ASSIGNMENTS_V.PROCESS_INSTANCE_ID%TYPE">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[p_proc_id Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2816" LINES="5" START_COLUMN="11" START_LINE="2812"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_VIEW_TASK_URLS_REOPEN">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct and return a URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct and return a URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE">
        <COMMENT><![CDATA[Task type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="MS_AUD_AUDIT_TASK.DD_PROCESS_INSTANCE_ID%TYPE">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Task_Id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2837" LINES="9" START_COLUMN="10" START_LINE="2829"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_VIEW_TASK_COA_URLS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct and return a URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct and return a URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE">
        <COMMENT><![CDATA[Task type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="MS_AUD_AUDIT_TASK.DD_PROCESS_INSTANCE_ID%TYPE">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Task_Id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2856" LINES="8" START_COLUMN="12" START_LINE="2849"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DMS_DOC">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the details of document integrated with DMS for the
 given Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the details of document integrated with DMS for the
 given Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_DMS_DOC">
        <COMMENT><![CDATA[Returns set of data as ms_aud_dms_doc pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as ms_aud_dms_doc pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="35" END_LINE="2867" LINES="3" START_COLUMN="10" START_LINE="2865"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DOCUMENT_ATTACHED">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the attached document name for the given
 document object id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the attached document name for the given
 document object id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="DOCUMENT_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[document_object_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns set of data as ms_aud_dms_doc pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[document_object_id document_object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as ms_aud_dms_doc pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2879" LINES="4" START_COLUMN="11" START_LINE="2876"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_RISK_FOR_ORG1">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return risk name and risk id as concatenated
 strings for the given Organization and audit id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return risk name and risk id as concatenated
 strings for the given Organization and audit id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_org Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="2889" LINES="2" START_COLUMN="11" START_LINE="2888"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_CTRL_FOR_RSK">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return control name,control id and risk id as concatenated
 strings for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return control name,control id and risk id as concatenated
 strings for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RSK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_rsk Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2900" LINES="3" START_COLUMN="10" START_LINE="2898"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_RISK_FOR_AE1">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return control name,control id and risk id as concatenated
 strings for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return control name,control id and risk id as concatenated
 strings for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_rsk Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2910" LINES="2" START_COLUMN="10" START_LINE="2909"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_TST_FOR_CTRL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return risk control and test name as concatenated
 strings for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return risk control and test name as concatenated
 strings for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_RISK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_RISK_CTRL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk Control]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_risk_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_risk_ctrl Risk Control]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="2924" LINES="5" START_COLUMN="12" START_LINE="2920"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_USERS_ACTIVITY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has activity AUD - Plan Audits
 or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has activity AUD - Plan Audits
 or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="2934" LINES="3" START_COLUMN="10" START_LINE="2932"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SEND_ISSUES_REV_EDIT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has any assignments or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has any assignments or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="V_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="V_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Y or N as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_process_instance_id Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Y or N as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="2945" LINES="4" START_COLUMN="12" START_LINE="2942"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CONCAT_TITLE_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ST" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_title Audit title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[v_process_instance_id Process instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_st Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="2963" LINES="8" START_COLUMN="10" START_LINE="2956"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CHECKLIST_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Checklist ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Checklist name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_checklist_id Checklist ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_checklist_name Checklist name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2975" LINES="5" START_COLUMN="10" START_LINE="2971"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASK_DET">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return task URL or task owner or task status based on the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return task URL or task owner or task status based on the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant based on which output is determined]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_val Constant based on which output is determined]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="2989" LINES="6" START_COLUMN="10" START_LINE="2984"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_DATA_CROSS_REF">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return details of cross reference section
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return details of cross reference section
]]></COMMENT>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD_CROSS">
        <COMMENT><![CDATA[Returns set of data as ms_aud_issue_record_cross pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as ms_aud_issue_record_cross pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="46" END_LINE="2996" LINES="2" START_COLUMN="10" START_LINE="2995"/>
    </FUNCTION>
    <FUNCTION NAME="URL_ANNUAL_MULTIYEAR_REPORT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_EDIT_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_USER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_process_instance_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_edit_flag Edit flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_status Plan status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_id Plan ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_user Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3015" LINES="8" START_COLUMN="10" START_LINE="3008"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDIT_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_push_infolet]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_process_instance_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_edit_flag Edit flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="29" END_LINE="3034" LINES="9" START_COLUMN="10" START_LINE="3026"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RISK_PID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return Process instance id for MS_GRC_RISK form
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return Process instance id for MS_GRC_RISK form
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_RISK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID as in ms_grc_risk_pub_v.object_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_risk_id Risk ID as in ms_grc_risk_pub_v.object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3042" LINES="2" START_COLUMN="11" START_LINE="3041"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_SCOPE_STATUS_ID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return status Plan Scope
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return status Plan Scope
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3050" LINES="2" START_COLUMN="11" START_LINE="3049"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_URL_CROSS_REF">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_process_instance_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_name Task name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="3068" LINES="8" START_COLUMN="11" START_LINE="3061"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RELATED_RISK_WO_AE">
      <COMMENT_FIRST_LINE><![CDATA[ Fucntion to get the adhoc risk in create task form if autopopulation feature is set
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Fucntion to get the adhoc risk in create task form if autopopulation feature is set
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Risk Name and Risk ID as concatenated string of VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Risk Name and Risk ID as concatenated string of VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="3076" LINES="2" START_COLUMN="10" START_LINE="3075"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID as in ms_grc_question_proc_pub_v.object_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Object ID as in ms_grc_question_proc_pub_v.object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3088" LINES="5" START_COLUMN="10" START_LINE="3084"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_AE_FOR_ORG_SCP_3">
      <COMMENT_FIRST_LINE><![CDATA[ Function toreturn GRC Process name and ID for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function toreturn GRC Process name and ID for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORGANIZATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_organization Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="3097" LINES="2" START_COLUMN="10" START_LINE="3096"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_RSK_FOR_AE_SCP_3">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the adhoc risk in create task form for scope-3 if autopopulation feature is set
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the adhoc risk in create task form for scope-3 if autopopulation feature is set
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_AE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[AE]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Risk Name and Risk ID as concatenated string of VARCHAR2 type]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_ae AE]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ln_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Risk Name and Risk ID as concatenated string of VARCHAR2 type]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="3106" LINES="2" START_COLUMN="10" START_LINE="3105"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function not in use or deprecated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function not in use or deprecated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[NA]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="3115" LINES="4" START_COLUMN="10" START_LINE="3112"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TST_FOR_CTRL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return risk control and test name as concatenated
 strings for the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return risk control and test name as concatenated
 strings for the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LC_RISK_CTRL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_risk_ctrl Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lc_audit_id Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3127" LINES="4" START_COLUMN="10" START_LINE="3124"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_TITLE_WP">
      <COMMENT_FIRST_LINE><![CDATA[ Function to concatenate the input parameters
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to concatenate the input parameters
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit title]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_title Audit title]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3137" LINES="3" START_COLUMN="11" START_LINE="3135"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FND_DISP_VAL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to concatenate Finding Title for the given Finding ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to concatenate Finding Title for the given Finding ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Finding ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_fn_id Finding ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a concatenated string as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3145" LINES="2" START_COLUMN="10" START_LINE="3144"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_REPORT_CNT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given Audit ID has any Audit Report associated
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given Audit ID has any Audit Report associated
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="3153" LINES="2" START_COLUMN="10" START_LINE="3152"/>
    </FUNCTION>
    <FUNCTION NAME="FNGETAUDITREPORTID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to generate Audit Report ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to generate Audit Report ID
]]></COMMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3160" LINES="2" START_COLUMN="10" START_LINE="3159"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Pushform name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_INSTANCE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EMDFLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit mode]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Pushform name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_proc_inst_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pk_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_emdflag Edit flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_editmode Edit mode]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="3181" LINES="9" START_COLUMN="10" START_LINE="3173"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_FULL_NAME">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return User full name
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return User full name
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3189" LINES="2" START_COLUMN="10" START_LINE="3188"/>
    </FUNCTION>
    <FUNCTION NAME="PLAN_EDIT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Metri name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DD_EDIT_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit flag]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_object_type Metri name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_process_instance_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_dd_edit_flag Edit flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3204" LINES="6" START_COLUMN="10" START_LINE="3199"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_ID_TRAIL_STATUS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given audit is in particular status or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given audit is in particular status or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit status]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_status Audit status]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3213" LINES="2" START_COLUMN="10" START_LINE="3212"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ASSESSMENTS">
      <ARGUMENT MODE="IN" NAME="I_SCENARIO_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_ASSESSMENT_REC"/>
      <SUMMARY END_COLUMN="42" END_LINE="3216" LINES="2" START_COLUMN="10" START_LINE="3215"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEAM_DETLS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the team member details based on the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the team member details based on the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CANDIDATE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Candidate ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_candidate_id Candidate ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_val Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="3226" LINES="2" START_COLUMN="10" START_LINE="3225"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACD_DETLS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the location name based on the inputs given
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the location name based on the inputs given
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CANDIDATE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Candidate ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Constant]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_candidate_id Candidate ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_val Constant]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3235" LINES="2" START_COLUMN="10" START_LINE="3234"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TSK_DETLS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to get the location name based on the inputs given
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to get the location name based on the inputs given
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3243" LINES="2" START_COLUMN="10" START_LINE="3242"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_TASK_DETAILS_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns data for Detailed Task List Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns data for Detailed Task List Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CONDUCTED_BY_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Conducted By Org]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Lead Auditor]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Manager]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE">
        <COMMENT><![CDATA[Audit Start date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CLOSURE_DATE" TYPE="DATE">
        <COMMENT><![CDATA[Audit Closure date]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task Name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CORE_OBJECTS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Object]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RESTRICT_ACCESS_TO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Restrict Access to]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATIONS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RISKS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_OWNER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task Owner]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCOPE_BASED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scope Based on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOCATIONS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Location]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_TASK_DETAIL_REC">
        <COMMENT><![CDATA[Returns a set of data as ms_aud_task_detail_rec pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_conducted_by_org Conducted By Org]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_title Audit Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_type Audit Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_lead_auditor Lead Auditor]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_manager Audit Manager]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_start_date Audit Start date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_closure_date Audit Closure date]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_type Task Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_name Task Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_title Plan title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_core_objects Core Object]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_restrict_access_to Restrict Access to]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_organizations Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risks Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_owner Task Owner]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_scope_based_on Scope Based on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_locations Location]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a set of data as ms_aud_task_detail_rec pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="43" END_LINE="3291" LINES="23" START_COLUMN="10" START_LINE="3269"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_TASK_DETAILS_DATA_DRL">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns drilldown data for Detailed Task List Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns drilldown data for Detailed Task List Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_TASK_DETAIL_REC">
        <COMMENT><![CDATA[Returns a set of data as ms_aud_task_detail_rec pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a set of data as ms_aud_task_detail_rec pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="43" END_LINE="3303" LINES="5" START_COLUMN="13" START_LINE="3299"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MILESTONE_DISP_VAL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve the milestone template name for the given template ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve the milestone template name for the given template ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_MILESTONE_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Template ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_milestone_id Template ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="3312" LINES="3" START_COLUMN="10" START_LINE="3310"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DETAILED_AUDIT_LIST">
      <COMMENT_FIRST_LINE><![CDATA[ Function that returns data for Detailed Audit List Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function that returns data for Detailed Audit List Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATION" TYPE="NUMBER">
        <COMMENT><![CDATA[Organization ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Type]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_SCOPE_BASED_ON" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Scope Based on]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RESTRICT_ACCESS_TO" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Restrict Access to]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Classification]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Lead Auditor]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Manager]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_STARTED_AFTER" TYPE="DATE">
        <COMMENT><![CDATA[Started After]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COMPLETED_BEFORE" TYPE="DATE">
        <COMMENT><![CDATA[Completed bedfore]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Status]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CORE_OBJECT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Core Object]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_RISK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Org ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Plan Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOCATIONS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Location ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_DETAILED_AUDIT_LIST_REC">
        <COMMENT><![CDATA[Returns a set of data as ms_aud_detailed_audit_list_rec pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_organization Organization ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_title Audit Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_type Audit Type]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_scope_based_on Scope Based on]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_restrict_access_to Restrict Access to]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_classification Audit Classification]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_lead_auditor Lead Auditor]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_manager Audit Manager]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_started_after Started After]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_completed_before Completed bedfore]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_status Audit Status]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_core_object Core Object]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_risk Risk ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_org Org ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_plan_title Plan Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_locations Location ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a set of data as ms_aud_detailed_audit_list_rec pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="51" END_LINE="3354" LINES="20" START_COLUMN="10" START_LINE="3335"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FORM_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct URL based on the given inputs
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Metricname]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process instance id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EMD" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit flag]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit Mode]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Hyper text]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Metricname]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pk_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_proc_inst_id Process instance id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_inst_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_emd Edit flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_editmode Edit Mode]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Hyper text]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3376" LINES="10" START_COLUMN="10" START_LINE="3367"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REOPEN_AUDIT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns the URL of Audit form if the logged in user has AUD - Re-open Audit activity
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns the URL of Audit form if the logged in user has AUD - Re-open Audit activity
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Metric Name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[instance_id]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EMD" TYPE="VARCHAR2">
        <COMMENT><![CDATA[unique number to identify if the form opened through the URL is editable or not]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Edit mode Yes or No]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Text on which URL is created]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Metric Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pk_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_proc_inst_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_inst_id instance_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_emd unique number to identify if the form opened through the URL is editable or not]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_editmode Edit mode Yes or No]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Text on which URL is created]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3400" LINES="11" START_COLUMN="10" START_LINE="3390"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHK_USER_FOR_REOPEN_ACTVTY">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has any Audit Reopen activity
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has any Audit Reopen activity
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3410" LINES="4" START_COLUMN="10" START_LINE="3407"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHK_USER_FOR_APP_REOPEN_ACT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given user has any Approve Re-open Audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given user has any Approve Re-open Audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Username]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_user_name Username]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3420" LINES="4" START_COLUMN="10" START_LINE="3417"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LAST_REOPENED_DATE">
      <COMMENT_FIRST_LINE><![CDATA[ Function to retrieve the last reopened date
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to retrieve the last reopened date
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter not in use or deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Parameter not in use or deprecated]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instance ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_flow_code Parameter not in use or deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pc_stage_code Parameter not in use or deprecated]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_process_instance_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pn_instance_id Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="3436" LINES="7" START_COLUMN="11" START_LINE="3430"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FIELDS_EDITABILITY_JSON">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns the column names, region names and link report ID of the fields in
 the form of JSON string which are enabled for data correction from ms_aud_field_editability
 data table based on the pushform name and feature type
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns the column names, region names and link report ID of the fields in
 the form of JSON string which are enabled for data correction from ms_aud_field_editability
 data table based on the pushform name and feature type
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Metric Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns above mentioned data as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_form_name Metric Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns above mentioned data as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="15" END_LINE="3446" LINES="2" START_COLUMN="10" START_LINE="3445"/>
    </FUNCTION>
    <PROCEDURE NAME="DEL_APS_DATA_ON_AUDIT_CLOSURE">
      <COMMENT_FIRST_LINE><![CDATA[ This procedure updates the status of unapproved Audit Plan-Scope to In Progress on closing the audit
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This procedure updates the status of unapproved Audit Plan-Scope to In Progress on closing the audit
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="83" END_LINE="3452" LINES="1" START_COLUMN="11" START_LINE="3452"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_AUDIT_EXIST_FLAG">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if the given audit exists or not
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if the given audit exists or not
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns 0 or 1 as NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3461" LINES="3" START_COLUMN="10" START_LINE="3459"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_UPLOAD_FORM_PID">
      <COMMENT_FIRST_LINE><![CDATA[ Function to generate PID from DB Sequence si_process_instance_id_s
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to generate PID from DB Sequence si_process_instance_id_s
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_FORM_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Form name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_form_type Form name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3470" LINES="3" START_COLUMN="10" START_LINE="3468"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_UPLOAD_DRAFT">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return set of data for the given input
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return set of data for the given input
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Legacy ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_UPLOAD_DATA_INFO_REC">
        <COMMENT><![CDATA[Returns set of data as ms_aud_upload_data_info_rec pipelined]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_legacy_id Legacy ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns set of data as ms_aud_upload_data_info_rec pipelined]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="45" END_LINE="3481" LINES="4" START_COLUMN="10" START_LINE="3478"/>
    </FUNCTION>
    <FUNCTION NAME="GET_LOCATION_DISP_VAL">
      <COMMENT_FIRST_LINE><![CDATA[ Function to return display value of the given location
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to return display value of the given location
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOCATIONS" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Location]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_locations Location]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="3489" LINES="2" START_COLUMN="10" START_LINE="3488"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ASSIGNMENTS">
      <COMMENT_FIRST_LINE><![CDATA[ Function to check if any open assignments exists or not
 for the given audit id
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to check if any open assignments exists or not
 for the given audit id
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_FLAG" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Flag]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="NUMBER">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_flag Flag]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a NUMBER]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="3502" LINES="5" START_COLUMN="10" START_LINE="3498"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_GRC_MLOV_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ Function to construct dynamic sql and return a concatenated string
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Function to construct dynamic sql and return a concatenated string
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Object ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Column Name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Table name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id Object ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_column_name Column Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_table_name Table name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="3516" LINES="6" START_COLUMN="11" START_LINE="3511"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="21" END_LINE="3518" LINES="3518" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_UTILITIES" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_APPROVE_ORG_FLOW_UP">
      <ARGUMENT MODE="IN" NAME="XN_ACTIVITY_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="XN_ORG_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="46" LINES="44" START_COLUMN="13" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ASSIGNEE">
      <ARGUMENT MODE="IN" NAME="XN_ACTIVITY_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="XN_ORG_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="67" LINES="20" START_COLUMN="13" START_LINE="48"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS">
      <ARGUMENT MODE="IN" NAME="XN_CURRENT_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="XN_PREVIOUS_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="XN_ACTION_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="94" LINES="26" START_COLUMN="13" START_LINE="69"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CONFIG_PARAMETERS">
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="150" LINES="55" START_COLUMN="13" START_LINE="96"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SELECT_URL">
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_OBJ_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="193" LINES="42" START_COLUMN="13" START_LINE="152"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SINGLE_AUDIT_RPT">
      <ARGUMENT MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="214" LINES="20" START_COLUMN="13" START_LINE="195"/>
    </FUNCTION>
    <FUNCTION NAME="FN_FIELDWORK_CLOSE_RPT">
      <ARGUMENT MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="238" LINES="23" START_COLUMN="13" START_LINE="216"/>
    </FUNCTION>
    <FUNCTION NAME="FN_ISSUE_FND_RPT">
      <ARGUMENT MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="261" LINES="22" START_COLUMN="13" START_LINE="240"/>
    </FUNCTION>
    <FUNCTION NAME="CONFIG_PARAMETERS_ACTFILTER">
      <ARGUMENT MODE="IN" NAME="P_ACTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="35" END_LINE="289" LINES="27" START_COLUMN="13" START_LINE="263"/>
    </FUNCTION>
    <FUNCTION NAME="CONFIG_PARAMETERS_ACTFILTER">
      <ARGUMENT MODE="IN" NAME="P_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_CURRENT_STAGE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="35" END_LINE="324" LINES="34" START_COLUMN="13" START_LINE="291"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE">
      <COMMENT_FIRST_LINE><![CDATA[END get_parameter_value;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[END get_parameter_value;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="373" LINES="10" START_COLUMN="15" START_LINE="364"/>
    </FUNCTION>
    <FUNCTION NAME="FN_ACTFILTER_BY_AUDIT_ID">
      <ARGUMENT MODE="IN" NAME="P_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_LOCAL_KEY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_CURR_STAGE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="P_PRE_STAGE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="32" END_LINE="817" LINES="444" START_COLUMN="13" START_LINE="374"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_TEMPLATE_VALUE">
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="855" LINES="37" START_COLUMN="13" START_LINE="819"/>
    </FUNCTION>
    <PROCEDURE NAME="PROCESS_COMMENTS_HISTORY">
      <ARGUMENT MODE="IN" NAME="I_KEY_COL_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COMMENTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_STEP" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_KEY_COL_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_RTF_ATTACH" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="958" LINES="102" START_COLUMN="14" START_LINE="857"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_TASK_OWNER_APPROVER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1047" LINES="88" START_COLUMN="13" START_LINE="960"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FINAL_APPROVAL_CK">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="1140" LINES="92" START_COLUMN="13" START_LINE="1049"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_CLASSIFICATION">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="1169" LINES="29" START_COLUMN="10" START_LINE="1141"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_TYPESSTRT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="1203" LINES="33" START_COLUMN="12" START_LINE="1171"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_TYPESSCH">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="1238" LINES="33" START_COLUMN="16" START_LINE="1206"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACTIONS">
      <ARGUMENT MODE="IN" NAME="X_FINDING_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="1277" LINES="38" START_COLUMN="13" START_LINE="1240"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_DISPLAY_VALUE">
      <ARGUMENT MODE="IN" NAME="I_ORD_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="1294" LINES="16" START_COLUMN="13" START_LINE="1279"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_EDIT_URL">
      <ARGUMENT MODE="IN" NAME="I_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1327" LINES="32" START_COLUMN="13" START_LINE="1296"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_RISK_STORE_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1388" LINES="60" START_COLUMN="13" START_LINE="1329"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_CORE_STORE_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1424" LINES="35" START_COLUMN="13" START_LINE="1390"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_ORD_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="1460" LINES="35" START_COLUMN="13" START_LINE="1426"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FLOW_DOWN_ORG">
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="1477" LINES="16" START_COLUMN="13" START_LINE="1462"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_ST_DT">
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ST_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_YEAR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCH_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_SCH_START_DT" TYPE="DATE"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_SCH_TIME_WIN" TYPE="VARCHAR2"/>
      <RETURN TYPE="DATE"/>
      <SUMMARY END_COLUMN="26" END_LINE="1646" LINES="168" START_COLUMN="13" START_LINE="1479"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STAGE_NAME">
      <ARGUMENT MODE="IN" NAME="I_STAGE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1663" LINES="16" START_COLUMN="13" START_LINE="1648"/>
    </FUNCTION>
    <FUNCTION NAME="PRFN_RETURN_OBJECT_NAMES">
      <ARGUMENT MODE="IN" NAME="LV_VALUES" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_TABLE_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="1709" LINES="45" START_COLUMN="13" START_LINE="1665"/>
    </FUNCTION>
    <FUNCTION NAME="PRFN_RETURN_OWNERS">
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="'OWNERS'" MODE="IN" NAME="LC_ATTRIBUTE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="1794" LINES="84" START_COLUMN="13" START_LINE="1711"/>
    </FUNCTION>
    <FUNCTION NAME="PRFN_RETURN_OWNER_ORGS">
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="LC_ATTRIBUTE" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="30" END_LINE="1883" LINES="88" START_COLUMN="13" START_LINE="1796"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_TYPE">
      <ARGUMENT MODE="IN" NAME="STORED_VALUE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="GROUP_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="1900" LINES="16" START_COLUMN="13" START_LINE="1885"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDIT_CLOSURE_APPROVER">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="1932" LINES="31" START_COLUMN="13" START_LINE="1902"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REPORT_STATUS">
      <ARGUMENT MODE="IN" NAME="STATUS" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="1949" LINES="16" START_COLUMN="13" START_LINE="1934"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ALL_CONTACTS">
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="1986" LINES="36" START_COLUMN="13" START_LINE="1951"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AC_WITH_SA">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="2017" LINES="30" START_COLUMN="13" START_LINE="1988"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_CONTROL_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="2046" LINES="28" START_COLUMN="13" START_LINE="2019"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_TEST_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="2072" LINES="25" START_COLUMN="13" START_LINE="2048"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_VALUES">
      <ARGUMENT MODE="IN" NAME="I_CON_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="2108" LINES="35" START_COLUMN="13" START_LINE="2074"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_VALUES">
      <ARGUMENT MODE="IN" NAME="I_TEST_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2144" LINES="35" START_COLUMN="13" START_LINE="2110"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SCOPE_DISP_VALUE">
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="SCOPE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="2174" LINES="29" START_COLUMN="13" START_LINE="2146"/>
    </FUNCTION>
    <FUNCTION NAME="GET_EDIT_USER">
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="2204" LINES="29" START_COLUMN="13" START_LINE="2176"/>
    </FUNCTION>
    <FUNCTION NAME="GET_NON_EDIT_USER">
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="2234" LINES="29" START_COLUMN="13" START_LINE="2206"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SUB_CLOSE_AUDIT">
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="2298" LINES="63" START_COLUMN="13" START_LINE="2236"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CLOSE_AUDIT">
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="2351" LINES="52" START_COLUMN="13" START_LINE="2300"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CHK_EXIST_TASK">
      <COMMENT_FIRST_LINE><![CDATA[END fn_get_chk_exist_task;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[END fn_get_chk_exist_task;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJ_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_OBJ_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="2702" LINES="123" START_COLUMN="13" START_LINE="2580"/>
    </FUNCTION>
    <FUNCTION NAME="GET_APPROVE_USER">
      <COMMENT_FIRST_LINE><![CDATA[OR i_obj_value IN (
SELECT tk1.core_objects AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_cob tk1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = cob1.task_id(+)
AND ts.audit_id = tk1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT fnd1.fn_core_objects AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_fnd fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.task_type = '8'
)
);
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'RSK'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_audit_task ts, ms_aud_audit_task_rrs tk, ms_aud_audit_task_rsk fnd
WHERE tk.audit_id = fnd.audit_id(+)
AND ts.audit_id = i_aud_id
AND tk.task_id = fnd.task_id(+)
AND ts.audit_id = tk.audit_id(+)
AND ts.task_id = tk.task_id(+)
AND (  i_obj_value IN (
SELECT fnd1.fn_related_risks AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_rsk fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT tk1.related_risks AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_rrs tk1
WHERE ts.audit_id = i_aud_id
AND ts.audit_id = tk1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT fnd1.fn_related_risks AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_rsk fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.task_type = '8'
)
);
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'ORG'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_audit_task ts, ms_aud_audit_task_ror tk, ms_aud_audit_task_org fnd
WHERE tk.audit_id = fnd.audit_id(+)
AND ts.audit_id = i_aud_id
AND tk.task_id = fnd.task_id(+)
AND ts.audit_id = tk.audit_id(+)
AND ts.task_id = tk.task_id(+)
AND (ts.status IS NULL OR (ts.status IS NOT NULL AND (ts.status &lt;&gt; '16')))
AND ts.task_type IN ('2', '4', '3', '8')
AND (  i_obj_value IN (
SELECT fnd1.fn_organizations AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_org fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND (ts.status IS NULL OR (ts.status IS NOT NULL AND (ts.status &lt;&gt; '16')))
AND ts.task_type IN ('2', '4', '3', '8')
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT tk1.organizations AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_ror tk1
WHERE ts.audit_id = i_aud_id
AND ts.audit_id = tk1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND (ts.status IS NULL OR (ts.status IS NOT NULL AND (ts.status &lt;&gt; '16')))
AND ts.task_type IN ('2', '4', '3', '8')
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT fnd1.fn_organizations AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_org fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.task_type = '8'
)
);
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'CTL'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_ctrl_test_task_ctl ct, ms_aud_audit_task aut
WHERE aut.audit_id = ct.audit_id(+)
AND aut.task_id = ct.task_id(+)
AND ct.audit_id = i_aud_id
AND ct.ct_control_id = i_obj_value
AND aut.status &lt;&gt; '16'
AND (aut.status IS NULL OR (aut.status IS NOT NULL AND (aut.status &lt;&gt; '16')))
AND aut.task_type IN ('2', '4', '3');
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'TST'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_ctrl_test_task_tst tst, ms_aud_audit_task aut
WHERE aut.audit_id = tst.audit_id(+)
AND aut.task_id = tst.task_id(+)
AND tst.audit_id = i_aud_id
AND tst.ts_test_id = i_obj_value
AND (aut.status IS NULL OR (aut.status IS NOT NULL AND (aut.status &lt;&gt; '16')))
AND aut.task_type IN ('2', '4', '3');
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_get_chk_exist_task;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[OR i_obj_value IN (
SELECT tk1.core_objects AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_cob tk1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = cob1.task_id(+)
AND ts.audit_id = tk1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT fnd1.fn_core_objects AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_fnd fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.task_type = '8'
)
);
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'RSK'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_audit_task ts, ms_aud_audit_task_rrs tk, ms_aud_audit_task_rsk fnd
WHERE tk.audit_id = fnd.audit_id(+)
AND ts.audit_id = i_aud_id
AND tk.task_id = fnd.task_id(+)
AND ts.audit_id = tk.audit_id(+)
AND ts.task_id = tk.task_id(+)
AND (  i_obj_value IN (
SELECT fnd1.fn_related_risks AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_rsk fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT tk1.related_risks AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_rrs tk1
WHERE ts.audit_id = i_aud_id
AND ts.audit_id = tk1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT fnd1.fn_related_risks AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_rsk fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.task_type = '8'
)
);
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'ORG'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_audit_task ts, ms_aud_audit_task_ror tk, ms_aud_audit_task_org fnd
WHERE tk.audit_id = fnd.audit_id(+)
AND ts.audit_id = i_aud_id
AND tk.task_id = fnd.task_id(+)
AND ts.audit_id = tk.audit_id(+)
AND ts.task_id = tk.task_id(+)
AND (ts.status IS NULL OR (ts.status IS NOT NULL AND (ts.status &lt;&gt; '16')))
AND ts.task_type IN ('2', '4', '3', '8')
AND (  i_obj_value IN (
SELECT fnd1.fn_organizations AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_org fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND (ts.status IS NULL OR (ts.status IS NOT NULL AND (ts.status &lt;&gt; '16')))
AND ts.task_type IN ('2', '4', '3', '8')
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT tk1.organizations AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_ror tk1
WHERE ts.audit_id = i_aud_id
AND ts.audit_id = tk1.audit_id(+)
AND ts.status &lt;&gt; '16'
AND (ts.status IS NULL OR (ts.status IS NOT NULL AND (ts.status &lt;&gt; '16')))
AND ts.task_type IN ('2', '4', '3', '8')
AND ts.task_type IN ('2', '4', '3')
)
OR i_obj_value IN (
SELECT fnd1.fn_organizations AS ae_id
FROM ms_aud_audit_task ts, ms_aud_audit_task_org fnd1
WHERE ts.audit_id = i_aud_id
AND ts.task_id = fnd1.task_id(+)
AND ts.audit_id = fnd1.audit_id(+)
AND ts.task_type = '8'
)
);
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'CTL'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_ctrl_test_task_ctl ct, ms_aud_audit_task aut
WHERE aut.audit_id = ct.audit_id(+)
AND aut.task_id = ct.task_id(+)
AND ct.audit_id = i_aud_id
AND ct.ct_control_id = i_obj_value
AND aut.status &lt;&gt; '16'
AND (aut.status IS NULL OR (aut.status IS NOT NULL AND (aut.status &lt;&gt; '16')))
AND aut.task_type IN ('2', '4', '3');
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
IF i_obj_type = 'TST'
THEN
SELECT COUNT (1)
INTO ln_count
FROM ms_aud_ctrl_test_task_tst tst, ms_aud_audit_task aut
WHERE aut.audit_id = tst.audit_id(+)
AND aut.task_id = tst.task_id(+)
AND tst.audit_id = i_aud_id
AND tst.ts_test_id = i_obj_value
AND (aut.status IS NULL OR (aut.status IS NOT NULL AND (aut.status &lt;&gt; '16')))
AND aut.task_type IN ('2', '4', '3');
IF ln_count &gt; 0
THEN
RETURN ln_no_del;
ELSE
RETURN ln_del;
END IF;
END IF;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_get_chk_exist_task;
]]></COMMENT>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="2947" LINES="27" START_COLUMN="13" START_LINE="2921"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_VALUES">
      <ARGUMENT MODE="IN" NAME="P_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="2976" LINES="28" START_COLUMN="13" START_LINE="2949"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS_DISPLAY_NAME">
      <ARGUMENT MODE="IN" NAME="S_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="2993" LINES="16" START_COLUMN="13" START_LINE="2978"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUDITOR_AVAILABILITY">
      <ARGUMENT MODE="IN" NAME="I_START_DT" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DT" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_AUDITOR_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="3061" LINES="67" START_COLUMN="13" START_LINE="2995"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CODE_DESCRIPTION">
      <ARGUMENT MODE="IN" NAME="I_CODE_GROUP" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CODE_CODE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="3089" LINES="27" START_COLUMN="13" START_LINE="3063"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_NAME">
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="3113" LINES="23" START_COLUMN="13" START_LINE="3091"/>
    </FUNCTION>
    <PROCEDURE NAME="UPDATE_MILESTONE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_EVENT_NO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_EVENT_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQ" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="XN_ERROR_CODE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="3150" LINES="36" START_COLUMN="14" START_LINE="3115"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_ISSUE_TITLE">
      <ARGUMENT MODE="IN" NAME="PI_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="3188" LINES="37" START_COLUMN="13" START_LINE="3152"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_NAME">
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="3205" LINES="16" START_COLUMN="13" START_LINE="3190"/>
    </FUNCTION>
    <PROCEDURE NAME="CONFIGURE_LABEL">
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="I_AUDITABLE_ENTITY" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="3556" LINES="350" START_COLUMN="14" START_LINE="3207"/>
    </PROCEDURE>
    <PROCEDURE NAME="CREATE_INFOLET_TS_VIEW">
      <ARGUMENT DEFAULT="'TABLE'" MODE="IN" NAME="I_OBJECT_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_INFOLET_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_VIEW_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT NOCOPY" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="3656" LINES="99" START_COLUMN="14" START_LINE="3558"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_CURRENT_AUDIT_URLS">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="4046" LINES="389" START_COLUMN="13" START_LINE="3658"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CURRENT_AUD_TEAM_LINK">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="4189" LINES="142" START_COLUMN="13" START_LINE="4048"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SETUP_AUDITOR_CRT_TASKS">
      <ARGUMENT MODE="IN" NAME="IP_SETUP_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="38" END_LINE="4297" LINES="107" START_COLUMN="13" START_LINE="4191"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_RISK" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="4329" LINES="31" START_COLUMN="13" START_LINE="4299"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_AE_FOR_RISKS">
      <ARGUMENT MODE="IN" NAME="LN_RISK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="4375" LINES="45" START_COLUMN="13" START_LINE="4331"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ORG_FOR_RISKS">
      <ARGUMENT MODE="IN" NAME="LN_RISK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="4410" LINES="34" START_COLUMN="13" START_LINE="4377"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_AE_FOR_ORGS">
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="4452" LINES="41" START_COLUMN="13" START_LINE="4412"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ORG_FOR_AE">
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_SCOPE" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="4487" LINES="34" START_COLUMN="13" START_LINE="4454"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_AE_FOR_RISK">
      <COMMENT_FIRST_LINE><![CDATA[return the parent Auditable Entities for specific Risk
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[return the parent Auditable Entities for specific Risk
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RISK" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="4514" LINES="25" START_COLUMN="13" START_LINE="4490"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_ORG_FOR_RISK">
      <COMMENT_FIRST_LINE><![CDATA[-return all the organizations for the risk
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[-return all the organizations for the risk
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_RISK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="4541" LINES="25" START_COLUMN="13" START_LINE="4517"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_AE_FOR_ORG">
      <COMMENT_FIRST_LINE><![CDATA[return all auditable entities for Organization
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[return all auditable entities for Organization
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="4568" LINES="25" START_COLUMN="13" START_LINE="4544"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_ORG_FOR_AE">
      <COMMENT_FIRST_LINE><![CDATA[return all the parent organization for auditable entity
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[return all the parent organization for auditable entity
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="LN_PROCESS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="4595" LINES="25" START_COLUMN="13" START_LINE="4571"/>
    </FUNCTION>
    <PROCEDURE NAME="REVOKE_OPEN_AUDIT_ASSIGNMENT">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="4801" LINES="205" START_COLUMN="14" START_LINE="4597"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_UPDATE_SETUP_KEYMILESTONE">
      <ARGUMENT MODE="IN" NAME="XN_ERROR_HANDLE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN OUT" NAME="XN_ERROR_SEQUENCE" TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="38" END_LINE="4977" LINES="175" START_COLUMN="14" START_LINE="4803"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_CONFIG">
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="FORMNAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="5035" LINES="57" START_COLUMN="13" START_LINE="4979"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITOR_GROUP">
      <ARGUMENT MODE="IN" NAME="AUDITOR_GROUP" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOV_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="5075" LINES="39" START_COLUMN="13" START_LINE="5037"/>
    </FUNCTION>
    <PROCEDURE NAME="PROC_POPULATE_SCORE_FOR_RISK">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MSG" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="5158" LINES="82" START_COLUMN="14" START_LINE="5077"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_POPULATE_SCORE_FOR_PRC">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MSG" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="5241" LINES="82" START_COLUMN="14" START_LINE="5160"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_POPULATE_ASSESS_FROM_RISK">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MSG" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="5412" LINES="170" START_COLUMN="14" START_LINE="5243"/>
    </PROCEDURE>
    <PROCEDURE NAME="PROC_INVOKE_SCHEDULES">
      <ARGUMENT MODE="OUT" NAME="O_ERROR_CODE" TYPE="NUMBER"/>
      <ARGUMENT MODE="OUT" NAME="O_ERROR_MESSAGE" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="5446" LINES="33" START_COLUMN="14" START_LINE="5414"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_AUDIT_STATUS">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="5463" LINES="16" START_COLUMN="13" START_LINE="5448"/>
    </FUNCTION>
    <FUNCTION NAME="FN_AUDIT_TRAIL_STATUS">
      <ARGUMENT MODE="IN" NAME="PROC_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="INST_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="5489" LINES="25" START_COLUMN="13" START_LINE="5465"/>
    </FUNCTION>
    <FUNCTION NAME="PARSE_ORGANIZATIONS">
      <ARGUMENT MODE="IN" NAME="ORG_FROM_CORE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ORG_FROM_PLAN" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="7" END_LINE="5528" LINES="38" START_COLUMN="13" START_LINE="5491"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COUNT_SCENARIOS">
      <ARGUMENT MODE="IN" NAME="ORG_FROM_CORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="7" END_LINE="5575" LINES="46" START_COLUMN="13" START_LINE="5530"/>
    </FUNCTION>
    <FUNCTION NAME="MS_AUD_SPLIT">
      <ARGUMENT MODE="IN" NAME="P_LIST" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="','" MODE="IN" NAME="P_DEL" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_SPLIT_TBL"/>
      <SUMMARY END_COLUMN="20" END_LINE="5601" LINES="25" START_COLUMN="13" START_LINE="5577"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RSRC_POOL_FROM_RSM">
      <RETURN TYPE="MS_AUD_RSM_RESOURCES"/>
      <SUMMARY END_COLUMN="30" END_LINE="5652" LINES="50" START_COLUMN="13" START_LINE="5603"/>
    </FUNCTION>
    <FUNCTION NAME="TRAIL_STATUS">
      <ARGUMENT MODE="IN" NAME="AID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="AUDIT_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="5681" LINES="28" START_COLUMN="13" START_LINE="5654"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SYS_PARAMETER_VALUE">
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="5709" LINES="27" START_COLUMN="13" START_LINE="5683"/>
    </FUNCTION>
    <FUNCTION NAME="MIN_INSTANCE">
      <ARGUMENT MODE="IN" NAME="AID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="5726" LINES="16" START_COLUMN="13" START_LINE="5711"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INT_PARAMETER_VALUE">
      <ARGUMENT MODE="IN" NAME="PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="5754" LINES="27" START_COLUMN="13" START_LINE="5728"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="5791" LINES="36" START_COLUMN="13" START_LINE="5756"/>
    </FUNCTION>
    <FUNCTION NAME="COMPARE_COMMA_SEPARATED_STRING">
      <ARGUMENT MODE="IN" NAME="I_STRING_VALUES1" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STRING_VALUES2" TYPE="VARCHAR2"/>
      <RETURN TYPE="PLS_INTEGER"/>
      <SUMMARY END_COLUMN="38" END_LINE="5848" LINES="56" START_COLUMN="13" START_LINE="5793"/>
    </FUNCTION>
    <FUNCTION NAME="TRAIL_USER">
      <ARGUMENT MODE="IN" NAME="AID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="AUDIT_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="5909" LINES="60" START_COLUMN="13" START_LINE="5850"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_ID">
      <ARGUMENT MODE="IN" NAME="LV_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="5936" LINES="26" START_COLUMN="13" START_LINE="5911"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_NAME_BY_ID">
      <ARGUMENT MODE="IN" NAME="LV_USER_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="5964" LINES="27" START_COLUMN="13" START_LINE="5938"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_ID">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="6017" LINES="52" START_COLUMN="13" START_LINE="5966"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_TEAM">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="6069" LINES="51" START_COLUMN="13" START_LINE="6019"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CLOSURE_FLAG_VALUE">
      <ARGUMENT MODE="IN" NAME="LV_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="33" END_LINE="6098" LINES="28" START_COLUMN="13" START_LINE="6071"/>
    </FUNCTION>
    <FUNCTION NAME="MIN_INSTANCE_PLAN">
      <COMMENT_FIRST_LINE><![CDATA[ End: Added above function by susil on 13/07/2011 for Enable Link thru Data tables enhancement 
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ End: Added above function by susil on 13/07/2011 for Enable Link thru Data tables enhancement 
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="6118" LINES="18" START_COLUMN="13" START_LINE="6101"/>
    </FUNCTION>
    <FUNCTION NAME="TRAIL_STATUS_PLAN">
      <ARGUMENT MODE="IN" NAME="PID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PLAN_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="25" END_LINE="6146" LINES="27" START_COLUMN="13" START_LINE="6120"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_DISPLAY">
      <ARGUMENT MODE="IN" NAME="USER_NAME_VALUE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="6183" LINES="36" START_COLUMN="13" START_LINE="6148"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PARENT_RISK">
      <ARGUMENT MODE="IN" NAME="LV_PARENT_RISK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_LIST_OF_RISK" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="6229" LINES="45" START_COLUMN="13" START_LINE="6185"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TSK_EXEC_RESULT">
      <ARGUMENT MODE="IN" NAME="ST_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="6253" LINES="23" START_COLUMN="13" START_LINE="6231"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ATTR_SCORE_VAL">
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="6298" LINES="44" START_COLUMN="13" START_LINE="6255"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SECTIONS">
      <ARGUMENT MODE="IN" NAME="I_SEC_SECTION_ID" TYPE="MS_CHK_SECTION_SEC.SEC_SECTION_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="MS_CHK_CHKLIST_MASTER.CHECKLIST_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="6339" LINES="40" START_COLUMN="13" START_LINE="6300"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ROOT_CAUSE">
      <ARGUMENT MODE="IN" NAME="I_STORED_VALUE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="6377" LINES="37" START_COLUMN="13" START_LINE="6341"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONT_FACTORS">
      <ARGUMENT MODE="IN" NAME="I_STORED_VALUE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="6415" LINES="37" START_COLUMN="13" START_LINE="6379"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PARENT_SECTION">
      <ARGUMENT MODE="IN" NAME="I_SEC_FK" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="6432" LINES="16" START_COLUMN="13" START_LINE="6417"/>
    </FUNCTION>
    <FUNCTION NAME="EXCLUDE_EXPIRED">
      <ARGUMENT MODE="IN" NAME="I_VALID_FROM" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_VALID_UNTIL" TYPE="VARCHAR2"/>
      <RETURN TYPE="PLS_INTEGER"/>
      <SUMMARY END_COLUMN="23" END_LINE="6461" LINES="28" START_COLUMN="13" START_LINE="6434"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COMMENTS">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION fn_get_comments (pid VARCHAR2, inst NUMBER, plan_action VARCHAR2)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (4000);
lv_plan_id    ms_aud_audit_plan.plan_id%type;
lv_status     ms_aud_audit_plan.status%TYPE;
lv_pid        NUMBER;
BEGIN
BEGIN
SELECT DISTINCT plan_comments
INTO lv_comments
FROM ms_aud_plan_audit_v
WHERE plan_id = pid
AND instance_id = inst
AND instance_rec_num = 1
AND plan_action = 1;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL THEN
BEGIN
SELECT DISTINCT plan_comments
INTO lv_comments
FROM ms_aud_plan_audit_v
WHERE plan_id = pid
AND instance_id = (SELECT MAX (instance_id)
FROM ms_aud_plan_audit_v
WHERE instance_id &lt; inst)
AND plan_action = 1;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
BEGIN
SELECT DISTINCT plan_id,status, process_instance_id
INTO lv_plan_id,lv_status,lv_pid
FROM ms_aud_plan_audit_v
WHERE process_instance_id = (SELECT DISTINCT process_instance_id
FROM ms_aud_plan_audit_v
WHERE plan_id=pid)
AND instance_id = (SELECT MAX(instance_id)
FROM ms_aud_plan_audit_v
WHERE instance_id &lt; inst);
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL AND lv_plan_id = '0' AND lv_status = '0'
THEN
BEGIN
lv_comments :=  ms_aud_utilities.fn_get_comments(lv_pid);
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments;
END fn_get_comments;
FUNCTION fn_get_comments (pid NUMBER)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (32000);
BEGIN
SELECT  distinct plan_comments  into lv_comments -- Modified for the Bug 51328 by Shivam
FROM ms_aud_plan_audit_v
WHERE instance_id =  (SELECT MAX (instance_id)
FROM ms_aud_plan_audit_v
WHERE process_instance_id = pid
AND instance_rec_num = 1 );
and process_instance_id= pid)
modified for bug 66966 by Tarun

RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments||'error1';
END fn_get_comments;
FUNCTION fn_get_audit_comments (aud_id VARCHAR2, inst NUMBER, aud_action VARCHAR2)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (4000):= NULL;
lv_aud_id     ms_aud_audit.audit_id%TYPE;
lv_status     ms_aud_audit.status%TYPE;
lv_pid        NUMBER := 0;
BEGIN
BEGIN
SELECT DISTINCT audit_comments
INTO lv_comments
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id
AND instance_id = inst
AND instance_rec_num = 1
AND audit_action = 8;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL THEN
BEGIN
SELECT DISTINCT audit_comments
INTO lv_comments
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id
AND instance_id = (SELECT MAX (instance_id)
FROM ms_aud_manage_audit_v
WHERE instance_id &lt; inst)
AND audit_action = 8;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
BEGIN
SELECT DISTINCT audit_id,status, process_instance_id
INTO lv_aud_id,lv_status,lv_pid
FROM ms_aud_manage_audit_v
WHERE instance_id = (SELECT MAX(instance_id)
FROM ms_aud_manage_audit_v
WHERE instance_id &lt; inst
AND process_instance_id = (SELECT DISTINCT process_instance_id
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id));
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL AND lv_aud_id = '0' AND lv_status = '0'
THEN
BEGIN
lv_comments := fn_get_new_audit_comments (lv_pid,inst);
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
Added by Anil For Bug#75602
IF aud_action='2'
THEN
BEGIN
SELECT DISTINCT audit_comments,audit_id,status, process_instance_id
INTO lv_comments,lv_aud_id,lv_status,lv_pid
FROM ms_aud_manage_audit_v
WHERE instance_id= ( select distinct instance_id from ms_aud_manage_audit_v
WHERE audit_id= aud_id
AND process_instance_id = (SELECT DISTINCT process_instance_id
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id ) and Status=2
and instance_id=(select Max(instance_id ) from ms_aud_manage_audit_v
WHERE audit_id = aud_id and Status=2 ));
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
End by Anil For Bug#75602
RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments;
END fn_get_audit_comments;
FUNCTION fn_get_new_audit_comments (pid NUMBER, inst NUMBER)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (32000);
BEGIN
SELECT  distinct audit_comments into lv_comments  -- Modified for the Bug 51328 by Shivam
FROM ms_aud_manage_audit_v
WHERE instance_id = (SELECT MAX (instance_id)
FROM ms_aud_manage_audit_v
WHERE process_instance_id = pid
AND instance_id &lt; inst);
RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments;
END fn_get_new_audit_comments;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION fn_get_comments (pid VARCHAR2, inst NUMBER, plan_action VARCHAR2)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (4000);
lv_plan_id    ms_aud_audit_plan.plan_id%type;
lv_status     ms_aud_audit_plan.status%TYPE;
lv_pid        NUMBER;
BEGIN
BEGIN
SELECT DISTINCT plan_comments
INTO lv_comments
FROM ms_aud_plan_audit_v
WHERE plan_id = pid
AND instance_id = inst
AND instance_rec_num = 1
AND plan_action = 1;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL THEN
BEGIN
SELECT DISTINCT plan_comments
INTO lv_comments
FROM ms_aud_plan_audit_v
WHERE plan_id = pid
AND instance_id = (SELECT MAX (instance_id)
FROM ms_aud_plan_audit_v
WHERE instance_id &lt; inst)
AND plan_action = 1;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
BEGIN
SELECT DISTINCT plan_id,status, process_instance_id
INTO lv_plan_id,lv_status,lv_pid
FROM ms_aud_plan_audit_v
WHERE process_instance_id = (SELECT DISTINCT process_instance_id
FROM ms_aud_plan_audit_v
WHERE plan_id=pid)
AND instance_id = (SELECT MAX(instance_id)
FROM ms_aud_plan_audit_v
WHERE instance_id &lt; inst);
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL AND lv_plan_id = '0' AND lv_status = '0'
THEN
BEGIN
lv_comments :=  ms_aud_utilities.fn_get_comments(lv_pid);
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments;
END fn_get_comments;
FUNCTION fn_get_comments (pid NUMBER)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (32000);
BEGIN
SELECT  distinct plan_comments  into lv_comments -- Modified for the Bug 51328 by Shivam
FROM ms_aud_plan_audit_v
WHERE instance_id =  (SELECT MAX (instance_id)
FROM ms_aud_plan_audit_v
WHERE process_instance_id = pid
AND instance_rec_num = 1 );
and process_instance_id= pid)
modified for bug 66966 by Tarun

RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments||'error1';
END fn_get_comments;
FUNCTION fn_get_audit_comments (aud_id VARCHAR2, inst NUMBER, aud_action VARCHAR2)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (4000):= NULL;
lv_aud_id     ms_aud_audit.audit_id%TYPE;
lv_status     ms_aud_audit.status%TYPE;
lv_pid        NUMBER := 0;
BEGIN
BEGIN
SELECT DISTINCT audit_comments
INTO lv_comments
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id
AND instance_id = inst
AND instance_rec_num = 1
AND audit_action = 8;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL THEN
BEGIN
SELECT DISTINCT audit_comments
INTO lv_comments
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id
AND instance_id = (SELECT MAX (instance_id)
FROM ms_aud_manage_audit_v
WHERE instance_id &lt; inst)
AND audit_action = 8;
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
BEGIN
SELECT DISTINCT audit_id,status, process_instance_id
INTO lv_aud_id,lv_status,lv_pid
FROM ms_aud_manage_audit_v
WHERE instance_id = (SELECT MAX(instance_id)
FROM ms_aud_manage_audit_v
WHERE instance_id &lt; inst
AND process_instance_id = (SELECT DISTINCT process_instance_id
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id));
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
IF lv_comments IS NULL AND lv_aud_id = '0' AND lv_status = '0'
THEN
BEGIN
lv_comments := fn_get_new_audit_comments (lv_pid,inst);
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
Added by Anil For Bug#75602
IF aud_action='2'
THEN
BEGIN
SELECT DISTINCT audit_comments,audit_id,status, process_instance_id
INTO lv_comments,lv_aud_id,lv_status,lv_pid
FROM ms_aud_manage_audit_v
WHERE instance_id= ( select distinct instance_id from ms_aud_manage_audit_v
WHERE audit_id= aud_id
AND process_instance_id = (SELECT DISTINCT process_instance_id
FROM ms_aud_manage_audit_v
WHERE audit_id = aud_id ) and Status=2
and instance_id=(select Max(instance_id ) from ms_aud_manage_audit_v
WHERE audit_id = aud_id and Status=2 ));
EXCEPTION
WHEN OTHERS
THEN
NULL;
END;
END IF;
End by Anil For Bug#75602
RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments;
END fn_get_audit_comments;
FUNCTION fn_get_new_audit_comments (pid NUMBER, inst NUMBER)
RETURN VARCHAR2
IS
lv_comments   VARCHAR2 (32000);
BEGIN
SELECT  distinct audit_comments into lv_comments  -- Modified for the Bug 51328 by Shivam
FROM ms_aud_manage_audit_v
WHERE instance_id = (SELECT MAX (instance_id)
FROM ms_aud_manage_audit_v
WHERE process_instance_id = pid
AND instance_id &lt; inst);
RETURN lv_comments;
EXCEPTION
WHEN OTHERS
THEN
RETURN lv_comments;
END fn_get_new_audit_comments;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PLAN_ACTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="6804" LINES="129" START_COLUMN="13" START_LINE="6676"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COMMENTS">
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="6829" LINES="24" START_COLUMN="12" START_LINE="6806"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_COMMENTS">
      <ARGUMENT MODE="IN" NAME="AUD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="AUD_ACTION" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="6923" LINES="93" START_COLUMN="10" START_LINE="6831"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_NEW_AUDIT_COMMENTS">
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="INST" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="6942" LINES="18" START_COLUMN="10" START_LINE="6925"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DISTRIBUTION_PREFERENCE">
      <ARGUMENT MODE="IN" NAME="CO_CON_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="OPT" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="6973" LINES="30" START_COLUMN="13" START_LINE="6944"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_SCORE">
      <COMMENT_FIRST_LINE><![CDATA[END fn_get_audit_score;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[END fn_get_audit_score;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="7097" LINES="78" START_COLUMN="13" START_LINE="7020"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_ENT_RISK">
      <ARGUMENT MODE="IN" NAME="RISK_AUD_ENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="RISK_CORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="29" END_LINE="7145" LINES="47" START_COLUMN="13" START_LINE="7099"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_ENT_ORGS">
      <ARGUMENT MODE="IN" NAME="ORG_AUD_ENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ORG_CORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="29" END_LINE="7181" LINES="35" START_COLUMN="13" START_LINE="7147"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_ENT_PROCESS">
      <ARGUMENT MODE="IN" NAME="PROCESS_AUD_ENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PROCESS_CORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="32" END_LINE="7230" LINES="48" START_COLUMN="13" START_LINE="7183"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OFFLINE_STATUS">
      <ARGUMENT MODE="IN" NAME="P_PROC_ID" TYPE="SI_EVENT_ASSIGNMENTS.PROCESS_INSTANCE_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="7254" LINES="23" START_COLUMN="13" START_LINE="7232"/>
    </FUNCTION>
    <FUNCTION NAME="INCLUDE_EXPIRED">
      <ARGUMENT MODE="IN" NAME="I_VALID_FROM" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_VALID_UNTIL" TYPE="DATE"/>
      <RETURN TYPE="PLS_INTEGER"/>
      <SUMMARY END_COLUMN="23" END_LINE="7276" LINES="21" START_COLUMN="13" START_LINE="7256"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_XSL">
      <ARGUMENT MODE="IN" NAME="I_SOURCE_FLOW" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DEST_FLOW" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="7295" LINES="18" START_COLUMN="13" START_LINE="7278"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_STORED_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="7325" LINES="29" START_COLUMN="13" START_LINE="7297"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_STORED_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="7355" LINES="29" START_COLUMN="13" START_LINE="7327"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_STORED_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="7385" LINES="29" START_COLUMN="13" START_LINE="7357"/>
    </FUNCTION>
    <PROCEDURE NAME="UPDATE_FIELDS">
      <ARGUMENT MODE="IN" NAME="LC_FROM_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_TO_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN OUT" NAME="LT_IN_DATA" TYPE="CLOB"/>
      <SUMMARY END_COLUMN="21" END_LINE="7416" LINES="29" START_COLUMN="14" START_LINE="7388"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_GET_XML_VALUE">
      <ARGUMENT MODE="IN" NAME="LC_VARIABLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_OUT_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="7441" LINES="24" START_COLUMN="13" START_LINE="7418"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="7485" LINES="43" START_COLUMN="13" START_LINE="7443"/>
    </FUNCTION>
    <FUNCTION NAME="DELETENODE">
      <ARGUMENT MODE="IN" NAME="LC_IN_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="REGION_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="MANDATORY_FIELD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2"/>
      <RETURN TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="18" END_LINE="7534" LINES="48" START_COLUMN="13" START_LINE="7487"/>
    </FUNCTION>
    <FUNCTION NAME="MLOV_VALUES">
      <ARGUMENT MODE="IN" NAME="I_CONDITION_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CONDITION_COLUMN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="7636" LINES="101" START_COLUMN="10" START_LINE="7536"/>
    </FUNCTION>
    <FUNCTION NAME="UPDATE_INSTANCE">
      <ARGUMENT MODE="IN" NAME="LC_IN_XML" TYPE="XMLTYPE"/>
      <ARGUMENT MODE="IN" NAME="GC_DATA_NAMESPACE" TYPE="VARCHAR2"/>
      <RETURN TYPE="XMLTYPE"/>
      <SUMMARY END_COLUMN="24" END_LINE="7688" LINES="50" START_COLUMN="12" START_LINE="7639"/>
    </FUNCTION>
    <FUNCTION NAME="PARSE_STRING">
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_VARCHAR2_ARRAY"/>
      <SUMMARY END_COLUMN="20" END_LINE="7762" LINES="74" START_COLUMN="13" START_LINE="7689"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FLOW_VIEW_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="'V'" MODE="IN" NAME="PC_VIEW_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="7824" LINES="61" START_COLUMN="13" START_LINE="7764"/>
    </FUNCTION>
    <PROCEDURE NAME="GET_FLOW_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[-----------------------------------------------------------------------------
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[-----------------------------------------------------------------------------
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PC_VIEW_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_INST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="PV_EVT_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="PV_CUR_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="PV_OWNER_ORGS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="OUT" NAME="PV_OWNERS" TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="7872" LINES="41" START_COLUMN="14" START_LINE="7832"/>
    </PROCEDURE>
    <FUNCTION NAME="EDITOR_OWNERSHIP_CHECK">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="8" END_LINE="7998" LINES="125" START_COLUMN="16" START_LINE="7874"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USERS">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="17" END_LINE="8086" LINES="87" START_COLUMN="17" START_LINE="8000"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INITIATOR">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="8131" LINES="44" START_COLUMN="13" START_LINE="8088"/>
    </FUNCTION>
    <FUNCTION NAME="GET_INITIATOR_NAME">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="8159" LINES="27" START_COLUMN="13" START_LINE="8133"/>
    </FUNCTION>
    <FUNCTION NAME="GET_AUTO_APPROVE_VALUE">
      <ARGUMENT MODE="IN" NAME="P_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="8220" LINES="60" START_COLUMN="10" START_LINE="8161"/>
    </FUNCTION>
    <FUNCTION NAME="GET_GRC_OBJECT_NAME">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="8261" LINES="40" START_COLUMN="10" START_LINE="8222"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHK_VALID_USR_AVLBLTY">
      <ARGUMENT MODE="IN" NAME="PV_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_CUR_STAGE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ACTION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_ORG_ENTITY_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="8434" LINES="172" START_COLUMN="11" START_LINE="8263"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_PLANID">
      <ARGUMENT MODE="IN" NAME="IP_PLAN_ID" TYPE="MS_AUD_AUDIT_PLAN.PLAN_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="38" END_LINE="8481" LINES="46" START_COLUMN="13" START_LINE="8436"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DISPLAY_SECTIONS">
      <ARGUMENT MODE="IN" NAME="I_CHK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SEC_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="8511" LINES="29" START_COLUMN="10" START_LINE="8483"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MANAGE_AUDIT_COMMENT">
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="8528" LINES="16" START_COLUMN="10" START_LINE="8513"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_REL">
      <ARGUMENT MODE="IN" NAME="LV_OBJ_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LV_TGT_OBJ_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="8661" LINES="132" START_COLUMN="10" START_LINE="8530"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_CONF_VALUE">
      <ARGUMENT MODE="IN" NAME="IP_CONF_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="8693" LINES="30" START_COLUMN="12" START_LINE="8664"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PARAMETER_VALUE_FOR_CLOSID">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="38" END_LINE="8745" LINES="51" START_COLUMN="10" START_LINE="8695"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LOCALE_ID">
      <ARGUMENT MODE="IN" NAME="LV_LOCALE_STR" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="21" END_LINE="8762" LINES="16" START_COLUMN="10" START_LINE="8747"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LOCALE_STR">
      <ARGUMENT MODE="IN" NAME="LV_LOCALE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="8779" LINES="16" START_COLUMN="10" START_LINE="8764"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_USER_LOCALE_ID">
      <ARGUMENT MODE="IN" NAME="LV_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="8797" LINES="17" START_COLUMN="10" START_LINE="8781"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_AUD_MAN_DISP">
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="8833" LINES="35" START_COLUMN="10" START_LINE="8799"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_LEAD_AUD_DISP">
      <ARGUMENT MODE="IN" NAME="I_USER_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="8869" LINES="35" START_COLUMN="13" START_LINE="8835"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REOPENED_PLAN_STATUS">
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="8893" LINES="24" START_COLUMN="10" START_LINE="8870"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_URL_BASEDON_DATE">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="16" END_LINE="8938" LINES="42" START_COLUMN="10" START_LINE="8897"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FINDING_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COL_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="8978" LINES="39" START_COLUMN="10" START_LINE="8940"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COUNT_ACTIONS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="6" END_LINE="9033" LINES="53" START_COLUMN="10" START_LINE="8981"/>
    </FUNCTION>
    <FUNCTION NAME="PLAN_EDITABILITY">
      <ARGUMENT MODE="IN" NAME="I_DD_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_EDIT_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_USER" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="9082" LINES="48" START_COLUMN="10" START_LINE="9035"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COACHING_ICON">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="9177" LINES="94" START_COLUMN="10" START_LINE="9084"/>
    </FUNCTION>
    <FUNCTION NAME="PLAN_STATUS">
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="7" END_LINE="9203" LINES="26" START_COLUMN="10" START_LINE="9178"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_OWNER">
      <ARGUMENT MODE="IN" NAME="V_FN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="9230" LINES="26" START_COLUMN="11" START_LINE="9205"/>
    </FUNCTION>
    <FUNCTION NAME="COA_PARSE_STRING">
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_VARCHAR2_ARRAY"/>
      <SUMMARY END_COLUMN="24" END_LINE="9305" LINES="74" START_COLUMN="10" START_LINE="9232"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COA_PARAMETER_VALUE">
      <ARGUMENT MODE="IN" NAME="IP_CONF_FLAG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="30" END_LINE="9336" LINES="30" START_COLUMN="10" START_LINE="9307"/>
    </FUNCTION>
    <FUNCTION NAME="GET_COA_PARAMETER_CHAR_VALUE">
      <ARGUMENT MODE="IN" NAME="IP_CONF_FLAG" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="IP_PARAM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="9367" LINES="30" START_COLUMN="10" START_LINE="9338"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APS_RSK_NAME">
      <ARGUMENT MODE="IN" NAME="I_RISK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="9411" LINES="43" START_COLUMN="10" START_LINE="9369"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APS_CTL_NAME">
      <ARGUMENT MODE="IN" NAME="I_CONTROL_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="9443" LINES="31" START_COLUMN="10" START_LINE="9413"/>
    </FUNCTION>
    <FUNCTION NAME="FN_OVERARCHING_PLAN_TITLE">
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="41" END_LINE="9461" LINES="17" START_COLUMN="10" START_LINE="9445"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_APS_TST_NAME">
      <ARGUMENT MODE="IN" NAME="I_TEST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="9496" LINES="34" START_COLUMN="10" START_LINE="9463"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RISK_SCORE">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="'NA'" MODE="IN" NAME="I_SCENARIO_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="9571" LINES="74" START_COLUMN="10" START_LINE="9498"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_ID">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="18" END_LINE="9599" LINES="27" START_COLUMN="10" START_LINE="9573"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PLAN_YEARS">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="9635" LINES="35" START_COLUMN="10" START_LINE="9601"/>
    </FUNCTION>
    <FUNCTION NAME="FN_STATUS_COUNT_AUD_CLASS1">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="38" END_LINE="9675" LINES="38" START_COLUMN="10" START_LINE="9638"/>
    </FUNCTION>
    <FUNCTION NAME="FN_STATUS_COUNT_AUD_CLASS2">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="38" END_LINE="9703" LINES="27" START_COLUMN="17" START_LINE="9677"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_CLASSIFICATION1">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="41" END_LINE="9739" LINES="33" START_COLUMN="17" START_LINE="9707"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_CLASSIFICATION2">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="41" END_LINE="9775" LINES="33" START_COLUMN="16" START_LINE="9743"/>
    </FUNCTION>
    <FUNCTION NAME="FN_STATUS_COUNT_AUD_TYPE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="36" END_LINE="9816" LINES="41" START_COLUMN="12" START_LINE="9776"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NON_COMPLAINT_CLASS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="35" END_LINE="9852" LINES="33" START_COLUMN="14" START_LINE="9820"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NON_COMPLAINT_ORG_CLASS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="38" END_LINE="9895" LINES="41" START_COLUMN="16" START_LINE="9855"/>
    </FUNCTION>
    <FUNCTION NAME="FN_NON_COMPLAINT_ORG">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="32" END_LINE="9931" LINES="34" START_COLUMN="15" START_LINE="9898"/>
    </FUNCTION>
    <FUNCTION NAME="FN_COMPLAINT_NONCOMPLAINT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_END_DATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="37" END_LINE="9966" LINES="34" START_COLUMN="16" START_LINE="9933"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPL">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="9998" LINES="31" START_COLUMN="16" START_LINE="9968"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPLCLASS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="40" END_LINE="10035" LINES="33" START_COLUMN="16" START_LINE="10003"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPLINF">
      <ARGUMENT MODE="IN" NAME="I_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="10076" LINES="39" START_COLUMN="16" START_LINE="10038"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPLON">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="10110" LINES="32" START_COLUMN="15" START_LINE="10079"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPL_INEF">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_RATING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="39" END_LINE="10149" LINES="37" START_COLUMN="16" START_LINE="10113"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_NONCOMPL_ONGO">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="39" END_LINE="10180" LINES="30" START_COLUMN="16" START_LINE="10151"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COSTAUDITID">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTART" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IEND" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR"/>
      <SUMMARY END_COLUMN="30" END_LINE="10218" LINES="37" START_COLUMN="13" START_LINE="10182"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MULTICOST">
      <ARGUMENT MODE="IN" NAME="I_TIMESPNT" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_COST" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="10234" LINES="15" START_COLUMN="16" START_LINE="10220"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_TIMESPENTID">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="38" END_LINE="10269" LINES="33" START_COLUMN="20" START_LINE="10237"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_BUDGETID">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CLASS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="10304" LINES="33" START_COLUMN="16" START_LINE="10272"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_MONTH_START">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="TO_DATE(ADD_MONTHS(SYSDATE,  -6), 'MM-DD-YYYY')" MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT DEFAULT="TO_DATE(ADD_MONTHS(SYSDATE, 6), 'MM-DD-YYYY')" MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="38" END_LINE="10334" LINES="28" START_COLUMN="16" START_LINE="10307"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_MONTH_END">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="10364" LINES="28" START_COLUMN="16" START_LINE="10337"/>
    </FUNCTION>
    <FUNCTION NAME="GET_SCENARIO_FROM_RISK">
      <RETURN TYPE="MS_AUD_SCENARIO_ASSESSMENT"/>
      <SUMMARY END_COLUMN="8" END_LINE="10419" LINES="53" START_COLUMN="10" START_LINE="10367"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_ENTITY_ID">
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="10452" LINES="32" START_COLUMN="10" START_LINE="10421"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_DATA">
      <RETURN TYPE="MS_AUD_ISSUE_RECORD"/>
      <SUMMARY END_COLUMN="1" END_LINE="11165" LINES="712" START_COLUMN="10" START_LINE="10454"/>
    </FUNCTION>
    <FUNCTION NAME="GET_STATUS_FOR_ISSUES">
      <RETURN TYPE="MS_AUD_ISSUE_STATUS_REC"/>
      <SUMMARY END_COLUMN="4" END_LINE="11212" LINES="46" START_COLUMN="10" START_LINE="11167"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_INITIATOR_APPROVER">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="11239" LINES="26" START_COLUMN="10" START_LINE="11214"/>
    </FUNCTION>
    <FUNCTION NAME="FN_HIGHLIGHT_AE">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION fn_check_initiator_approver (
pc_flow_code             IN   VARCHAR2,
pc_stage_code            IN   VARCHAR2,
pn_process_instance_id   IN   NUMBER,
pn_instance_id           IN   NUMBER
)
RETURN NUMBER
IS
i_org_id       VARCHAR2 (1000);
i_user_name    VARCHAR2 (4000);
lc_rec_count   NUMBER;
xn_error_seq   varchar2(1000);
BEGIN
SELECT dd_current_user_name, conducted_by_org
INTO i_org_id, i_user_name
FROM ms_aud_audit_closure_v
WHERE instance_id = (select max(instance_id) from ms_aud_audit_closure_v where
process_instance_id = pn_process_instance_id)
AND ROWNUM = 1;
SELECT COUNT (*)
INTO lc_rec_count
FROM ms_aud_flow_down_org_v
WHERE org_entity_id = i_org_id
AND user_name = i_user_name
AND activity_name = 'AUD - Approve Audit Closure';
ms_apps_mdf_errors_pkg.insert_log (pn_error_handle_id      =&gt; 1,
pn_error_sequence       =&gt; xn_error_seq,
pc_error_type           =&gt; 'KK',
pc_error_text           =&gt; 'count&gt;&gt;&gt;&gt;:'||lc_rec_count);
IF lc_rec_count &gt; 0
THEN
RETURN 1;
ELSE
RETURN 0;
END IF;
EXCEPTION
WHEN OTHERS
THEN
ms_apps_mdf_errors_pkg.insert_log (pn_error_handle_id      =&gt; 1,
pn_error_sequence       =&gt; xn_error_seq,
pc_error_type           =&gt; 'KK',
pc_error_text           =&gt; 'count&gt;&gt;&gt;&gt;:'||sqlerrm);
RETURN NULL;
END fn_check_initiator_approver;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION fn_check_initiator_approver (
pc_flow_code             IN   VARCHAR2,
pc_stage_code            IN   VARCHAR2,
pn_process_instance_id   IN   NUMBER,
pn_instance_id           IN   NUMBER
)
RETURN NUMBER
IS
i_org_id       VARCHAR2 (1000);
i_user_name    VARCHAR2 (4000);
lc_rec_count   NUMBER;
xn_error_seq   varchar2(1000);
BEGIN
SELECT dd_current_user_name, conducted_by_org
INTO i_org_id, i_user_name
FROM ms_aud_audit_closure_v
WHERE instance_id = (select max(instance_id) from ms_aud_audit_closure_v where
process_instance_id = pn_process_instance_id)
AND ROWNUM = 1;
SELECT COUNT (*)
INTO lc_rec_count
FROM ms_aud_flow_down_org_v
WHERE org_entity_id = i_org_id
AND user_name = i_user_name
AND activity_name = 'AUD - Approve Audit Closure';
ms_apps_mdf_errors_pkg.insert_log (pn_error_handle_id      =&gt; 1,
pn_error_sequence       =&gt; xn_error_seq,
pc_error_type           =&gt; 'KK',
pc_error_text           =&gt; 'count&gt;&gt;&gt;&gt;:'||lc_rec_count);
IF lc_rec_count &gt; 0
THEN
RETURN 1;
ELSE
RETURN 0;
END IF;
EXCEPTION
WHEN OTHERS
THEN
ms_apps_mdf_errors_pkg.insert_log (pn_error_handle_id      =&gt; 1,
pn_error_sequence       =&gt; xn_error_seq,
pc_error_type           =&gt; 'KK',
pc_error_text           =&gt; 'count&gt;&gt;&gt;&gt;:'||sqlerrm);
RETURN NULL;
END fn_check_initiator_approver;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="SUGGESTED_YEARS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="11310" LINES="19" START_COLUMN="10" START_LINE="11292"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_AUDIT_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="11331" LINES="19" START_COLUMN="10" START_LINE="11313"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CANDIDATE_STATUS">
      <ARGUMENT MODE="IN" NAME="I_CANDIDATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="11379" LINES="48" START_COLUMN="10" START_LINE="11332"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITS_MONTH_START">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="11415" LINES="35" START_COLUMN="10" START_LINE="11381"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITS_MONTH_END">
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="YEAR_MON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="11457" LINES="41" START_COLUMN="10" START_LINE="11417"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TIME_WINDOW_DAYS">
      <ARGUMENT MODE="IN" NAME="I_ROWNUM" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="28" END_LINE="11470" LINES="12" START_COLUMN="16" START_LINE="11459"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TIME_WINDOW">
      <ARGUMENT MODE="IN" NAME="I_ROWNUM" TYPE="NUMBER"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="23" END_LINE="11486" LINES="16" START_COLUMN="10" START_LINE="11471"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AE_OBJ_NAME">
      <ARGUMENT MODE="IN" NAME="I_OBJ_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="11503" LINES="16" START_COLUMN="10" START_LINE="11488"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COUNT_AUDIT">
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="11529" LINES="25" START_COLUMN="10" START_LINE="11505"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CURRENT_AUDIT_URLS_MOD">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="34" END_LINE="12099" LINES="569" START_COLUMN="10" START_LINE="11531"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_SCOPE_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="12116" LINES="16" START_COLUMN="10" START_LINE="12101"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_COUNT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="12145" LINES="29" START_COLUMN="10" START_LINE="12117"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DRAFT_ISSUE_COUNT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="12167" LINES="22" START_COLUMN="10" START_LINE="12146"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CTRL_ISSUES">
      <ARGUMENT MODE="IN" NAME="V_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="12178" LINES="10" START_COLUMN="10" START_LINE="12169"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHRT_MAX_DATE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="DATE"/>
      <SUMMARY END_COLUMN="9" END_LINE="12189" LINES="10" START_COLUMN="10" START_LINE="12180"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLANYEARS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="12216" LINES="24" START_COLUMN="15" START_LINE="12193"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACTITLE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="12245" LINES="27" START_COLUMN="16" START_LINE="12219"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CAN_LATEST_STATUS">
      <ARGUMENT MODE="IN" NAME="I_CAN_DETAILS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="12309" LINES="63" START_COLUMN="10" START_LINE="12247"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MILESTONE_JSON_STR">
      <ARGUMENT MODE="IN" NAME="I_TEMPLATE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="30" END_LINE="12364" LINES="54" START_COLUMN="10" START_LINE="12311"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_TITLE">
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="12384" LINES="20" START_COLUMN="10" START_LINE="12365"/>
    </FUNCTION>
    <FUNCTION NAME="FN_TASK_EDIT">
      <ARGUMENT MODE="IN" NAME="V_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="V_TASKID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="12397" LINES="12" START_COLUMN="13" START_LINE="12386"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_URL">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CALL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="10" END_LINE="12524" LINES="126" START_COLUMN="13" START_LINE="12399"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_URL">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="12652" LINES="126" START_COLUMN="10" START_LINE="12527"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_URL">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="12777" LINES="124" START_COLUMN="13" START_LINE="12654"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CTRL_TESTS">
      <ARGUMENT MODE="IN" NAME="V_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="12790" LINES="11" START_COLUMN="12" START_LINE="12780"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_MILESTONE_TEMPLATE">
      <ARGUMENT MODE="IN" NAME="I_TEMPLATE_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="12813" LINES="23" START_COLUMN="10" START_LINE="12791"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_DATA_WORKPAPER">
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_ISSUE_RECORD"/>
      <SUMMARY END_COLUMN="29" END_LINE="13117" LINES="303" START_COLUMN="10" START_LINE="12815"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MILESTONES_AUDIT_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="13144" LINES="26" START_COLUMN="10" START_LINE="13119"/>
    </FUNCTION>
    <FUNCTION NAME="FN_MILESTONES_AUDIT_TITLE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="13167" LINES="22" START_COLUMN="10" START_LINE="13146"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TEAM_MEMBER">
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="13195" LINES="27" START_COLUMN="10" START_LINE="13169"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FINDING_VALUES1">
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PARAM" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="27" END_LINE="13353" LINES="157" START_COLUMN="10" START_LINE="13197"/>
    </FUNCTION>
    <FUNCTION NAME="GET_PAST_MONTHS">
      <COMMENT_FIRST_LINE><![CDATA[END get_past_months;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[END get_past_months;
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="20" END_LINE="13539" LINES="13" START_COLUMN="10" START_LINE="13527"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FUTURE_MONTHS">
      <COMMENT_FIRST_LINE><![CDATA[END get_future_months;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[END get_future_months;
]]></COMMENT>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="22" END_LINE="13576" LINES="15" START_COLUMN="10" START_LINE="13562"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TOP_CHECKLIST">
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="32" END_LINE="13599" LINES="23" START_COLUMN="10" START_LINE="13577"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TOP_CHECKLIST_AUDIT_ID">
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR"/>
      <ARGUMENT MODE="IN" NAME="ISTARTDATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="IENDDATE" TYPE="DATE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="40" END_LINE="13634" LINES="33" START_COLUMN="10" START_LINE="13602"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DISPLAY_TITLE">
      <ARGUMENT MODE="IN" NAME="I_CONDITION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COND_COL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TABLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DEST_COL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="13649" LINES="14" START_COLUMN="10" START_LINE="13636"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDITID_STATUS_PIECHART">
      <ARGUMENT MODE="IN" NAME="I_USER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="42" END_LINE="13676" LINES="26" START_COLUMN="11" START_LINE="13651"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LAST_ASSESSMENT_DATE">
      <ARGUMENT MODE="IN" NAME="I_SCENARIO_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="13698" LINES="21" START_COLUMN="10" START_LINE="13678"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MANAGEMENT_RESPONSE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FN_REF_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="31" END_LINE="13719" LINES="20" START_COLUMN="10" START_LINE="13700"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="24" END_LINE="13752" LINES="33" START_COLUMN="10" START_LINE="13720"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_START_DATE">
      <ARGUMENT MODE="IN" NAME="AC_SCHEDULE_YEARS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="AC_SCHEDULE_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="AC_TIME_WINDOW" TYPE="VARCHAR2"/>
      <RETURN TYPE="DATE"/>
      <SUMMARY END_COLUMN="29" END_LINE="13830" LINES="77" START_COLUMN="10" START_LINE="13754"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="19" END_LINE="13894" LINES="62" START_COLUMN="13" START_LINE="13833"/>
    </FUNCTION>
    <FUNCTION NAME="GET_EDIT_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_EDIT_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="13971" LINES="77" START_COLUMN="10" START_LINE="13895"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SELECT_ISSUE_MANDATORY">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="4" END_LINE="14025" LINES="54" START_COLUMN="10" START_LINE="13972"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_SCOPES_BY_JSON">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION fn_get_scopes_by_json (
i_string      VARCHAR2,
i_type        VARCHAR2
)
RETURN CLOB
IS
lc_json_data   VARCHAR2(32000):= NULL;
lc_json_data   CLOB;
lc_param_val   VARCHAR2 (10);
BEGIN
-- Core Objects
IF i_type='AUE' THEN
FOR rec IN
(
(SELECT COLUMN_VALUE AS object_id, DBMS_XMLGEN.CONVERT(ms_aud_utilities.fn_get_core_display_values(COLUMN_VALUE)) as object_name
FROM TABLE
(ms_apps_utilities.parse_string
(i_string,
','
)
)))
LOOP
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
END IF;
END LOOP;
END IF;
-- Related Risk
IF i_type='RSK' THEN
FOR rec IN
((SELECT COLUMN_VALUE AS object_id, DBMS_XMLGEN.CONVERT(ms_aud_utilities.fn_get_risk_display_values(COLUMN_VALUE)) as object_name
FROM TABLE
(ms_apps_utilities.parse_string
(i_string,
','
)
)))
LOOP
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
END IF;
END LOOP;
END IF;
-- Orgnanization
IF i_type='ORG' THEN
FOR rec IN
(
(SELECT COLUMN_VALUE AS object_id, DBMS_XMLGEN.CONVERT(ms_aud_utilities.fn_get_org_display_values(COLUMN_VALUE)) as object_name
FROM TABLE
(ms_apps_utilities.parse_string
(i_string,
','
)
)))
LOOP
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
END IF;
END LOOP;
END IF;
-- end
IF lc_json_data IS NOT NULL
THEN
lc_json_data := '[' || lc_json_data || ']';
END IF;
RETURN lc_json_data;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_get_scopes_by_json;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION fn_get_scopes_by_json (
i_string      VARCHAR2,
i_type        VARCHAR2
)
RETURN CLOB
IS
lc_json_data   VARCHAR2(32000):= NULL;
lc_json_data   CLOB;
lc_param_val   VARCHAR2 (10);
BEGIN
-- Core Objects
IF i_type='AUE' THEN
FOR rec IN
(
(SELECT COLUMN_VALUE AS object_id, DBMS_XMLGEN.CONVERT(ms_aud_utilities.fn_get_core_display_values(COLUMN_VALUE)) as object_name
FROM TABLE
(ms_apps_utilities.parse_string
(i_string,
','
)
)))
LOOP
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
END IF;
END LOOP;
END IF;
-- Related Risk
IF i_type='RSK' THEN
FOR rec IN
((SELECT COLUMN_VALUE AS object_id, DBMS_XMLGEN.CONVERT(ms_aud_utilities.fn_get_risk_display_values(COLUMN_VALUE)) as object_name
FROM TABLE
(ms_apps_utilities.parse_string
(i_string,
','
)
)))
LOOP
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
END IF;
END LOOP;
END IF;
-- Orgnanization
IF i_type='ORG' THEN
FOR rec IN
(
(SELECT COLUMN_VALUE AS object_id, DBMS_XMLGEN.CONVERT(ms_aud_utilities.fn_get_org_display_values(COLUMN_VALUE)) as object_name
FROM TABLE
(ms_apps_utilities.parse_string
(i_string,
','
)
)))
LOOP
IF LENGTH (lc_json_data) IS NULL
THEN
lc_json_data :=
'{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
ELSE
lc_json_data :=
lc_json_data
|| ','
|| '{object_id:'''
|| rec.object_id
|| ''' ,object_name:'''
|| REPLACE (rec.object_name, '''', '\' || '''')
|| ''''
|| '}';
END IF;
END LOOP;
END IF;
-- end
IF lc_json_data IS NOT NULL
THEN
lc_json_data := '[' || lc_json_data || ']';
END IF;
RETURN lc_json_data;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_get_scopes_by_json;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="29" END_LINE="14320" LINES="157" START_COLUMN="13" START_LINE="14164"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACTIONS_FOR_AR">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="14358" LINES="37" START_COLUMN="12" START_LINE="14322"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CREATION_DATE">
      <ARGUMENT MODE="IN" NAME="P_STATUS" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="INSTID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="14395" LINES="35" START_COLUMN="11" START_LINE="14361"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TEAM_AUD_DETAILS">
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="14423" LINES="27" START_COLUMN="10" START_LINE="14397"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE1">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="14496" LINES="72" START_COLUMN="10" START_LINE="14425"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ON_GOING_AUDIT_WINDOW">
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="33" END_LINE="14524" LINES="27" START_COLUMN="10" START_LINE="14498"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_OWNER_BY_TASK_ID">
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="14541" LINES="16" START_COLUMN="10" START_LINE="14526"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_ID_FROM_TASK">
      <ARGUMENT MODE="IN" NAME="I_FN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="14558" LINES="16" START_COLUMN="10" START_LINE="14543"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS_BY_TASK_ID">
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="14575" LINES="16" START_COLUMN="10" START_LINE="14560"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_INST_ID">
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="14611" LINES="35" START_COLUMN="10" START_LINE="14577"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_STATUS_DISP_NAME">
      <ARGUMENT MODE="IN" NAME="I_STATUS_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="14635" LINES="24" START_COLUMN="10" START_LINE="14612"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_UPCM_RPT_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="14742" LINES="106" START_COLUMN="10" START_LINE="14637"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_AUD_GROUP">
      <ARGUMENT MODE="IN" NAME="RISK_AUD_ENT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="RISK_CORE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="14781" LINES="38" START_COLUMN="10" START_LINE="14744"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CON_DISP_VAL">
      <ARGUMENT MODE="IN" NAME="ST_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="14805" LINES="23" START_COLUMN="10" START_LINE="14783"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_MLOV_NOTIFY_DISP">
      <ARGUMENT MODE="IN" NAME="CO_CON_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="14850" LINES="44" START_COLUMN="10" START_LINE="14807"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_DISP_VAL_RPT">
      <ARGUMENT MODE="IN" NAME="I_RISK_STORE_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="32" END_LINE="14956" LINES="105" START_COLUMN="13" START_LINE="14852"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CORE_DISP_VAL_RPT">
      <ARGUMENT MODE="IN" NAME="I_CORE_STORE_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="32" END_LINE="14992" LINES="35" START_COLUMN="13" START_LINE="14958"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ORG_DISP_VAL_RPT">
      <ARGUMENT MODE="IN" NAME="I_ORG_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="31" END_LINE="15028" LINES="35" START_COLUMN="13" START_LINE="14994"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_URL_OVERARCHING">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION get_pushform_data (i_guid VARCHAR2)
RETURN ms_aud_get_pushform_record PIPELINED
IS
lc_metric_name     VARCHAR2 (4000);
lc_pushform_view   VARCHAR2 (4000);
lc_flow_code       VARCHAR2 (4000);
BEGIN
SELECT metric_name, pushform_view, flow_code
INTO lc_metric_name, lc_pushform_view, lc_flow_code
FROM ms_aud_metric_names
WHERE guid = i_guid AND is_active = 'Y';
PIPE ROW (ms_aud_get_pushform_details (lc_metric_name,
lc_pushform_view,
lc_flow_code
));
EXCEPTION
WHEN OTHERS
THEN
RETURN;
END;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION get_pushform_data (i_guid VARCHAR2)
RETURN ms_aud_get_pushform_record PIPELINED
IS
lc_metric_name     VARCHAR2 (4000);
lc_pushform_view   VARCHAR2 (4000);
lc_flow_code       VARCHAR2 (4000);
BEGIN
SELECT metric_name, pushform_view, flow_code
INTO lc_metric_name, lc_pushform_view, lc_flow_code
FROM ms_aud_metric_names
WHERE guid = i_guid AND is_active = 'Y';
PIPE ROW (ms_aud_get_pushform_details (lc_metric_name,
lc_pushform_view,
lc_flow_code
));
EXCEPTION
WHEN OTHERS
THEN
RETURN;
END;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="15098" LINES="47" START_COLUMN="10" START_LINE="15052"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE2">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="15172" LINES="72" START_COLUMN="10" START_LINE="15101"/>
    </FUNCTION>
    <FUNCTION NAME="FN_QS_RESPONSE_CHK">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RESPONSE_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="15236" LINES="62" START_COLUMN="10" START_LINE="15175"/>
    </FUNCTION>
    <FUNCTION NAME="FN_OFFLINE_STATUS">
      <ARGUMENT MODE="IN" NAME="P_PROC_ID" TYPE="SI_EMS_EVENT_ASSIGNMENTS_V.PROCESS_INSTANCE_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="15257" LINES="21" START_COLUMN="10" START_LINE="15237"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_VIEW_TASK_COA_URLS">
      <ARGUMENT MODE="IN" NAME="I_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="MS_AUD_AUDIT_TASK.DD_PROCESS_INSTANCE_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="32" END_LINE="15323" LINES="65" START_COLUMN="12" START_LINE="15259"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_VIEW_TASK_URLS_REOPEN">
      <ARGUMENT MODE="IN" NAME="I_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="MS_AUD_AUDIT_TASK.TASK_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="MS_AUD_AUDIT_TASK.TASK_TYPE%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_PROCESS_INSTANCE_ID" TYPE="MS_AUD_AUDIT_TASK.DD_PROCESS_INSTANCE_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="15418" LINES="94" START_COLUMN="10" START_LINE="15325"/>
    </FUNCTION>
    <FUNCTION NAME="GET_OVERACHING_DATA">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_YEAR" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CORE_OBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RISK" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_GET_OVERACHING_RECORD"/>
      <SUMMARY END_COLUMN="9" END_LINE="15779" LINES="360" START_COLUMN="10" START_LINE="15420"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DMS_DOC">
      <ARGUMENT MODE="IN" NAME="LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_DMS_DOC"/>
      <SUMMARY END_COLUMN="16" END_LINE="15988" LINES="209" START_COLUMN="11" START_LINE="15780"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_TST_FOR_CTRL">
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_RISK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_RISK_CTRL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="16043" LINES="53" START_COLUMN="10" START_LINE="15991"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_RISK_FOR_AE1">
      <ARGUMENT MODE="IN" NAME="LN_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="16141" LINES="96" START_COLUMN="10" START_LINE="16046"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_ALL_CTRL_FOR_RSK">
      <ARGUMENT MODE="IN" NAME="LN_RSK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="16205" LINES="63" START_COLUMN="13" START_LINE="16143"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_RISK_FOR_ORG1">
      <ARGUMENT MODE="IN" NAME="LN_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="16271" LINES="65" START_COLUMN="10" START_LINE="16207"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHECK_USERS_ACTIVITY">
      <ARGUMENT MODE="IN" NAME="LN_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="16294" LINES="21" START_COLUMN="11" START_LINE="16274"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DOCUMENT_ATTACHED">
      <ARGUMENT MODE="IN" NAME="DOCUMENT_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="16337" LINES="42" START_COLUMN="10" START_LINE="16296"/>
    </FUNCTION>
    <FUNCTION NAME="FN_SEND_ISSUES_REV_EDIT">
      <ARGUMENT MODE="IN" NAME="V_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="V_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="16361" LINES="24" START_COLUMN="10" START_LINE="16338"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CONCAT_TITLE_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ST" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="8" END_LINE="16401" LINES="39" START_COLUMN="14" START_LINE="16363"/>
    </FUNCTION>
    <FUNCTION NAME="GET_CHECKLIST_URL">
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CHECKLIST_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="8" END_LINE="16424" LINES="22" START_COLUMN="14" START_LINE="16403"/>
    </FUNCTION>
    <FUNCTION NAME="GET_TASK_DET">
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="16519" LINES="92" START_COLUMN="10" START_LINE="16428"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_DATA_CROSS_REF">
      <RETURN TYPE="MS_AUD_ISSUE_RECORD_CROSS"/>
      <SUMMARY END_COLUMN="29" END_LINE="16795" LINES="274" START_COLUMN="10" START_LINE="16522"/>
    </FUNCTION>
    <FUNCTION NAME="URL_ANNUAL_MULTIYEAR_REPORT">
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_EDIT_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_USER" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="16924" LINES="128" START_COLUMN="10" START_LINE="16797"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ISSUE_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSH_INFOLET" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_EDIT_FLAG" TYPE="VARCHAR2"/>
      <ARGUMENT DEFAULT="NULL" MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="17003" LINES="78" START_COLUMN="10" START_LINE="16926"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RISK_PID">
      <ARGUMENT MODE="IN" NAME="LC_RISK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="17" END_LINE="17026" LINES="23" START_COLUMN="10" START_LINE="17004"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_PLAN_SCOPE_STATUS_ID">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="17046" LINES="19" START_COLUMN="12" START_LINE="17028"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TASK_URL_CROSS_REF">
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="36" END_LINE="17092" LINES="45" START_COLUMN="16" START_LINE="17048"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RELATED_RISK_WO_AE">
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="17202" LINES="109" START_COLUMN="10" START_LINE="17094"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_AE_FOR_ORG_SCP_3">
      <ARGUMENT MODE="IN" NAME="LN_ORGANIZATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="17253" LINES="50" START_COLUMN="10" START_LINE="17204"/>
    </FUNCTION>
    <FUNCTION NAME="FN_API_GET_RSK_FOR_AE_SCP_3">
      <ARGUMENT MODE="IN" NAME="LN_AE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LN_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="35" END_LINE="17325" LINES="71" START_COLUMN="13" START_LINE="17255"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEST_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="26" END_LINE="17356" LINES="30" START_COLUMN="10" START_LINE="17327"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TST_FOR_CTRL">
      <ARGUMENT MODE="IN" NAME="LC_RISK_CTRL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="LC_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="17409" LINES="52" START_COLUMN="10" START_LINE="17358"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_TITLE_WP">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="29" END_LINE="17423" LINES="13" START_COLUMN="13" START_LINE="17411"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FND_DISP_VAL">
      <ARGUMENT MODE="IN" NAME="I_FN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="17468" LINES="44" START_COLUMN="14" START_LINE="17425"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUD_REPORT_CNT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="26" END_LINE="17488" LINES="19" START_COLUMN="10" START_LINE="17470"/>
    </FUNCTION>
    <FUNCTION NAME="FNGETAUDITREPORTID">
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="17519" LINES="30" START_COLUMN="10" START_LINE="17490"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_INSTANCE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_EMDFLAG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="15" END_LINE="17564" LINES="44" START_COLUMN="10" START_LINE="17521"/>
    </FUNCTION>
    <FUNCTION NAME="GET_USER_FULL_NAME">
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="17582" LINES="17" START_COLUMN="10" START_LINE="17566"/>
    </FUNCTION>
    <FUNCTION NAME="PLAN_EDIT">
      <ARGUMENT MODE="IN" NAME="I_DD_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_DD_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_DD_EDIT_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="23" END_LINE="17618" LINES="36" START_COLUMN="11" START_LINE="17583"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_ID_TRAIL_STATUS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STATUS" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="33" END_LINE="17646" LINES="28" START_COLUMN="10" START_LINE="17619"/>
    </FUNCTION>
    <FUNCTION NAME="GET_ASSESSMENTS">
      <ARGUMENT MODE="IN" NAME="I_SCENARIO_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_ASSESSMENT_REC"/>
      <SUMMARY END_COLUMN="4" END_LINE="17700" LINES="53" START_COLUMN="10" START_LINE="17648"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TEAM_DETLS">
      <ARGUMENT MODE="IN" NAME="I_CANDIDATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="22" END_LINE="17766" LINES="65" START_COLUMN="10" START_LINE="17702"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ACD_DETLS">
      <ARGUMENT MODE="IN" NAME="I_CANDIDATE_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="17808" LINES="41" START_COLUMN="10" START_LINE="17768"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_TSK_DETLS">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="17848" LINES="38" START_COLUMN="10" START_LINE="17811"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_TASK_DETAILS_DATA">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CONDUCTED_BY_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_START_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_CLOSURE_DATE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CORE_OBJECTS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RESTRICT_ACCESS_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATIONS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RISKS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_OWNER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCOPE_BASED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOCATIONS" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_TASK_DETAIL_REC"/>
      <SUMMARY END_COLUMN="31" END_LINE="18088" LINES="237" START_COLUMN="10" START_LINE="17852"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MILESTONE_DISP_VAL">
      <ARGUMENT MODE="IN" NAME="I_MILESTONE_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="27" END_LINE="18106" LINES="17" START_COLUMN="10" START_LINE="18090"/>
    </FUNCTION>
    <FUNCTION NAME="GET_DETAILED_AUDIT_LIST">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORGANIZATION" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_SCOPE_BASED_ON" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RESTRICT_ACCESS_TO" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_CLASSIFICATION" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LEAD_AUDITOR" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_MANAGER" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_STARTED_AFTER" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_COMPLETED_BEFORE" TYPE="DATE"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_STATUS" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CORE_OBJECT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_RISK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_ORG" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_PLAN_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOCATIONS" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_DETAILED_AUDIT_LIST_REC"/>
      <SUMMARY END_COLUMN="28" END_LINE="18593" LINES="486" START_COLUMN="10" START_LINE="18108"/>
    </FUNCTION>
    <FUNCTION NAME="GET_VIEW_TASK_DETAILS_DATA_DRL">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_TASK_DETAIL_REC"/>
      <SUMMARY END_COLUMN="35" END_LINE="18707" LINES="111" START_COLUMN="10" START_LINE="18597"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FORM_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_EMD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="20" END_LINE="18780" LINES="72" START_COLUMN="10" START_LINE="18709"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_REOPEN_AUDIT_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_EMD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="28" END_LINE="18833" LINES="52" START_COLUMN="10" START_LINE="18782"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHK_USER_FOR_REOPEN_ACTVTY">
      <COMMENT_FIRST_LINE><![CDATA[FUNCTION fn_chk_user_for_reopen_actvty (
i_org_id      IN   VARCHAR2,
i_user_name   IN   VARCHAR2
)
RETURN NUMBER
is
lc_count   NUMBER := 0;
BEGIN
SELECT COUNT (*)
INTO lc_count
FROM ms_aud_flow_down_org_v
WHERE org_entity_id = i_org_id
AND user_name = i_user_name
AND activity_name = 'AUD - Approve Re-open Audit';
IF lc_count &gt; 0
THEN
return 1;
ELSE
RETURN 0;
END IF;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_chk_user_for_reopen_actvty;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FUNCTION fn_chk_user_for_reopen_actvty (
i_org_id      IN   VARCHAR2,
i_user_name   IN   VARCHAR2
)
RETURN NUMBER
is
lc_count   NUMBER := 0;
BEGIN
SELECT COUNT (*)
INTO lc_count
FROM ms_aud_flow_down_org_v
WHERE org_entity_id = i_org_id
AND user_name = i_user_name
AND activity_name = 'AUD - Approve Re-open Audit';
IF lc_count &gt; 0
THEN
return 1;
ELSE
RETURN 0;
END IF;
EXCEPTION
WHEN OTHERS
THEN
RETURN NULL;
END fn_chk_user_for_reopen_actvty;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="34" END_LINE="18883" LINES="21" START_COLUMN="10" START_LINE="18863"/>
    </FUNCTION>
    <FUNCTION NAME="FN_CHK_USER_FOR_APP_REOPEN_ACT">
      <ARGUMENT MODE="IN" NAME="I_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="35" END_LINE="18905" LINES="21" START_COLUMN="10" START_LINE="18885"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_LAST_REOPENED_DATE">
      <ARGUMENT MODE="IN" NAME="PC_FLOW_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PC_STAGE_CODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PN_PROCESS_INSTANCE_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="PN_INSTANCE_ID" TYPE="NUMBER"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="18930" LINES="24" START_COLUMN="11" START_LINE="18907"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_FIELDS_EDITABILITY_JSON">
      <ARGUMENT MODE="IN" NAME="I_FORM_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="35" END_LINE="18957" LINES="26" START_COLUMN="10" START_LINE="18932"/>
    </FUNCTION>
    <PROCEDURE NAME="DEL_APS_DATA_ON_AUDIT_CLOSURE">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <SUMMARY END_COLUMN="34" END_LINE="19005" LINES="47" START_COLUMN="11" START_LINE="18959"/>
    </PROCEDURE>
    <FUNCTION NAME="FN_AUDIT_EXIST_FLAG">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="24" END_LINE="19028" LINES="22" START_COLUMN="10" START_LINE="19007"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_UPLOAD_FORM_PID">
      <ARGUMENT MODE="IN" NAME="I_FORM_TYPE" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="27" END_LINE="19046" LINES="17" START_COLUMN="10" START_LINE="19030"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_UPLOAD_DRAFT">
      <ARGUMENT MODE="IN" NAME="I_LEGACY_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_UPLOAD_DATA_INFO_REC"/>
      <SUMMARY END_COLUMN="30" END_LINE="19124" LINES="77" START_COLUMN="10" START_LINE="19048"/>
    </FUNCTION>
    <FUNCTION NAME="GET_LOCATION_DISP_VAL">
      <ARGUMENT MODE="IN" NAME="I_LOCATIONS" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="4" END_LINE="19156" LINES="30" START_COLUMN="10" START_LINE="19127"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_OPEN_ASSIGNMENTS">
      <COMMENT_FIRST_LINE><![CDATA[FOR i IN (SELECT DISTINCT process_instance_id, metric_id
FROM ms_aud_checklist_task_v
WHERE audit_id = ip_audit_id
UNION
SELECT DISTINCT process_instance_id, metric_id
FROM ms_aud_checklist_task_vs
WHERE audit_id = ip_audit_id)
LOOP
SELECT COUNT(1)
INTO lc_count
FROM si_event_assignments
WHERE infolet_id = i.metric_id
AND process_instance_id = i.process_instance_id;
IF lc_count &gt;0 THEN
RETURN 1;
END IF;
END LOOP;
RETURN 0;
EXCEPTION
WHEN OTHERS
THEN
RETURN 0;
END fn_get_open_assignments;
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[FOR i IN (SELECT DISTINCT process_instance_id, metric_id
FROM ms_aud_checklist_task_v
WHERE audit_id = ip_audit_id
UNION
SELECT DISTINCT process_instance_id, metric_id
FROM ms_aud_checklist_task_vs
WHERE audit_id = ip_audit_id)
LOOP
SELECT COUNT(1)
INTO lc_count
FROM si_event_assignments
WHERE infolet_id = i.metric_id
AND process_instance_id = i.process_instance_id;
IF lc_count &gt;0 THEN
RETURN 1;
END IF;
END LOOP;
RETURN 0;
EXCEPTION
WHEN OTHERS
THEN
RETURN 0;
END fn_get_open_assignments;
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_FLAG" TYPE="VARCHAR2"/>
      <RETURN TYPE="NUMBER"/>
      <SUMMARY END_COLUMN="31" END_LINE="19521" LINES="154" START_COLUMN="13" START_LINE="19368"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_GRC_MLOV_VALUES">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="30" END_LINE="19565" LINES="43" START_COLUMN="12" START_LINE="19523"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="21" END_LINE="19567" LINES="19567" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <PACKAGE NAME="MS_AUD_UTILITIES_2" SCHEMA="Schema_objects">
    <COMMENT><![CDATA[ ======================================================================<br/>
 Module: MS_AUD_UTILITIES_2<br/>
 Description: This package consists assorted list of procedures and
functions related to Audits<br/>
 ======================================================================<br/>
]]></COMMENT>
    <TAG TYPE="@HEADCOM">
      <COMMENT>
      </COMMENT>
    </TAG>
    <VARIABLE DEFAULT="NULL" NAME="G_DEBUG">
      <RETURN TYPE="VARCHAR2(1)"/>
    </VARIABLE>
    <VARIABLE NAME="LV_STATUS">
      <RETURN TYPE="VARCHAR2(100)"/>
    </VARIABLE>
    <FUNCTION NAME="FN_GET_ISSUE_ACTION_OO_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ This function generates HTML data for Issues and Action for a given Audit ID
 which is then rendered in the Open Office report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function generates HTML data for Issues and Action for a given Audit ID
 which is then rendered in the Open Office report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns HTML formatted Issues and Actions data as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[lt_in_data_orig holds the input-data passed by the calling environment]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns HTML formatted Issues and Actions data as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="21" LINES="2" START_COLUMN="12" START_LINE="20"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_TST_URL_SCOPE">
      <COMMENT_FIRST_LINE><![CDATA[ Constructs a URL based on the given object_id Control,Test,Risk
 for reports MS_AUD_RPT_Risks_APS,MS_AUD_RPT_Auditable_Entities
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Constructs a URL based on the given object_id Control,Test,Risk
 for reports MS_AUD_RPT_Risks_APS,MS_AUD_RPT_Auditable_Entities
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[CTRL,RSK,TST]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_object_id CTRL,RSK,TST]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="33" LINES="5" START_COLUMN="14" START_LINE="29"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DATA_CORRECTION_URL">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns the URL of Audit, Audit Plan-Scope, Tasks, Draft Issues
 and Audit Report forms if the logged in user has AUD - Data Correction activity
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns the URL of Audit, Audit Plan-Scope, Tasks, Draft Issues
 and Audit Report forms if the logged in user has AUD - Data Correction activity
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Push form name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Process Instance ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Instanc ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EMD" TYPE="VARCHAR2">
        <COMMENT><![CDATA[unique number to identify if the form opened through the URL is editable or not]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Yes or No for edit mode]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Text on which link is created]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns constructed URL of Audit, Audit Plan-Scope, Tasks, Draft Issues
 and Audit Report forms if the logged in user has AUD - Data Correction activity as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pushform_name Push form name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_pk_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_proc_inst_id Process Instance ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_inst_id Instanc ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_emd unique number to identify if the form opened through the URL is editable or not]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_editmode Yes or No for edit mode]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_hyper_text Text on which link is created]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name User Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns constructed URL of Audit, Audit Plan-Scope, Tasks, Draft Issues
 and Audit Report forms if the logged in user has AUD - Data Correction activity as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="20" END_LINE="59" LINES="11" START_COLUMN="14" START_LINE="49"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_STRING">
      <COMMENT_FIRST_LINE><![CDATA[ This function parses the input string based on the delimiter
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function parses the input string based on the delimiter
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="CLOB">
        <COMMENT><![CDATA[Text to be parsed]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[delimiter based on which parsing happens]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB_ARRAY">
        <COMMENT><![CDATA[Returns parsed string based on the given dilimiter as array CLOB_ARRAY]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_String Text to be parsed]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Delimiter delimiter based on which parsing happens]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns parsed string based on the given dilimiter as array CLOB_ARRAY]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="24" END_LINE="68" LINES="2" START_COLUMN="14" START_LINE="67"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_DISPLAY_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ This function gets the Risk Names associated with an Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function gets the Risk Names associated with an Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_RISK" TYPE="CLOB">
        <COMMENT><![CDATA[Aps_Risks column of ms_aud_audit]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Risk Names as comma separated string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Aud_Risk Aps_Risks column of ms_aud_audit]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Aud_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Risk Names as comma separated string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="7" END_LINE="78" LINES="3" START_COLUMN="14" START_LINE="76"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RSK_TITLES_FOR_AUD">
      <COMMENT_FIRST_LINE><![CDATA[ This function that calls Fn_Get_Risk_Display_Values to get the Risk Names
 associated with an Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function that calls Fn_Get_Risk_Display_Values to get the Risk Names
 associated with an Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns Risk Names as comma separated string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Aud_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Risk Names as comma separated string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="18" END_LINE="87" LINES="2" START_COLUMN="13" START_LINE="86"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ADHOC_RISK_DISP_VALUES">
      <COMMENT_FIRST_LINE><![CDATA[ This function gets the Adhoc Risk Names associated with an Audit ID
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function gets the Adhoc Risk Names associated with an Audit ID
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_RISK_STORE_VAL" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk Name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Adhoc Risk Names as comma separated string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_RISK_STORE_VAL Risk Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_AUDIT_ID Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Adhoc Risk Names as comma separated string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="22" END_LINE="96" LINES="2" START_COLUMN="13" START_LINE="95"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_FORM_URL">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns a URL constructed from the dynamically
 passed table name, column name, condition column, condition value
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns a URL constructed from the dynamically
 passed table name, column name, condition column, condition value
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_CONDITION_VALUE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Risk Name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_CONDITION_COLUMN" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns Adhoc Risk Names as comma separated string]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Condition_Value Risk Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Condition_Column Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Column_Name Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Table_Name Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[I_Aud_Id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Adhoc Risk Names as comma separated string]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="114" LINES="7" START_COLUMN="12" START_LINE="108"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FORM_URL_CHK">
      <COMMENT_FIRST_LINE><![CDATA[ This function returns part of URL string for fastforms
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ This function returns part of URL string for fastforms
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Form or Metric Name]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[ms_grc_core_object.object_id]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns part of URL string for fastforms as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_type Form or Metric Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[pv_object_id ms_grc_core_object.object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns part of URL string for fastforms as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="31" END_LINE="125" LINES="4" START_COLUMN="11" START_LINE="122"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MY_AUDIT_RPT">
      <COMMENT_FIRST_LINE><![CDATA[ Pipelined function that returns My Audits Report data
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Pipelined function that returns My Audits Report data
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_USER" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_MY_AUDIT_RPT_T">
        <COMMENT><![CDATA[Returns all the data required to be displated in My Audits report
as type ms_aud_my_audit_rpt_t]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_user User Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns all the data required to be displated in My Audits report
as type ms_aud_my_audit_rpt_t]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="4" END_LINE="135" LINES="3" START_COLUMN="11" START_LINE="133"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RPT_URL">
      <COMMENT_FIRST_LINE><![CDATA[ Constructs a URL on Task Count of report MS_AUD_Audit_Project_Tasks_Report_pf
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Constructs a URL on Task Count of report MS_AUD_Audit_Project_Tasks_Report_pf
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Logged in user]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a URL based on the Audit ID and Login ID as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id Logged in user]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a URL based on the Audit ID and Login ID as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="16" END_LINE="145" LINES="3" START_COLUMN="10" START_LINE="143"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RESPONSE_VAL">
      <COMMENT_FIRST_LINE><![CDATA[ Returns value Yes or No based on the quetion ids passed
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Returns value Yes or No based on the quetion ids passed
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Question ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_QST_PK_2" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Question ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Task ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns value Yes or No based on the quetion ids passed as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk Question ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_qst_pk_2 Question ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_task_id Task ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns value Yes or No based on the quetion ids passed as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="17" END_LINE="156" LINES="2" START_COLUMN="10" START_LINE="155"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS_ISSUE_ACT">
      <COMMENT_FIRST_LINE><![CDATA[ Fetches Issues and Actions for the given Audit ID to be rendered
 to open office report Audit Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Fetches Issues and Actions for the given Audit ID to be rendered
 to open office report Audit Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="CLOB">
        <COMMENT><![CDATA[Returns Issues and Actions for the given Audit ID in a HTML format as CLOB]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns Issues and Actions for the given Audit ID in a HTML format as CLOB]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="14" END_LINE="165" LINES="2" START_COLUMN="10" START_LINE="164"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MNG_AUD_TRAIL_RPT_DATA">
      <COMMENT_FIRST_LINE><![CDATA[ Fetches data for Audit Trial Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Fetches data for Audit Trial Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2">
        <COMMENT><![CDATA[Audit Title]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="MS_AUD_MNG_AUD_TRAIL_RPT_TBL">
        <COMMENT><![CDATA[Returns data for Audit Trial Report as type ms_aud_mng_aud_trail_rpt_tbl]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_title Audit Title]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_login_id  User Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns data for Audit Trial Report as type ms_aud_mng_aud_trail_rpt_tbl]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="49" END_LINE="177" LINES="5" START_COLUMN="10" START_LINE="173"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CURRENT_AUD_TEAM_LINK_2">
      <COMMENT_FIRST_LINE><![CDATA[ Constructs URL on Team Count of My Audits Report.]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Constructs URL on Team Count of My Audits Report. Replacement for
 the existing function fn_get_current_aud_team_link
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE">
        <COMMENT><![CDATA[Audit ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_METRIC_ID" TYPE="NUMBER">
        <COMMENT><![CDATA[Metric ID]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_TEAM_COUNT" TYPE="NUMBER">
        <COMMENT><![CDATA[Team Count]]></COMMENT>
      </ARGUMENT>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2">
        <COMMENT><![CDATA[User Name]]></COMMENT>
      </ARGUMENT>
      <RETURN TYPE="VARCHAR2">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_audit_id Audit ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Ip_Metric_Id Metric ID]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[Ip_Team_Count Team Count]]></COMMENT>
      </TAG>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[ip_user_name User Name]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns a URL as VARCHAR2]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="19" END_LINE="193" LINES="6" START_COLUMN="10" START_LINE="188"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COMMON_BROWSER_DRILL_AE">
      <COMMENT_FIRST_LINE><![CDATA[ Fetches the drill down info of Audit Entity Browser
 to open office report Audit Report
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[ Fetches the drill down info of Audit Entity Browser
 to open office report Audit Report
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_GRC_COMMON_BROWSER_TAB_TYPE">
        <COMMENT><![CDATA[Returns drill down info of Audit Entity Browser as type ms_grc_common_browser_tab_type]]></COMMENT>
      </RETURN>
      <TAG TYPE="@PARAM">
        <COMMENT><![CDATA[i_audit_id ms_grc_orb_relations.rel_source_object_id]]></COMMENT>
      </TAG>
      <TAG TYPE="@RETURN">
        <COMMENT><![CDATA[Returns drill down info of Audit Entity Browser as type ms_grc_common_browser_tab_type]]></COMMENT>
      </TAG>
      <SUMMARY END_COLUMN="48" END_LINE="204" LINES="4" START_COLUMN="10" START_LINE="201"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="4" END_LINE="206" LINES="206" START_COLUMN="41" START_LINE="1"/>
  </PACKAGE>
  <PACKAGE_BODY NAME="MS_AUD_UTILITIES_2" SCHEMA="Schema_objects">
    <FUNCTION NAME="FN_GET_ISSUE_ACTION_OO_RPT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="33" END_LINE="172" LINES="170" START_COLUMN="12" START_LINE="3"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CONTROL_TST_URL_SCOPE">
      <ARGUMENT MODE="IN" NAME="I_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_VAL" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="33" END_LINE="252" LINES="78" START_COLUMN="10" START_LINE="175"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_DATA_CORRECTION_URL">
      <ARGUMENT MODE="IN" NAME="IP_PUSHFORM_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PK_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_PROC_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_INST_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_EMD" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_EDITMODE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_HYPER_TEXT" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="31" END_LINE="391" LINES="138" START_COLUMN="10" START_LINE="254"/>
    </FUNCTION>
    <FUNCTION NAME="FN_PARSE_STRING">
      <ARGUMENT MODE="IN" NAME="I_STRING" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_DELIMITER" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB_ARRAY"/>
      <SUMMARY END_COLUMN="23" END_LINE="467" LINES="75" START_COLUMN="12" START_LINE="393"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_DISPLAY_VALUES">
      <ARGUMENT MODE="IN" NAME="I_AUD_RISK" TYPE="CLOB"/>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <COMMENT_FIRST_LINE><![CDATA[clob
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[clob
]]></COMMENT>
      <SUMMARY END_COLUMN="34" END_LINE="560" LINES="92" START_COLUMN="13" START_LINE="469"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RSK_TITLES_FOR_AUD">
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="33" END_LINE="575" LINES="14" START_COLUMN="13" START_LINE="562"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_ADHOC_RISK_DISP_VALUES">
      <ARGUMENT MODE="IN" NAME="I_RISK_STORE_VAL" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="37" END_LINE="619" LINES="43" START_COLUMN="14" START_LINE="577"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RISK_FORM_URL">
      <ARGUMENT MODE="IN" NAME="I_CONDITION_VALUE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_CONDITION_COLUMN" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_COLUMN_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TABLE_NAME" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUD_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="25" END_LINE="775" LINES="155" START_COLUMN="13" START_LINE="621"/>
    </FUNCTION>
    <FUNCTION NAME="GET_FORM_URL_CHK">
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_TYPE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="PV_OBJECT_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="21" END_LINE="827" LINES="51" START_COLUMN="10" START_LINE="777"/>
    </FUNCTION>
    <FUNCTION NAME="GET_RPT_URL">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="16" END_LINE="856" LINES="28" START_COLUMN="10" START_LINE="829"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_RESPONSE_VAL">
      <ARGUMENT MODE="IN" NAME="I_QST_PK" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_QST_PK_2" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_TASK_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="24" END_LINE="939" LINES="82" START_COLUMN="10" START_LINE="858"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_AUDIT_DETAILS_ISSUE_ACT">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <RETURN TYPE="CLOB"/>
      <SUMMARY END_COLUMN="35" END_LINE="1048" LINES="108" START_COLUMN="10" START_LINE="941"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MY_AUDIT_RPT">
      <ARGUMENT MODE="IN" NAME="I_LOGIN_USER" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_MY_AUDIT_RPT_T"/>
      <SUMMARY END_COLUMN="24" END_LINE="1546" LINES="497" START_COLUMN="10" START_LINE="1050"/>
    </FUNCTION>
    <FUNCTION NAME="GET_MNG_AUD_TRAIL_RPT_DATA">
      <ARGUMENT MODE="IN" NAME="I_AUDIT_TITLE" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="I_LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_AUD_MNG_AUD_TRAIL_RPT_TBL"/>
      <SUMMARY END_COLUMN="9" END_LINE="1683" LINES="136" START_COLUMN="10" START_LINE="1548"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_CURRENT_AUD_TEAM_LINK_2">
      <ARGUMENT MODE="IN" NAME="IP_AUDIT_ID" TYPE="MS_AUD_AUDIT.AUDIT_ID%TYPE"/>
      <ARGUMENT MODE="IN" NAME="IP_METRIC_ID" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_TEAM_COUNT" TYPE="NUMBER"/>
      <ARGUMENT MODE="IN" NAME="IP_USER_NAME" TYPE="VARCHAR2"/>
      <RETURN TYPE="VARCHAR2"/>
      <SUMMARY END_COLUMN="38" END_LINE="1749" LINES="65" START_COLUMN="13" START_LINE="1685"/>
    </FUNCTION>
    <FUNCTION NAME="FN_GET_COMMON_BROWSER_DRILL_AE">
      <COMMENT_FIRST_LINE><![CDATA[Added for AE Databrowser---
]]></COMMENT_FIRST_LINE>
      <COMMENT><![CDATA[Added for AE Databrowser---
]]></COMMENT>
      <ARGUMENT MODE="IN" NAME="P_OBJECT_ID" TYPE="VARCHAR2"/>
      <ARGUMENT MODE="IN" NAME="P_LOGIN_ID" TYPE="VARCHAR2"/>
      <RETURN TYPE="MS_GRC_COMMON_BROWSER_TAB_TYPE"/>
      <SUMMARY END_COLUMN="35" END_LINE="2252" LINES="500" START_COLUMN="10" START_LINE="1753"/>
    </FUNCTION>
    <SUMMARY END_COLUMN="4" END_LINE="2254" LINES="2254" START_COLUMN="44" START_LINE="1"/>
  </PACKAGE_BODY>
  <OBJECT_TYPE NAME="MS_AUD_VARCHAR2_ARRAY" SCHEMA="Schema_objects">
    <COLLECTIONTYPE NAME="TABLE"/>
    <SUPERTYPE NAME="CLOB">
      <RETURN COLLECTIONTYPE="TABLE" NAME="COLLECTION" SUPERTYPE="CLOB" TYPE="TABLE OF CLOB">
        <COMMENT><![CDATA[Collection Type : TABLE OF CLOB]]></COMMENT>
      </RETURN>
    </SUPERTYPE>
    <SUMMARY END_COLUMN="78" END_LINE="1" LINES="1" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_VIEW_TASK_DETAIL" SCHEMA="Schema_objects">
    <VARIABLE NAME="AUDIT_TITLE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDITOR" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="FINAL_APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="COMPLETION_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="DETAILS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="COACHING_NOTES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="REASSIGN_TASK_OWNER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="REASSIGN_TASK_APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_COMPLETION_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="PLANNED_FIELDWORK_START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="PL_COMPLETION_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="BUDGETED_HOURS" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="INSTRUCTIONS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TIME_SPENT" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_EXECUTION_RESULT" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="WORK_DONE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RESULTS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RTF_ATTACH" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CHECKLIST_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CHECKLIST_VERSION" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CHECKLIST_SCORE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="DRAFT_ISSUES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="OPEN_QUERIES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_ID" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="1" END_LINE="35" LINES="35" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <OBJECT_TYPE NAME="MS_AUD_VIEW_TASK_DETAILS" SCHEMA="Schema_objects">
    <VARIABLE NAME="TASK_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="STATUS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="AUDITOR" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="FINAL_APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="START_DATE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="COMPLETION_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_TYPE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="DETAILS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="COACHING_NOTES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="REASSIGN_TASK_OWNER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="REASSIGN_TASK_APPROVER" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_START_DATE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_COMPLETION_DATE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="PLANNED_FIELDWORK_START_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="PL_COMPLETION_DATE" VERSION="1">
      <RETURN TYPE="DATE"/>
    </VARIABLE>
    <VARIABLE NAME="BUDGETED_HOURS" VERSION="1">
      <RETURN TYPE="NUMBER"/>
    </VARIABLE>
    <VARIABLE NAME="INSTRUCTIONS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TIME_SPENT" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="TASK_EXECUTION_RESULT" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="WORK_DONE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RESULTS" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="RTF_ATTACH" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CHECKLIST_NAME" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CHECKLIST_VERSION" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="CHECKLIST_SCORE" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="DRAFT_ISSUES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <VARIABLE NAME="OPEN_QUERIES" VERSION="1">
      <RETURN TYPE="VARCHAR2(4000)"/>
    </VARIABLE>
    <SUMMARY END_COLUMN="2" END_LINE="30" LINES="30" START_COLUMN="38" START_LINE="1"/>
  </OBJECT_TYPE>
  <GENERATOR>
    <OBJECTS>
      <PROCESSED COUNT="1"/>
      <SKIPPED COUNT="0"/>
    </OBJECTS>
    <CREATED DATE="23/4/15" TIME="5:51 PM"/>
    <SETTINGS DEFAULT_KEYWORDS_CASE="UPPER" DEFAULT_NAMES_CASE="UPPER" IGNORE_INFORMAL_COMMENTS="FALSE" INPUT_ENCODING="Cp1252" KEYWORDS_TO_DEFAULT_CASE="TRUE" KEYWORDS_TO_LOWER_CASE="FALSE" KEYWORDS_TO_UPPER_CASE="FALSE" NAMES_TO_DEFAULT_CASE="TRUE" NAMES_TO_LOWER_CASE="FALSE" NAMES_TO_UPPER_CASE="FALSE" SHOW_SKIPPED_PACKAGES="FALSE" VERBOSE="FALSE"/>
  </GENERATOR>
</APPLICATION>